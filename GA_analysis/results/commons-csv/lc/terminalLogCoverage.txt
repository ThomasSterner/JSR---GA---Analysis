WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
[m23.08.2022 - 09:08:11.746 [INFO ] ParsingStrategy.parseTestSuiteFromFilePath() - Parsing test suite from File Path
[m[m23.08.2022 - 09:08:11.749 [INFO ] CompilationUnitExtractor.parseCompilationUnitsFromFilePath() - Collecting compilation units from File Path /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/test/java
[m[m23.08.2022 - 09:08:12.274 [INFO ] ParsingStrategy.parseTestSuite() - Found 7 test cases
[m[m23.08.2022 - 09:08:12.275 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.issues.JiraCsv203Test::testQuoteModeAll has 1 assertions: 
 Assert.assertEquals("\"N/A\",\"Hello\",\"N/A\",\"World\"\r\n", buffer.toString()); ref {Assert, buffer} [41-41]
[m[m23.08.2022 - 09:08:12.276 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.issues.JiraCsv203Test::testQuoteModeAllNonNull has 1 assertions: 
 Assert.assertEquals("N/A,\"Hello\",N/A,\"World\"\r\n", buffer.toString()); ref {Assert, buffer} [55-55]
[m[m23.08.2022 - 09:08:12.276 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.issues.JiraCsv203Test::testWithoutQuoteMode has 1 assertions: 
 Assert.assertEquals("N/A,Hello,N/A,World\r\n", buffer.toString()); ref {Assert, buffer} [68-68]
[m[m23.08.2022 - 09:08:12.276 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.issues.JiraCsv203Test::testQuoteModeMinimal has 1 assertions: 
 Assert.assertEquals("N/A,Hello,N/A,World\r\n", buffer.toString()); ref {Assert, buffer} [82-82]
[m[m23.08.2022 - 09:08:12.276 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.issues.JiraCsv203Test::testQuoteModeNonNumeric has 1 assertions: 
 Assert.assertEquals("N/A,\"Hello\",N/A,\"World\"\r\n", buffer.toString()); ref {Assert, buffer} [96-96]
[m[m23.08.2022 - 09:08:12.276 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.issues.JiraCsv203Test::testWithoutNullString has 1 assertions: 
 Assert.assertEquals(",\"Hello\",,\"World\"\r\n", buffer.toString()); ref {Assert, buffer} [110-110]
[m[m23.08.2022 - 09:08:12.277 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.issues.JiraCsv203Test::testWithEmptyValues has 1 assertions: 
 Assert.assertEquals("\"\",\"Hello\",\"\",\"World\"\r\n", buffer.toString()); ref {Assert, buffer} [125-125]
[m[m23.08.2022 - 09:08:12.278 [INFO ] ParsingStrategy.parseTestSuite() - Found 10 test cases
[m[m23.08.2022 - 09:08:12.278 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatPredefinedTest::testDefault has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.278 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatPredefinedTest::testExcel has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.279 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatPredefinedTest::testMySQL has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.279 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatPredefinedTest::testOracle has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.279 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatPredefinedTest::testPostgreSqlCsv has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.279 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatPredefinedTest::testMongoDbCsv has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.279 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatPredefinedTest::testMongoDbTsv has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.279 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatPredefinedTest::testPostgreSqlText has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.280 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatPredefinedTest::testRFC4180 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.280 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatPredefinedTest::testTDF has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.292 [INFO ] ParsingStrategy.parseTestSuite() - Found 5 test cases
[m[m23.08.2022 - 09:08:12.293 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.ExtendedBufferedReaderTest::testEmptyInput has 5 assertions: 
 assertEquals(END_OF_STREAM, br.read()); ref {br, END_OF_STREAM} [38-38],
 assertEquals(END_OF_STREAM, br.lookAhead()); ref {br, END_OF_STREAM} [39-39],
 assertEquals(END_OF_STREAM, br.getLastChar()); ref {br, END_OF_STREAM} [40-40],
 assertNull(br.readLine()); ref {br} [41-41],
 assertEquals(0, br.read(new char[10], 0, 0)); ref {br} [42-42]
[m[m23.08.2022 - 09:08:12.294 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.ExtendedBufferedReaderTest::testReadLookahead1 has 46 assertions: 
 assertEquals(0, br.getCurrentLineNumber()); ref {br} [49-49],
 assertEquals('1', br.lookAhead()); ref {br} [50-50],
 assertEquals(UNDEFINED, br.getLastChar()); ref {br, UNDEFINED} [51-51],
 assertEquals(0, br.getCurrentLineNumber()); ref {br} [52-52],
 // Start line 1
assertEquals('1', br.read()); ref {br} [53-53],
 assertEquals('1', br.getLastChar()); ref {br} [54-54],
 assertEquals(1, br.getCurrentLineNumber()); ref {br} [56-56],
 assertEquals('\n', br.lookAhead()); ref {br} [57-57],
 assertEquals(1, br.getCurrentLineNumber()); ref {br} [58-58],
 assertEquals('1', br.getLastChar()); ref {br} [59-59],
 assertEquals('\n', br.read()); ref {br} [60-60],
 assertEquals(1, br.getCurrentLineNumber()); ref {br} [61-61],
 assertEquals('\n', br.getLastChar()); ref {br} [62-62],
 assertEquals(1, br.getCurrentLineNumber()); ref {br} [63-63],
 assertEquals('2', br.lookAhead()); ref {br} [65-65],
 assertEquals(1, br.getCurrentLineNumber()); ref {br} [66-66],
 assertEquals('\n', br.getLastChar()); ref {br} [67-67],
 assertEquals(1, br.getCurrentLineNumber()); ref {br} [68-68],
 // Start line 2
assertEquals('2', br.read()); ref {br} [69-69],
 assertEquals(2, br.getCurrentLineNumber()); ref {br} [70-70],
 assertEquals('2', br.getLastChar()); ref {br} [71-71],
 assertEquals('\r', br.lookAhead()); ref {br} [73-73],
 assertEquals(2, br.getCurrentLineNumber()); ref {br} [74-74],
 assertEquals('2', br.getLastChar()); ref {br} [75-75],
 assertEquals('\r', br.read()); ref {br} [76-76],
 assertEquals('\r', br.getLastChar()); ref {br} [77-77],
 assertEquals(2, br.getCurrentLineNumber()); ref {br} [78-78],
 assertEquals('3', br.lookAhead()); ref {br} [80-80],
 assertEquals('\r', br.getLastChar()); ref {br} [81-81],
 // Start line 3
assertEquals('3', br.read()); ref {br} [82-82],
 assertEquals('3', br.getLastChar()); ref {br} [83-83],
 assertEquals(3, br.getCurrentLineNumber()); ref {br} [84-84],
 assertEquals('\n', br.lookAhead()); ref {br} [86-86],
 assertEquals(3, br.getCurrentLineNumber()); ref {br} [87-87],
 assertEquals('3', br.getLastChar()); ref {br} [88-88],
 assertEquals('\n', br.read()); ref {br} [89-89],
 assertEquals(3, br.getCurrentLineNumber()); ref {br} [90-90],
 assertEquals('\n', br.getLastChar()); ref {br} [91-91],
 assertEquals(3, br.getCurrentLineNumber()); ref {br} [92-92],
 assertEquals(END_OF_STREAM, br.lookAhead()); ref {br, END_OF_STREAM} [94-94],
 assertEquals('\n', br.getLastChar()); ref {br} [95-95],
 assertEquals(END_OF_STREAM, br.read()); ref {br, END_OF_STREAM} [96-96],
 assertEquals(END_OF_STREAM, br.getLastChar()); ref {br, END_OF_STREAM} [97-97],
 assertEquals(END_OF_STREAM, br.read()); ref {br, END_OF_STREAM} [98-98],
 assertEquals(END_OF_STREAM, br.lookAhead()); ref {br, END_OF_STREAM} [99-99],
 assertEquals(3, br.getCurrentLineNumber()); ref {br} [100-100]
[m[m23.08.2022 - 09:08:12.295 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.ExtendedBufferedReaderTest::testReadLookahead2 has 7 assertions: 
 assertEquals(3, br.read(res, 0, 3)); ref {br, res} [114-114],
 assertArrayEquals(ref, res); ref {res, ref} [115-115],
 assertEquals('c', br.getLastChar()); ref {br} [116-116],
 assertEquals('d', br.lookAhead()); ref {br} [118-118],
 assertEquals(1, br.read(res, 4, 1)); ref {br, res} [120-120],
 assertArrayEquals(ref, res); ref {res, ref} [121-121],
 assertEquals('d', br.getLastChar()); ref {br} [122-122]
[m[m23.08.2022 - 09:08:12.296 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.ExtendedBufferedReaderTest::testReadLine has 29 assertions: 
 assertNull(br.readLine()); ref {br} [129-129],
 assertEquals("", br.readLine()); ref {br} [132-132],
 assertNull(br.readLine()); ref {br} [133-133],
 assertEquals(0, br.getCurrentLineNumber()); ref {br} [136-136],
 assertEquals("foo", br.readLine()); ref {br} [137-137],
 assertEquals(1, br.getCurrentLineNumber()); ref {br} [138-138],
 assertEquals("", br.readLine()); ref {br} [139-139],
 assertEquals(2, br.getCurrentLineNumber()); ref {br} [140-140],
 assertEquals("hello", br.readLine()); ref {br} [141-141],
 assertEquals(3, br.getCurrentLineNumber()); ref {br} [142-142],
 assertNull(br.readLine()); ref {br} [143-143],
 assertEquals(3, br.getCurrentLineNumber()); ref {br} [144-144],
 assertEquals('f', br.read()); ref {br} [147-147],
 assertEquals('o', br.lookAhead()); ref {br} [148-148],
 assertEquals("oo", br.readLine()); ref {br} [149-149],
 assertEquals(1, br.getCurrentLineNumber()); ref {br} [150-150],
 assertEquals('\n', br.lookAhead()); ref {br} [151-151],
 assertEquals("", br.readLine()); ref {br} [152-152],
 assertEquals(2, br.getCurrentLineNumber()); ref {br} [153-153],
 assertEquals('h', br.lookAhead()); ref {br} [154-154],
 assertEquals("hello", br.readLine()); ref {br} [155-155],
 assertNull(br.readLine()); ref {br} [156-156],
 assertEquals(3, br.getCurrentLineNumber()); ref {br} [157-157],
 assertEquals("foo", br.readLine()); ref {br} [160-160],
 assertEquals('b', br.lookAhead()); ref {br} [161-161],
 assertEquals("baar", br.readLine()); ref {br} [162-162],
 assertEquals('f', br.lookAhead()); ref {br} [163-163],
 assertEquals("foo", br.readLine()); ref {br} [164-164],
 assertNull(br.readLine()); ref {br} [165-165]
[m[m23.08.2022 - 09:08:12.297 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.ExtendedBufferedReaderTest::testReadChar has 6 assertions: 
 assertEquals(0, br.getCurrentLineNumber()); ref {br} [184-184],
 assertEquals(EOLeolct, br.getCurrentLineNumber()); ref {EOLeolct, br} [188-188],
 assertEquals(0, br.getCurrentLineNumber()); ref {br} [191-191],
 assertEquals(EOLeolct, br.getCurrentLineNumber()); ref {EOLeolct, br} [195-195],
 assertEquals(0, br.getCurrentLineNumber()); ref {br} [198-198],
 assertEquals(EOLeolct, br.getCurrentLineNumber()); ref {EOLeolct, br} [203-203]
[m[m23.08.2022 - 09:08:12.297 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m23.08.2022 - 09:08:12.298 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.issues.JiraCsv198Test::test has 2 assertions: 
 Assert.assertNotNull(pointsOfReference); ref {Assert, pointsOfReference} [37-37],
 Assert.assertNotNull(locationType); ref {Assert, locationType} [42-42]
[m[m23.08.2022 - 09:08:12.299 [INFO ] ParsingStrategy.parseTestSuite() - Found 12 test cases
[m[m23.08.2022 - 09:08:12.299 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFileParserTestUnParameterized::testCSVFile0 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.299 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFileParserTestUnParameterized::testCSVUrl0 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.299 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFileParserTestUnParameterized::testCSVFile1 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.299 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFileParserTestUnParameterized::testCSVUrl1 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.299 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFileParserTestUnParameterized::testCSVFile2 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.299 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFileParserTestUnParameterized::testCSVUrl2 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.300 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFileParserTestUnParameterized::testCSVFile3 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.300 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFileParserTestUnParameterized::testCSVUrl3 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.300 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFileParserTestUnParameterized::testCSVFile4 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.300 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFileParserTestUnParameterized::testCSVUrl4 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.300 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFileParserTestUnParameterized::testCSVFile5 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.300 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFileParserTestUnParameterized::testCSVUrl5 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.338 [INFO ] ParsingStrategy.parseTestSuite() - Found 56 test cases
[m[m23.08.2022 - 09:08:12.338 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testDelimiterSameAsCommentStartThrowsException has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.338 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testDelimiterSameAsEscapeThrowsException has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.338 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testDuplicateHeaderElements has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.339 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEquals has 7 assertions: 
 assertFalse(right.equals(null)); ref {right} [84-84],
 assertFalse(right.equals("A String Instance")); ref {right} [85-85],
 assertEquals(right, right); ref {right} [87-87],
 assertEquals(right, left); ref {left, right} [88-88],
 assertEquals(left, right); ref {left, right} [89-89],
 assertEquals(right.hashCode(), right.hashCode()); ref {right} [91-91],
 assertEquals(right.hashCode(), left.hashCode()); ref {left, right} [92-92]
[m[m23.08.2022 - 09:08:12.339 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsCommentStart has 1 assertions: 
 assertNotEquals(right, left); ref {left, right} [104-104]
[m[m23.08.2022 - 09:08:12.339 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsDelimiter has 1 assertions: 
 assertNotEquals(right, left); ref {left, right} [112-112]
[m[m23.08.2022 - 09:08:12.339 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsEscape has 1 assertions: 
 assertNotEquals(right, left); ref {left, right} [125-125]
[m[m23.08.2022 - 09:08:12.339 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsHeader has 1 assertions: 
 assertNotEquals(right, left); ref {left, right} [142-142]
[m[m23.08.2022 - 09:08:12.339 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsIgnoreEmptyLines has 1 assertions: 
 assertNotEquals(right, left); ref {left, right} [157-157]
[m[m23.08.2022 - 09:08:12.340 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsIgnoreSurroundingSpaces has 1 assertions: 
 assertNotEquals(right, left); ref {left, right} [171-171]
[m[m23.08.2022 - 09:08:12.340 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsLeftNoQuoteRightQuote has 1 assertions: 
 assertNotEquals(left, right); ref {left, right} [179-179]
[m[m23.08.2022 - 09:08:12.340 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsNoQuotes has 1 assertions: 
 assertEquals(left, right); ref {left, right} [187-187]
[m[m23.08.2022 - 09:08:12.340 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsNullString has 1 assertions: 
 assertNotEquals(right, left); ref {left, right} [204-204]
[m[m23.08.2022 - 09:08:12.342 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsOne has 79 assertions: 
 assertEquals('\\', (char) cSVFormatOne.getEscapeCharacter()); ref {cSVFormatOne} [214-214],
 assertNull(cSVFormatOne.getQuoteMode()); ref {cSVFormatOne} [215-215],
 assertTrue(cSVFormatOne.getIgnoreEmptyLines()); ref {cSVFormatOne} [217-217],
 assertFalse(cSVFormatOne.getSkipHeaderRecord()); ref {cSVFormatOne} [218-218],
 assertFalse(cSVFormatOne.getIgnoreHeaderCase()); ref {cSVFormatOne} [220-220],
 assertNull(cSVFormatOne.getCommentMarker()); ref {cSVFormatOne} [221-221],
 assertFalse(cSVFormatOne.isCommentMarkerSet()); ref {cSVFormatOne} [223-223],
 assertTrue(cSVFormatOne.isQuoteCharacterSet()); ref {cSVFormatOne} [224-224],
 assertEquals('|', cSVFormatOne.getDelimiter()); ref {cSVFormatOne} [226-226],
 assertFalse(cSVFormatOne.getAllowMissingColumnNames()); ref {cSVFormatOne} [227-227],
 assertTrue(cSVFormatOne.isEscapeCharacterSet()); ref {cSVFormatOne} [229-229],
 assertEquals("\n", cSVFormatOne.getRecordSeparator()); ref {cSVFormatOne} [230-230],
 assertEquals('\"', (char) cSVFormatOne.getQuoteCharacter()); ref {cSVFormatOne} [232-232],
 assertFalse(cSVFormatOne.getTrailingDelimiter()); ref {cSVFormatOne} [233-233],
 assertFalse(cSVFormatOne.getTrim()); ref {cSVFormatOne} [235-235],
 assertFalse(cSVFormatOne.isNullStringSet()); ref {cSVFormatOne} [236-236],
 assertNull(cSVFormatOne.getNullString()); ref {cSVFormatOne} [238-238],
 assertFalse(cSVFormatOne.getIgnoreSurroundingSpaces()); ref {cSVFormatOne} [239-239],
 assertTrue(cSVFormatTwo.isEscapeCharacterSet()); ref {cSVFormatTwo} [242-242],
 assertNull(cSVFormatTwo.getQuoteCharacter()); ref {cSVFormatTwo} [243-243],
 assertFalse(cSVFormatTwo.getAllowMissingColumnNames()); ref {cSVFormatTwo} [245-245],
 assertEquals(QuoteMode.ALL_NON_NULL, cSVFormatTwo.getQuoteMode()); ref {QuoteMode.ALL_NON_NULL, QuoteMode, cSVFormatTwo} [246-246],
 assertEquals('\t', cSVFormatTwo.getDelimiter()); ref {cSVFormatTwo} [248-248],
 assertEquals("\n", cSVFormatTwo.getRecordSeparator()); ref {cSVFormatTwo} [249-249],
 assertFalse(cSVFormatTwo.isQuoteCharacterSet()); ref {cSVFormatTwo} [251-251],
 assertTrue(cSVFormatTwo.isNullStringSet()); ref {cSVFormatTwo} [252-252],
 assertEquals('\\', (char) cSVFormatTwo.getEscapeCharacter()); ref {cSVFormatTwo} [254-254],
 assertFalse(cSVFormatTwo.getIgnoreHeaderCase()); ref {cSVFormatTwo} [255-255],
 assertFalse(cSVFormatTwo.getTrim()); ref {cSVFormatTwo} [257-257],
 assertFalse(cSVFormatTwo.getIgnoreEmptyLines()); ref {cSVFormatTwo} [258-258],
 assertEquals("\\N", cSVFormatTwo.getNullString()); ref {cSVFormatTwo} [260-260],
 assertFalse(cSVFormatTwo.getIgnoreSurroundingSpaces()); ref {cSVFormatTwo} [261-261],
 assertFalse(cSVFormatTwo.getTrailingDelimiter()); ref {cSVFormatTwo} [263-263],
 assertFalse(cSVFormatTwo.getSkipHeaderRecord()); ref {cSVFormatTwo} [264-264],
 assertNull(cSVFormatTwo.getCommentMarker()); ref {cSVFormatTwo} [266-266],
 assertFalse(cSVFormatTwo.isCommentMarkerSet()); ref {cSVFormatTwo} [267-267],
 assertNotSame(cSVFormatTwo, cSVFormatOne); ref {cSVFormatOne, cSVFormatTwo} [269-269],
 assertFalse(cSVFormatTwo.equals(cSVFormatOne)); ref {cSVFormatOne, cSVFormatTwo} [270-270],
 assertEquals('\\', (char) cSVFormatOne.getEscapeCharacter()); ref {cSVFormatOne} [272-272],
 assertNull(cSVFormatOne.getQuoteMode()); ref {cSVFormatOne} [273-273],
 assertTrue(cSVFormatOne.getIgnoreEmptyLines()); ref {cSVFormatOne} [275-275],
 assertFalse(cSVFormatOne.getSkipHeaderRecord()); ref {cSVFormatOne} [276-276],
 assertFalse(cSVFormatOne.getIgnoreHeaderCase()); ref {cSVFormatOne} [278-278],
 assertNull(cSVFormatOne.getCommentMarker()); ref {cSVFormatOne} [279-279],
 assertFalse(cSVFormatOne.isCommentMarkerSet()); ref {cSVFormatOne} [281-281],
 assertTrue(cSVFormatOne.isQuoteCharacterSet()); ref {cSVFormatOne} [282-282],
 assertEquals('|', cSVFormatOne.getDelimiter()); ref {cSVFormatOne} [284-284],
 assertFalse(cSVFormatOne.getAllowMissingColumnNames()); ref {cSVFormatOne} [285-285],
 assertTrue(cSVFormatOne.isEscapeCharacterSet()); ref {cSVFormatOne} [287-287],
 assertEquals("\n", cSVFormatOne.getRecordSeparator()); ref {cSVFormatOne} [288-288],
 assertEquals('\"', (char) cSVFormatOne.getQuoteCharacter()); ref {cSVFormatOne} [290-290],
 assertFalse(cSVFormatOne.getTrailingDelimiter()); ref {cSVFormatOne} [291-291],
 assertFalse(cSVFormatOne.getTrim()); ref {cSVFormatOne} [293-293],
 assertFalse(cSVFormatOne.isNullStringSet()); ref {cSVFormatOne} [294-294],
 assertNull(cSVFormatOne.getNullString()); ref {cSVFormatOne} [296-296],
 assertFalse(cSVFormatOne.getIgnoreSurroundingSpaces()); ref {cSVFormatOne} [297-297],
 assertTrue(cSVFormatTwo.isEscapeCharacterSet()); ref {cSVFormatTwo} [299-299],
 assertNull(cSVFormatTwo.getQuoteCharacter()); ref {cSVFormatTwo} [300-300],
 assertFalse(cSVFormatTwo.getAllowMissingColumnNames()); ref {cSVFormatTwo} [302-302],
 assertEquals(QuoteMode.ALL_NON_NULL, cSVFormatTwo.getQuoteMode()); ref {QuoteMode.ALL_NON_NULL, QuoteMode, cSVFormatTwo} [303-303],
 assertEquals('\t', cSVFormatTwo.getDelimiter()); ref {cSVFormatTwo} [305-305],
 assertEquals("\n", cSVFormatTwo.getRecordSeparator()); ref {cSVFormatTwo} [306-306],
 assertFalse(cSVFormatTwo.isQuoteCharacterSet()); ref {cSVFormatTwo} [308-308],
 assertTrue(cSVFormatTwo.isNullStringSet()); ref {cSVFormatTwo} [309-309],
 assertEquals('\\', (char) cSVFormatTwo.getEscapeCharacter()); ref {cSVFormatTwo} [311-311],
 assertFalse(cSVFormatTwo.getIgnoreHeaderCase()); ref {cSVFormatTwo} [312-312],
 assertFalse(cSVFormatTwo.getTrim()); ref {cSVFormatTwo} [314-314],
 assertFalse(cSVFormatTwo.getIgnoreEmptyLines()); ref {cSVFormatTwo} [315-315],
 assertEquals("\\N", cSVFormatTwo.getNullString()); ref {cSVFormatTwo} [317-317],
 assertFalse(cSVFormatTwo.getIgnoreSurroundingSpaces()); ref {cSVFormatTwo} [318-318],
 assertFalse(cSVFormatTwo.getTrailingDelimiter()); ref {cSVFormatTwo} [320-320],
 assertFalse(cSVFormatTwo.getSkipHeaderRecord()); ref {cSVFormatTwo} [321-321],
 assertNull(cSVFormatTwo.getCommentMarker()); ref {cSVFormatTwo} [323-323],
 assertFalse(cSVFormatTwo.isCommentMarkerSet()); ref {cSVFormatTwo} [324-324],
 assertNotSame(cSVFormatOne, cSVFormatTwo); ref {cSVFormatOne, cSVFormatTwo} [326-326],
 assertNotSame(cSVFormatTwo, cSVFormatOne); ref {cSVFormatOne, cSVFormatTwo} [327-327],
 assertFalse(cSVFormatOne.equals(cSVFormatTwo)); ref {cSVFormatOne, cSVFormatTwo} [329-329],
 assertFalse(cSVFormatTwo.equals(cSVFormatOne)); ref {cSVFormatOne, cSVFormatTwo} [330-330],
 assertFalse(cSVFormatTwo.equals(cSVFormatOne)); ref {cSVFormatOne, cSVFormatTwo} [332-332]
[m[m23.08.2022 - 09:08:12.342 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsQuoteChar has 1 assertions: 
 assertNotEquals(right, left); ref {left, right} [341-341]
[m[m23.08.2022 - 09:08:12.342 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsQuotePolicy has 1 assertions: 
 assertNotEquals(right, left); ref {left, right} [352-352]
[m[m23.08.2022 - 09:08:12.342 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsRecordSeparator has 1 assertions: 
 assertNotEquals(right, left); ref {left, right} [368-368]
[m[m23.08.2022 - 09:08:12.343 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsSkipHeaderRecord has 1 assertions: 
 assertNotEquals(right, left); ref {left, right} [386-386]
[m[m23.08.2022 - 09:08:12.343 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEqualsWithNull has 37 assertions: 
 assertEquals('\\', (char) cSVFormat.getEscapeCharacter()); ref {cSVFormat} [394-394],
 assertFalse(cSVFormat.getIgnoreSurroundingSpaces()); ref {cSVFormat} [395-395],
 assertFalse(cSVFormat.getTrailingDelimiter()); ref {cSVFormat} [397-397],
 assertFalse(cSVFormat.getTrim()); ref {cSVFormat} [398-398],
 assertTrue(cSVFormat.isQuoteCharacterSet()); ref {cSVFormat} [400-400],
 assertEquals("\\N", cSVFormat.getNullString()); ref {cSVFormat} [401-401],
 assertFalse(cSVFormat.getIgnoreHeaderCase()); ref {cSVFormat} [403-403],
 assertTrue(cSVFormat.isEscapeCharacterSet()); ref {cSVFormat} [404-404],
 assertFalse(cSVFormat.isCommentMarkerSet()); ref {cSVFormat} [406-406],
 assertNull(cSVFormat.getCommentMarker()); ref {cSVFormat} [407-407],
 assertFalse(cSVFormat.getAllowMissingColumnNames()); ref {cSVFormat} [409-409],
 assertEquals(QuoteMode.ALL_NON_NULL, cSVFormat.getQuoteMode()); ref {QuoteMode.ALL_NON_NULL, QuoteMode, cSVFormat} [410-410],
 assertEquals('\t', cSVFormat.getDelimiter()); ref {cSVFormat} [412-412],
 assertFalse(cSVFormat.getSkipHeaderRecord()); ref {cSVFormat} [413-413],
 assertEquals("\n", cSVFormat.getRecordSeparator()); ref {cSVFormat} [415-415],
 assertFalse(cSVFormat.getIgnoreEmptyLines()); ref {cSVFormat} [416-416],
 assertEquals('\"', (char) cSVFormat.getQuoteCharacter()); ref {cSVFormat} [418-418],
 assertTrue(cSVFormat.isNullStringSet()); ref {cSVFormat} [419-419],
 assertEquals('\\', (char) cSVFormat.getEscapeCharacter()); ref {cSVFormat} [421-421],
 assertFalse(cSVFormat.getIgnoreSurroundingSpaces()); ref {cSVFormat} [422-422],
 assertFalse(cSVFormat.getTrailingDelimiter()); ref {cSVFormat} [424-424],
 assertFalse(cSVFormat.getTrim()); ref {cSVFormat} [425-425],
 assertTrue(cSVFormat.isQuoteCharacterSet()); ref {cSVFormat} [427-427],
 assertEquals("\\N", cSVFormat.getNullString()); ref {cSVFormat} [428-428],
 assertFalse(cSVFormat.getIgnoreHeaderCase()); ref {cSVFormat} [430-430],
 assertTrue(cSVFormat.isEscapeCharacterSet()); ref {cSVFormat} [431-431],
 assertFalse(cSVFormat.isCommentMarkerSet()); ref {cSVFormat} [433-433],
 assertNull(cSVFormat.getCommentMarker()); ref {cSVFormat} [434-434],
 assertFalse(cSVFormat.getAllowMissingColumnNames()); ref {cSVFormat} [436-436],
 assertEquals(QuoteMode.ALL_NON_NULL, cSVFormat.getQuoteMode()); ref {QuoteMode.ALL_NON_NULL, QuoteMode, cSVFormat} [437-437],
 assertEquals('\t', cSVFormat.getDelimiter()); ref {cSVFormat} [439-439],
 assertFalse(cSVFormat.getSkipHeaderRecord()); ref {cSVFormat} [440-440],
 assertEquals("\n", cSVFormat.getRecordSeparator()); ref {cSVFormat} [442-442],
 assertFalse(cSVFormat.getIgnoreEmptyLines()); ref {cSVFormat} [443-443],
 assertEquals('\"', (char) cSVFormat.getQuoteCharacter()); ref {cSVFormat} [445-445],
 assertTrue(cSVFormat.isNullStringSet()); ref {cSVFormat} [446-446],
 assertFalse(cSVFormat.equals(null)); ref {cSVFormat} [448-448]
[m[m23.08.2022 - 09:08:12.344 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEscapeSameAsCommentStartThrowsException has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.344 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testEscapeSameAsCommentStartThrowsExceptionForWrapperType has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.344 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testFormat has 3 assertions: 
 assertEquals("", format.format()); ref {format} [467-467],
 assertEquals("a,b,c", format.format("a", "b", "c")); ref {format} [468-468],
 assertEquals("\"x,y\",z", format.format("x,y", "z")); ref {format} [469-469]
[m[m23.08.2022 - 09:08:12.344 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testFormatThrowsNullPointerException has 1 assertions: 
 assertEquals(CSVFormat.class.getName(), e.getStackTrace()[0].getClassName()); ref {e} [481-481]
[m[m23.08.2022 - 09:08:12.344 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testGetHeader has 2 assertions: 
 assertFalse(Arrays.equals(formatWithHeader.getHeader(), headerCopy)); ref {headerCopy, formatWithHeader, Arrays} [495-495],
 assertNotSame(formatWithHeader.getHeader(), headerCopy); ref {headerCopy, formatWithHeader} [496-496]
[m[m23.08.2022 - 09:08:12.345 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testHashCodeAndWithIgnoreHeaderCase has 5 assertions: 
 assertTrue(cSVFormatTwo.getIgnoreHeaderCase()); ref {cSVFormatTwo} [506-506],
 assertFalse(cSVFormatTwo.getTrailingDelimiter()); ref {cSVFormatTwo} [507-507],
 assertTrue(cSVFormatTwo.equals(cSVFormat)); ref {cSVFormat, cSVFormatTwo} [509-509],
 assertFalse(cSVFormatTwo.getAllowMissingColumnNames()); ref {cSVFormatTwo} [510-510],
 assertFalse(cSVFormatTwo.getTrim()); ref {cSVFormatTwo} [512-512]
[m[m23.08.2022 - 09:08:12.345 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testNewFormat has 36 assertions: 
 assertFalse(cSVFormat.getSkipHeaderRecord()); ref {cSVFormat} [521-521],
 assertFalse(cSVFormat.isEscapeCharacterSet()); ref {cSVFormat} [522-522],
 assertNull(cSVFormat.getRecordSeparator()); ref {cSVFormat} [524-524],
 assertNull(cSVFormat.getQuoteMode()); ref {cSVFormat} [525-525],
 assertNull(cSVFormat.getCommentMarker()); ref {cSVFormat} [527-527],
 assertFalse(cSVFormat.getIgnoreHeaderCase()); ref {cSVFormat} [528-528],
 assertFalse(cSVFormat.getAllowMissingColumnNames()); ref {cSVFormat} [530-530],
 assertFalse(cSVFormat.getTrim()); ref {cSVFormat} [531-531],
 assertFalse(cSVFormat.isNullStringSet()); ref {cSVFormat} [533-533],
 assertNull(cSVFormat.getEscapeCharacter()); ref {cSVFormat} [534-534],
 assertFalse(cSVFormat.getIgnoreSurroundingSpaces()); ref {cSVFormat} [536-536],
 assertFalse(cSVFormat.getTrailingDelimiter()); ref {cSVFormat} [537-537],
 assertEquals('X', cSVFormat.getDelimiter()); ref {cSVFormat} [539-539],
 assertNull(cSVFormat.getNullString()); ref {cSVFormat} [540-540],
 assertFalse(cSVFormat.isQuoteCharacterSet()); ref {cSVFormat} [542-542],
 assertFalse(cSVFormat.isCommentMarkerSet()); ref {cSVFormat} [543-543],
 assertNull(cSVFormat.getQuoteCharacter()); ref {cSVFormat} [545-545],
 assertFalse(cSVFormat.getIgnoreEmptyLines()); ref {cSVFormat} [546-546],
 assertFalse(cSVFormat.getSkipHeaderRecord()); ref {cSVFormat} [548-548],
 assertFalse(cSVFormat.isEscapeCharacterSet()); ref {cSVFormat} [549-549],
 assertNull(cSVFormat.getRecordSeparator()); ref {cSVFormat} [551-551],
 assertNull(cSVFormat.getQuoteMode()); ref {cSVFormat} [552-552],
 assertNull(cSVFormat.getCommentMarker()); ref {cSVFormat} [554-554],
 assertFalse(cSVFormat.getIgnoreHeaderCase()); ref {cSVFormat} [555-555],
 assertFalse(cSVFormat.getAllowMissingColumnNames()); ref {cSVFormat} [557-557],
 assertFalse(cSVFormat.getTrim()); ref {cSVFormat} [558-558],
 assertFalse(cSVFormat.isNullStringSet()); ref {cSVFormat} [560-560],
 assertNull(cSVFormat.getEscapeCharacter()); ref {cSVFormat} [561-561],
 assertFalse(cSVFormat.getIgnoreSurroundingSpaces()); ref {cSVFormat} [563-563],
 assertFalse(cSVFormat.getTrailingDelimiter()); ref {cSVFormat} [564-564],
 assertEquals('X', cSVFormat.getDelimiter()); ref {cSVFormat} [566-566],
 assertNull(cSVFormat.getNullString()); ref {cSVFormat} [567-567],
 assertFalse(cSVFormat.isQuoteCharacterSet()); ref {cSVFormat} [569-569],
 assertFalse(cSVFormat.isCommentMarkerSet()); ref {cSVFormat} [570-570],
 assertNull(cSVFormat.getQuoteCharacter()); ref {cSVFormat} [572-572],
 assertFalse(cSVFormat.getIgnoreEmptyLines()); ref {cSVFormat} [573-573]
[m[m23.08.2022 - 09:08:12.345 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testNullRecordSeparatorCsv106 has 2 assertions: 
 assertNotNull(formatStr); ref {formatStr} [581-581],
 assertFalse(formatStr.endsWith("null")); ref {formatStr} [582-582]
[m[m23.08.2022 - 09:08:12.346 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testQuoteCharSameAsCommentStartThrowsException has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.346 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.346 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testQuoteCharSameAsDelimiterThrowsException has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.346 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testQuotePolicyNoneWithoutEscapeThrowsException has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.346 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testRFC4180 has 7 assertions: 
 assertEquals(null, RFC4180.getCommentMarker()); ref {RFC4180} [608-608],
 assertEquals(',', RFC4180.getDelimiter()); ref {RFC4180} [609-609],
 assertEquals(null, RFC4180.getEscapeCharacter()); ref {RFC4180} [610-610],
 assertFalse(RFC4180.getIgnoreEmptyLines()); ref {RFC4180} [611-611],
 assertEquals(Character.valueOf('"'), RFC4180.getQuoteCharacter()); ref {Character, RFC4180} [612-612],
 assertEquals(null, RFC4180.getQuoteMode()); ref {RFC4180} [613-613],
 assertEquals("\r\n", RFC4180.getRecordSeparator()); ref {RFC4180} [614-614]
[m[m23.08.2022 - 09:08:12.346 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testSerialization has 8 assertions: 
 assertNotNull(format); ref {format} [630-630],
 assertEquals("delimiter", CSVFormat.DEFAULT.getDelimiter(), format.getDelimiter()); ref {CSVFormat.DEFAULT, format, CSVFormat} [631-631],
 assertEquals("encapsulator", CSVFormat.DEFAULT.getQuoteCharacter(), format.getQuoteCharacter()); ref {CSVFormat.DEFAULT, format, CSVFormat} [632-632],
 assertEquals("comment start", CSVFormat.DEFAULT.getCommentMarker(), format.getCommentMarker()); ref {CSVFormat.DEFAULT, format, CSVFormat} [633-633],
 assertEquals("record separator", CSVFormat.DEFAULT.getRecordSeparator(), format.getRecordSeparator()); ref {CSVFormat.DEFAULT, format, CSVFormat} [634-634],
 assertEquals("escape", CSVFormat.DEFAULT.getEscapeCharacter(), format.getEscapeCharacter()); ref {CSVFormat.DEFAULT, format, CSVFormat} [635-635],
 assertEquals("trim", CSVFormat.DEFAULT.getIgnoreSurroundingSpaces(), format.getIgnoreSurroundingSpaces()); ref {CSVFormat.DEFAULT, format, CSVFormat} [636-636],
 assertEquals("empty lines", CSVFormat.DEFAULT.getIgnoreEmptyLines(), format.getIgnoreEmptyLines()); ref {CSVFormat.DEFAULT, format, CSVFormat} [637-637]
[m[m23.08.2022 - 09:08:12.347 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testToString has 1 assertions: 
 assertEquals("Delimiter=<|> Escape=<\\> QuoteChar=<\"> RecordSeparator=<\n> EmptyLines:ignored SkipHeaderRecord:false", string); ref {string} [645-645]
[m[m23.08.2022 - 09:08:12.348 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testToStringAndWithCommentMarkerTakingCharacter has 98 assertions: 
 assertNull(cSVFormat.getEscapeCharacter()); ref {cSVFormat} [655-655],
 assertTrue(cSVFormat.isQuoteCharacterSet()); ref {cSVFormat} [656-656],
 assertFalse(cSVFormat.getTrim()); ref {cSVFormat} [658-658],
 assertFalse(cSVFormat.getIgnoreSurroundingSpaces()); ref {cSVFormat} [659-659],
 assertFalse(cSVFormat.getTrailingDelimiter()); ref {cSVFormat} [661-661],
 assertEquals(',', cSVFormat.getDelimiter()); ref {cSVFormat} [662-662],
 assertFalse(cSVFormat.getIgnoreHeaderCase()); ref {cSVFormat} [664-664],
 assertEquals("\r\n", cSVFormat.getRecordSeparator()); ref {cSVFormat} [665-665],
 assertFalse(cSVFormat.isCommentMarkerSet()); ref {cSVFormat} [667-667],
 assertNull(cSVFormat.getCommentMarker()); ref {cSVFormat} [668-668],
 assertFalse(cSVFormat.isNullStringSet()); ref {cSVFormat} [670-670],
 assertFalse(cSVFormat.getAllowMissingColumnNames()); ref {cSVFormat} [671-671],
 assertFalse(cSVFormat.isEscapeCharacterSet()); ref {cSVFormat} [673-673],
 assertFalse(cSVFormat.getSkipHeaderRecord()); ref {cSVFormat} [674-674],
 assertNull(cSVFormat.getNullString()); ref {cSVFormat} [676-676],
 assertNull(cSVFormat.getQuoteMode()); ref {cSVFormat} [677-677],
 assertTrue(cSVFormat.getIgnoreEmptyLines()); ref {cSVFormat} [679-679],
 assertEquals('\"', (char) cSVFormat.getQuoteCharacter()); ref {cSVFormat} [680-680],
 assertNull(cSVFormat.getEscapeCharacter()); ref {cSVFormat} [686-686],
 assertTrue(cSVFormat.isQuoteCharacterSet()); ref {cSVFormat} [687-687],
 assertFalse(cSVFormat.getTrim()); ref {cSVFormat} [689-689],
 assertFalse(cSVFormat.getIgnoreSurroundingSpaces()); ref {cSVFormat} [690-690],
 assertFalse(cSVFormat.getTrailingDelimiter()); ref {cSVFormat} [692-692],
 assertEquals(',', cSVFormat.getDelimiter()); ref {cSVFormat} [693-693],
 assertFalse(cSVFormat.getIgnoreHeaderCase()); ref {cSVFormat} [695-695],
 assertEquals("\r\n", cSVFormat.getRecordSeparator()); ref {cSVFormat} [696-696],
 assertFalse(cSVFormat.isCommentMarkerSet()); ref {cSVFormat} [698-698],
 assertNull(cSVFormat.getCommentMarker()); ref {cSVFormat} [699-699],
 assertFalse(cSVFormat.isNullStringSet()); ref {cSVFormat} [701-701],
 assertFalse(cSVFormat.getAllowMissingColumnNames()); ref {cSVFormat} [702-702],
 assertFalse(cSVFormat.isEscapeCharacterSet()); ref {cSVFormat} [704-704],
 assertFalse(cSVFormat.getSkipHeaderRecord()); ref {cSVFormat} [705-705],
 assertNull(cSVFormat.getNullString()); ref {cSVFormat} [707-707],
 assertNull(cSVFormat.getQuoteMode()); ref {cSVFormat} [708-708],
 assertTrue(cSVFormat.getIgnoreEmptyLines()); ref {cSVFormat} [710-710],
 assertEquals('\"', (char) cSVFormat.getQuoteCharacter()); ref {cSVFormat} [711-711],
 assertFalse(cSVFormatTwo.isNullStringSet()); ref {cSVFormatTwo} [713-713],
 assertFalse(cSVFormatTwo.getAllowMissingColumnNames()); ref {cSVFormatTwo} [714-714],
 assertEquals('\"', (char) cSVFormatTwo.getQuoteCharacter()); ref {cSVFormatTwo} [716-716],
 assertNull(cSVFormatTwo.getNullString()); ref {cSVFormatTwo} [717-717],
 assertEquals(',', cSVFormatTwo.getDelimiter()); ref {cSVFormatTwo} [719-719],
 assertFalse(cSVFormatTwo.getTrailingDelimiter()); ref {cSVFormatTwo} [720-720],
 assertTrue(cSVFormatTwo.isCommentMarkerSet()); ref {cSVFormatTwo} [722-722],
 assertFalse(cSVFormatTwo.getIgnoreHeaderCase()); ref {cSVFormatTwo} [723-723],
 assertFalse(cSVFormatTwo.getTrim()); ref {cSVFormatTwo} [725-725],
 assertNull(cSVFormatTwo.getEscapeCharacter()); ref {cSVFormatTwo} [726-726],
 assertTrue(cSVFormatTwo.isQuoteCharacterSet()); ref {cSVFormatTwo} [728-728],
 assertFalse(cSVFormatTwo.getIgnoreSurroundingSpaces()); ref {cSVFormatTwo} [729-729],
 assertEquals("\r\n", cSVFormatTwo.getRecordSeparator()); ref {cSVFormatTwo} [731-731],
 assertNull(cSVFormatTwo.getQuoteMode()); ref {cSVFormatTwo} [732-732],
 assertEquals('n', (char) cSVFormatTwo.getCommentMarker()); ref {cSVFormatTwo} [734-734],
 assertFalse(cSVFormatTwo.getSkipHeaderRecord()); ref {cSVFormatTwo} [735-735],
 assertFalse(cSVFormatTwo.isEscapeCharacterSet()); ref {cSVFormatTwo} [737-737],
 assertTrue(cSVFormatTwo.getIgnoreEmptyLines()); ref {cSVFormatTwo} [738-738],
 assertNotSame(cSVFormat, cSVFormatTwo); ref {cSVFormat, cSVFormatTwo} [740-740],
 assertNotSame(cSVFormatTwo, cSVFormat); ref {cSVFormat, cSVFormatTwo} [741-741],
 assertFalse(cSVFormatTwo.equals(cSVFormat)); ref {cSVFormat, cSVFormatTwo} [743-743],
 assertNull(cSVFormat.getEscapeCharacter()); ref {cSVFormat} [745-745],
 assertTrue(cSVFormat.isQuoteCharacterSet()); ref {cSVFormat} [746-746],
 assertFalse(cSVFormat.getTrim()); ref {cSVFormat} [748-748],
 assertFalse(cSVFormat.getIgnoreSurroundingSpaces()); ref {cSVFormat} [749-749],
 assertFalse(cSVFormat.getTrailingDelimiter()); ref {cSVFormat} [751-751],
 assertEquals(',', cSVFormat.getDelimiter()); ref {cSVFormat} [752-752],
 assertFalse(cSVFormat.getIgnoreHeaderCase()); ref {cSVFormat} [754-754],
 assertEquals("\r\n", cSVFormat.getRecordSeparator()); ref {cSVFormat} [755-755],
 assertFalse(cSVFormat.isCommentMarkerSet()); ref {cSVFormat} [757-757],
 assertNull(cSVFormat.getCommentMarker()); ref {cSVFormat} [758-758],
 assertFalse(cSVFormat.isNullStringSet()); ref {cSVFormat} [760-760],
 assertFalse(cSVFormat.getAllowMissingColumnNames()); ref {cSVFormat} [761-761],
 assertFalse(cSVFormat.isEscapeCharacterSet()); ref {cSVFormat} [763-763],
 assertFalse(cSVFormat.getSkipHeaderRecord()); ref {cSVFormat} [764-764],
 assertNull(cSVFormat.getNullString()); ref {cSVFormat} [766-766],
 assertNull(cSVFormat.getQuoteMode()); ref {cSVFormat} [767-767],
 assertTrue(cSVFormat.getIgnoreEmptyLines()); ref {cSVFormat} [769-769],
 assertEquals('\"', (char) cSVFormat.getQuoteCharacter()); ref {cSVFormat} [770-770],
 assertFalse(cSVFormatTwo.isNullStringSet()); ref {cSVFormatTwo} [772-772],
 assertFalse(cSVFormatTwo.getAllowMissingColumnNames()); ref {cSVFormatTwo} [773-773],
 assertEquals('\"', (char) cSVFormatTwo.getQuoteCharacter()); ref {cSVFormatTwo} [775-775],
 assertNull(cSVFormatTwo.getNullString()); ref {cSVFormatTwo} [776-776],
 assertEquals(',', cSVFormatTwo.getDelimiter()); ref {cSVFormatTwo} [778-778],
 assertFalse(cSVFormatTwo.getTrailingDelimiter()); ref {cSVFormatTwo} [779-779],
 assertTrue(cSVFormatTwo.isCommentMarkerSet()); ref {cSVFormatTwo} [781-781],
 assertFalse(cSVFormatTwo.getIgnoreHeaderCase()); ref {cSVFormatTwo} [782-782],
 assertFalse(cSVFormatTwo.getTrim()); ref {cSVFormatTwo} [784-784],
 assertNull(cSVFormatTwo.getEscapeCharacter()); ref {cSVFormatTwo} [785-785],
 assertTrue(cSVFormatTwo.isQuoteCharacterSet()); ref {cSVFormatTwo} [787-787],
 assertFalse(cSVFormatTwo.getIgnoreSurroundingSpaces()); ref {cSVFormatTwo} [788-788],
 assertEquals("\r\n", cSVFormatTwo.getRecordSeparator()); ref {cSVFormatTwo} [790-790],
 assertNull(cSVFormatTwo.getQuoteMode()); ref {cSVFormatTwo} [791-791],
 assertEquals('n', (char) cSVFormatTwo.getCommentMarker()); ref {cSVFormatTwo} [793-793],
 assertFalse(cSVFormatTwo.getSkipHeaderRecord()); ref {cSVFormatTwo} [794-794],
 assertFalse(cSVFormatTwo.isEscapeCharacterSet()); ref {cSVFormatTwo} [796-796],
 assertTrue(cSVFormatTwo.getIgnoreEmptyLines()); ref {cSVFormatTwo} [797-797],
 assertNotSame(cSVFormat, cSVFormatTwo); ref {cSVFormat, cSVFormatTwo} [799-799],
 assertNotSame(cSVFormatTwo, cSVFormat); ref {cSVFormat, cSVFormatTwo} [800-800],
 assertFalse(cSVFormat.equals(cSVFormatTwo)); ref {cSVFormat, cSVFormatTwo} [802-802],
 assertFalse(cSVFormatTwo.equals(cSVFormat)); ref {cSVFormat, cSVFormatTwo} [804-804],
 assertEquals("Delimiter=<,> QuoteChar=<\"> CommentStart=<n> " + "RecordSeparator=<\r\n> EmptyLines:ignored SkipHeaderRecord:false", cSVFormatTwo.toString()); ref {cSVFormatTwo} [805-807]
[m[m23.08.2022 - 09:08:12.348 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithCommentStart has 1 assertions: 
 assertEquals(Character.valueOf('#'), formatWithCommentStart.getCommentMarker()); ref {formatWithCommentStart, Character} [814-814]
[m[m23.08.2022 - 09:08:12.348 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithCommentStartCRThrowsException has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithDelimiter has 1 assertions: 
 assertEquals('!', formatWithDelimiter.getDelimiter()); ref {formatWithDelimiter} [825-825]
[m[m23.08.2022 - 09:08:12.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithDelimiterLFThrowsException has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithEmptyEnum has 1 assertions: 
 Assert.assertTrue(formatWithHeader.getHeader().length == 0); ref {Assert, formatWithHeader, formatWithHeader.getHeader().length} [836-836]
[m[m23.08.2022 - 09:08:12.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithEscape has 1 assertions: 
 assertEquals(Character.valueOf('&'), formatWithEscape.getEscapeCharacter()); ref {Character, formatWithEscape} [842-842]
[m[m23.08.2022 - 09:08:12.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithEscapeCRThrowsExceptions has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithFirstRecordAsHeader has 2 assertions: 
 assertTrue(formatWithFirstRecordAsHeader.getSkipHeaderRecord()); ref {formatWithFirstRecordAsHeader} [853-853],
 assertTrue(formatWithFirstRecordAsHeader.getHeader().length == 0); ref {formatWithFirstRecordAsHeader.getHeader().length, formatWithFirstRecordAsHeader} [854-854]
[m[m23.08.2022 - 09:08:12.349 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithHeader has 2 assertions: 
 assertArrayEquals(header, formatWithHeader.getHeader()); ref {header, formatWithHeader} [862-862],
 assertNotSame(header, formatWithHeader.getHeader()); ref {header, formatWithHeader} [863-863]
[m[m23.08.2022 - 09:08:12.350 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithHeaderComments has 99 assertions: 
 assertEquals('\"', (char) cSVFormat.getQuoteCharacter()); ref {cSVFormat} [871-871],
 assertFalse(cSVFormat.isCommentMarkerSet()); ref {cSVFormat} [872-872],
 assertFalse(cSVFormat.isEscapeCharacterSet()); ref {cSVFormat} [874-874],
 assertTrue(cSVFormat.isQuoteCharacterSet()); ref {cSVFormat} [875-875],
 assertFalse(cSVFormat.getSkipHeaderRecord()); ref {cSVFormat} [877-877],
 assertNull(cSVFormat.getQuoteMode()); ref {cSVFormat} [878-878],
 assertEquals(',', cSVFormat.getDelimiter()); ref {cSVFormat} [880-880],
 assertTrue(cSVFormat.getIgnoreEmptyLines()); ref {cSVFormat} [881-881],
 assertFalse(cSVFormat.getIgnoreHeaderCase()); ref {cSVFormat} [883-883],
 assertNull(cSVFormat.getCommentMarker()); ref {cSVFormat} [884-884],
 assertEquals("\r\n", cSVFormat.getRecordSeparator()); ref {cSVFormat} [886-886],
 assertFalse(cSVFormat.getTrailingDelimiter()); ref {cSVFormat} [887-887],
 assertFalse(cSVFormat.getAllowMissingColumnNames()); ref {cSVFormat} [889-889],
 assertFalse(cSVFormat.getTrim()); ref {cSVFormat} [890-890],
 assertFalse(cSVFormat.isNullStringSet()); ref {cSVFormat} [892-892],
 assertNull(cSVFormat.getNullString()); ref {cSVFormat} [893-893],
 assertFalse(cSVFormat.getIgnoreSurroundingSpaces()); ref {cSVFormat} [895-895],
 assertNull(cSVFormat.getEscapeCharacter()); ref {cSVFormat} [896-896],
 assertEquals('\"', (char) cSVFormat.getQuoteCharacter()); ref {cSVFormat} [901-901],
 assertFalse(cSVFormat.isCommentMarkerSet()); ref {cSVFormat} [902-902],
 assertFalse(cSVFormat.isEscapeCharacterSet()); ref {cSVFormat} [904-904],
 assertTrue(cSVFormat.isQuoteCharacterSet()); ref {cSVFormat} [905-905],
 assertFalse(cSVFormat.getSkipHeaderRecord()); ref {cSVFormat} [907-907],
 assertNull(cSVFormat.getQuoteMode()); ref {cSVFormat} [908-908],
 assertEquals(',', cSVFormat.getDelimiter()); ref {cSVFormat} [910-910],
 assertTrue(cSVFormat.getIgnoreEmptyLines()); ref {cSVFormat} [911-911],
 assertFalse(cSVFormat.getIgnoreHeaderCase()); ref {cSVFormat} [913-913],
 assertNull(cSVFormat.getCommentMarker()); ref {cSVFormat} [914-914],
 assertEquals("\r\n", cSVFormat.getRecordSeparator()); ref {cSVFormat} [916-916],
 assertFalse(cSVFormat.getTrailingDelimiter()); ref {cSVFormat} [917-917],
 assertFalse(cSVFormat.getAllowMissingColumnNames()); ref {cSVFormat} [919-919],
 assertFalse(cSVFormat.getTrim()); ref {cSVFormat} [920-920],
 assertFalse(cSVFormat.isNullStringSet()); ref {cSVFormat} [922-922],
 assertNull(cSVFormat.getNullString()); ref {cSVFormat} [923-923],
 assertFalse(cSVFormat.getIgnoreSurroundingSpaces()); ref {cSVFormat} [925-925],
 assertNull(cSVFormat.getEscapeCharacter()); ref {cSVFormat} [926-926],
 assertFalse(cSVFormatTwo.getIgnoreHeaderCase()); ref {cSVFormatTwo} [928-928],
 assertNull(cSVFormatTwo.getQuoteMode()); ref {cSVFormatTwo} [929-929],
 assertTrue(cSVFormatTwo.getIgnoreEmptyLines()); ref {cSVFormatTwo} [931-931],
 assertFalse(cSVFormatTwo.getIgnoreSurroundingSpaces()); ref {cSVFormatTwo} [932-932],
 assertNull(cSVFormatTwo.getEscapeCharacter()); ref {cSVFormatTwo} [934-934],
 assertFalse(cSVFormatTwo.getTrim()); ref {cSVFormatTwo} [935-935],
 assertFalse(cSVFormatTwo.isEscapeCharacterSet()); ref {cSVFormatTwo} [937-937],
 assertTrue(cSVFormatTwo.isQuoteCharacterSet()); ref {cSVFormatTwo} [938-938],
 assertFalse(cSVFormatTwo.getSkipHeaderRecord()); ref {cSVFormatTwo} [940-940],
 assertEquals('\"', (char) cSVFormatTwo.getQuoteCharacter()); ref {cSVFormatTwo} [941-941],
 assertFalse(cSVFormatTwo.getAllowMissingColumnNames()); ref {cSVFormatTwo} [943-943],
 assertNull(cSVFormatTwo.getNullString()); ref {cSVFormatTwo} [944-944],
 assertFalse(cSVFormatTwo.isNullStringSet()); ref {cSVFormatTwo} [946-946],
 assertFalse(cSVFormatTwo.getTrailingDelimiter()); ref {cSVFormatTwo} [947-947],
 assertEquals("\r\n", cSVFormatTwo.getRecordSeparator()); ref {cSVFormatTwo} [949-949],
 assertEquals(',', cSVFormatTwo.getDelimiter()); ref {cSVFormatTwo} [950-950],
 assertNull(cSVFormatTwo.getCommentMarker()); ref {cSVFormatTwo} [952-952],
 assertFalse(cSVFormatTwo.isCommentMarkerSet()); ref {cSVFormatTwo} [953-953],
 assertNotSame(cSVFormat, cSVFormatTwo); ref {cSVFormat, cSVFormatTwo} [955-955],
 assertNotSame(cSVFormatTwo, cSVFormat); ref {cSVFormat, cSVFormatTwo} [956-956],
 assertTrue(cSVFormatTwo.equals(cSVFormat)); ref {cSVFormat, cSVFormatTwo} [958-958],
 assertEquals('\"', (char) cSVFormat.getQuoteCharacter()); ref {cSVFormat} [962-962],
 assertFalse(cSVFormat.isCommentMarkerSet()); ref {cSVFormat} [963-963],
 assertFalse(cSVFormat.isEscapeCharacterSet()); ref {cSVFormat} [965-965],
 assertTrue(cSVFormat.isQuoteCharacterSet()); ref {cSVFormat} [966-966],
 assertFalse(cSVFormat.getSkipHeaderRecord()); ref {cSVFormat} [968-968],
 assertNull(cSVFormat.getQuoteMode()); ref {cSVFormat} [969-969],
 assertEquals(',', cSVFormat.getDelimiter()); ref {cSVFormat} [971-971],
 assertTrue(cSVFormat.getIgnoreEmptyLines()); ref {cSVFormat} [972-972],
 assertFalse(cSVFormat.getIgnoreHeaderCase()); ref {cSVFormat} [974-974],
 assertNull(cSVFormat.getCommentMarker()); ref {cSVFormat} [975-975],
 assertEquals("\r\n", cSVFormat.getRecordSeparator()); ref {cSVFormat} [977-977],
 assertFalse(cSVFormat.getTrailingDelimiter()); ref {cSVFormat} [978-978],
 assertFalse(cSVFormat.getAllowMissingColumnNames()); ref {cSVFormat} [980-980],
 assertFalse(cSVFormat.getTrim()); ref {cSVFormat} [981-981],
 assertFalse(cSVFormat.isNullStringSet()); ref {cSVFormat} [983-983],
 assertNull(cSVFormat.getNullString()); ref {cSVFormat} [984-984],
 assertFalse(cSVFormat.getIgnoreSurroundingSpaces()); ref {cSVFormat} [986-986],
 assertNull(cSVFormat.getEscapeCharacter()); ref {cSVFormat} [987-987],
 assertFalse(cSVFormatTwo.getIgnoreHeaderCase()); ref {cSVFormatTwo} [989-989],
 assertNull(cSVFormatTwo.getQuoteMode()); ref {cSVFormatTwo} [990-990],
 assertTrue(cSVFormatTwo.getIgnoreEmptyLines()); ref {cSVFormatTwo} [992-992],
 assertFalse(cSVFormatTwo.getIgnoreSurroundingSpaces()); ref {cSVFormatTwo} [993-993],
 assertNull(cSVFormatTwo.getEscapeCharacter()); ref {cSVFormatTwo} [995-995],
 assertFalse(cSVFormatTwo.getTrim()); ref {cSVFormatTwo} [996-996],
 assertFalse(cSVFormatTwo.isEscapeCharacterSet()); ref {cSVFormatTwo} [998-998],
 assertTrue(cSVFormatTwo.isQuoteCharacterSet()); ref {cSVFormatTwo} [999-999],
 assertFalse(cSVFormatTwo.getSkipHeaderRecord()); ref {cSVFormatTwo} [1001-1001],
 assertEquals('\"', (char) cSVFormatTwo.getQuoteCharacter()); ref {cSVFormatTwo} [1002-1002],
 assertFalse(cSVFormatTwo.getAllowMissingColumnNames()); ref {cSVFormatTwo} [1004-1004],
 assertNull(cSVFormatTwo.getNullString()); ref {cSVFormatTwo} [1005-1005],
 assertFalse(cSVFormatTwo.isNullStringSet()); ref {cSVFormatTwo} [1007-1007],
 assertFalse(cSVFormatTwo.getTrailingDelimiter()); ref {cSVFormatTwo} [1008-1008],
 assertEquals("\r\n", cSVFormatTwo.getRecordSeparator()); ref {cSVFormatTwo} [1010-1010],
 assertEquals(',', cSVFormatTwo.getDelimiter()); ref {cSVFormatTwo} [1011-1011],
 assertNull(cSVFormatTwo.getCommentMarker()); ref {cSVFormatTwo} [1013-1013],
 assertFalse(cSVFormatTwo.isCommentMarkerSet()); ref {cSVFormatTwo} [1014-1014],
 assertNotSame(cSVFormat, cSVFormatTwo); ref {cSVFormat, cSVFormatTwo} [1016-1016],
 assertNotSame(cSVFormatTwo, cSVFormat); ref {cSVFormat, cSVFormatTwo} [1017-1017],
 assertNotNull(string); ref {string} [1019-1019],
 assertTrue(cSVFormat.equals(cSVFormatTwo)); ref {cSVFormat, cSVFormatTwo} [1020-1020],
 assertTrue(cSVFormatTwo.equals(cSVFormat)); ref {cSVFormat, cSVFormatTwo} [1022-1022],
 assertEquals(",,,,,,,", string); ref {string} [1023-1023]
[m[m23.08.2022 - 09:08:12.351 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithHeaderEnum has 1 assertions: 
 assertArrayEquals(new String[] { "Name", "Email", "Phone" }, formatWithHeader.getHeader()); ref {formatWithHeader} [1030-1030]
[m[m23.08.2022 - 09:08:12.351 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithIgnoreEmptyLines has 2 assertions: 
 assertFalse(CSVFormat.DEFAULT.withIgnoreEmptyLines(false).getIgnoreEmptyLines()); ref {CSVFormat.DEFAULT, CSVFormat} [1036-1036],
 assertTrue(CSVFormat.DEFAULT.withIgnoreEmptyLines().getIgnoreEmptyLines()); ref {CSVFormat.DEFAULT, CSVFormat} [1037-1037]
[m[m23.08.2022 - 09:08:12.351 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithIgnoreSurround has 2 assertions: 
 assertFalse(CSVFormat.DEFAULT.withIgnoreSurroundingSpaces(false).getIgnoreSurroundingSpaces()); ref {CSVFormat.DEFAULT, CSVFormat} [1043-1043],
 assertTrue(CSVFormat.DEFAULT.withIgnoreSurroundingSpaces().getIgnoreSurroundingSpaces()); ref {CSVFormat.DEFAULT, CSVFormat} [1044-1044]
[m[m23.08.2022 - 09:08:12.351 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithNullString has 1 assertions: 
 assertEquals("null", formatWithNullString.getNullString()); ref {formatWithNullString} [1051-1051]
[m[m23.08.2022 - 09:08:12.352 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithQuoteChar has 1 assertions: 
 assertEquals(Character.valueOf('"'), formatWithQuoteChar.getQuoteCharacter()); ref {formatWithQuoteChar, Character} [1058-1058]
[m[m23.08.2022 - 09:08:12.352 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithQuoteLFThrowsException has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.352 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithQuotePolicy has 1 assertions: 
 assertEquals(QuoteMode.ALL, formatWithQuotePolicy.getQuoteMode()); ref {QuoteMode, QuoteMode.ALL, formatWithQuotePolicy} [1071-1071]
[m[m23.08.2022 - 09:08:12.352 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithRecordSeparatorCR has 1 assertions: 
 assertEquals(String.valueOf(CR), formatWithRecordSeparator.getRecordSeparator()); ref {formatWithRecordSeparator, String, CR} [1078-1078]
[m[m23.08.2022 - 09:08:12.352 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithRecordSeparatorCRLF has 1 assertions: 
 assertEquals(CRLF, formatWithRecordSeparator.getRecordSeparator()); ref {CRLF, formatWithRecordSeparator} [1084-1084]
[m[m23.08.2022 - 09:08:12.352 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithRecordSeparatorLF has 1 assertions: 
 assertEquals(String.valueOf(LF), formatWithRecordSeparator.getRecordSeparator()); ref {formatWithRecordSeparator, LF, String} [1090-1090]
[m[m23.08.2022 - 09:08:12.352 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVFormatTest::testWithSystemRecordSeparator has 1 assertions: 
 assertEquals(System.getProperty("line.separator"), formatWithRecordSeparator.getRecordSeparator()); ref {formatWithRecordSeparator, System} [1096-1096]
[m[m23.08.2022 - 09:08:12.354 [INFO ] ParsingStrategy.parseTestSuite() - Found 4 test cases
[m[m23.08.2022 - 09:08:12.355 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.TokenMatchersTest::testHasType has 4 assertions: 
 assertFalse(hasType(Token.Type.COMMENT).matches(token)); ref {Token.Type.COMMENT, Token.Type, Token, token} [43-43],
 assertFalse(hasType(Token.Type.EOF).matches(token)); ref {Token.Type, Token, Token.Type.EOF, token} [44-44],
 assertFalse(hasType(Token.Type.EORECORD).matches(token)); ref {Token.Type, Token, Token.Type.EORECORD, token} [45-45],
 assertTrue(hasType(Token.Type.TOKEN).matches(token)); ref {Token.Type, Token.Type.TOKEN, Token, token} [46-46]
[m[m23.08.2022 - 09:08:12.355 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.TokenMatchersTest::testHasContent has 2 assertions: 
 assertFalse(hasContent("This is not the token's content").matches(token)); ref {token} [51-51],
 assertTrue(hasContent("content").matches(token)); ref {token} [52-52]
[m[m23.08.2022 - 09:08:12.355 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.TokenMatchersTest::testIsReady has 2 assertions: 
 assertTrue(isReady().matches(token)); ref {token} [57-57],
 assertFalse(isReady().matches(token)); ref {token} [59-59]
[m[m23.08.2022 - 09:08:12.355 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.TokenMatchersTest::testMatches has 4 assertions: 
 assertTrue(matches(Token.Type.TOKEN, "content").matches(token)); ref {Token.Type, Token.Type.TOKEN, Token, token} [64-64],
 assertFalse(matches(Token.Type.EOF, "content").matches(token)); ref {Token.Type, Token, Token.Type.EOF, token} [65-65],
 assertFalse(matches(Token.Type.TOKEN, "not the content").matches(token)); ref {Token.Type, Token.Type.TOKEN, Token, token} [66-66],
 assertFalse(matches(Token.Type.EORECORD, "not the content").matches(token)); ref {Token.Type, Token, Token.Type.EORECORD, token} [67-67]
[m[m23.08.2022 - 09:08:12.382 [INFO ] ParsingStrategy.parseTestSuite() - Found 99 test cases
[m[m23.08.2022 - 09:08:12.383 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testCloseBackwardCompatibility has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.383 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testCloseWithCsvFormatAutoFlushOff has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.383 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testCloseWithCsvFormatAutoFlushOn has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.383 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testCloseWithFlushOff has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.383 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testCloseWithFlushOn has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.383 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testDelimeterQuoted has 1 assertions: 
 assertEquals("'a,b,c',xyz", sw.toString()); ref {sw} [296-296]
[m[m23.08.2022 - 09:08:12.383 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testDelimeterQuoteNone has 1 assertions: 
 assertEquals("a!,b!,c,xyz", sw.toString()); ref {sw} [307-307]
[m[m23.08.2022 - 09:08:12.383 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testDelimiterEscaped has 1 assertions: 
 assertEquals("a!,b!,c,xyz", sw.toString()); ref {sw} [317-317]
[m[m23.08.2022 - 09:08:12.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testDelimiterPlain has 1 assertions: 
 assertEquals("a,b,c,xyz", sw.toString()); ref {sw} [327-327]
[m[m23.08.2022 - 09:08:12.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testDisabledComment has 1 assertions: 
 assertEquals("", sw.toString()); ref {sw} [336-336]
[m[m23.08.2022 - 09:08:12.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testDontQuoteEuroFirstChar has 1 assertions: 
 assertEquals(EURO_CH + ",Deux" + recordSeparator, sw.toString()); ref {sw, EURO_CH, recordSeparator} [345-345]
[m[m23.08.2022 - 09:08:12.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEolEscaped has 1 assertions: 
 assertEquals("a!rb!nc,x\fy\bz", sw.toString()); ref {sw} [355-355]
[m[m23.08.2022 - 09:08:12.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEolPlain has 1 assertions: 
 assertEquals("a\rb\nc,x\fy\bz", sw.toString()); ref {sw} [365-365]
[m[m23.08.2022 - 09:08:12.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEolQuoted has 1 assertions: 
 assertEquals("'a\rb\nc',x\by\fz", sw.toString()); ref {sw} [375-375]
[m[m23.08.2022 - 09:08:12.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEscapeBackslash1 has 1 assertions: 
 assertEquals("\\", sw.toString()); ref {sw} [385-385]
[m[m23.08.2022 - 09:08:12.384 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEscapeBackslash2 has 1 assertions: 
 assertEquals("'\\\r'", sw.toString()); ref {sw} [394-394]
[m[m23.08.2022 - 09:08:12.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEscapeBackslash3 has 1 assertions: 
 assertEquals("'X\\\r'", sw.toString()); ref {sw} [403-403]
[m[m23.08.2022 - 09:08:12.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEscapeBackslash4 has 1 assertions: 
 assertEquals("\\\\", sw.toString()); ref {sw} [412-412]
[m[m23.08.2022 - 09:08:12.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEscapeBackslash5 has 1 assertions: 
 assertEquals("\\\\", sw.toString()); ref {sw} [421-421]
[m[m23.08.2022 - 09:08:12.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEscapeNull1 has 1 assertions: 
 assertEquals("\\", sw.toString()); ref {sw} [430-430]
[m[m23.08.2022 - 09:08:12.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEscapeNull2 has 1 assertions: 
 assertEquals("\"\\\r\"", sw.toString()); ref {sw} [439-439]
[m[m23.08.2022 - 09:08:12.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEscapeNull3 has 1 assertions: 
 assertEquals("\"X\\\r\"", sw.toString()); ref {sw} [448-448]
[m[m23.08.2022 - 09:08:12.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEscapeNull4 has 1 assertions: 
 assertEquals("\\\\", sw.toString()); ref {sw} [457-457]
[m[m23.08.2022 - 09:08:12.385 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testEscapeNull5 has 1 assertions: 
 assertEquals("\\\\", sw.toString()); ref {sw} [466-466]
[m[m23.08.2022 - 09:08:12.386 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testExcelPrintAllArrayOfArrays has 1 assertions: 
 assertEquals("r1c1,r1c2" + recordSeparator + "r2c1,r2c2" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [474-474]
[m[m23.08.2022 - 09:08:12.386 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testExcelPrintAllArrayOfLists has 1 assertions: 
 assertEquals("r1c1,r1c2" + recordSeparator + "r2c1,r2c2" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [484-484]
[m[m23.08.2022 - 09:08:12.386 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testExcelPrintAllIterableOfArrays has 1 assertions: 
 assertEquals("r1c1,r1c2" + recordSeparator + "r2c1,r2c2" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [493-493]
[m[m23.08.2022 - 09:08:12.386 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testExcelPrintAllIterableOfLists has 1 assertions: 
 assertEquals("r1c1,r1c2" + recordSeparator + "r2c1,r2c2" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [503-503]
[m[m23.08.2022 - 09:08:12.386 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testExcelPrinter1 has 1 assertions: 
 assertEquals("a,b" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [512-512]
[m[m23.08.2022 - 09:08:12.386 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testExcelPrinter2 has 1 assertions: 
 assertEquals("\"a,b\",b" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [521-521]
[m[m23.08.2022 - 09:08:12.386 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testHeader has 1 assertions: 
 assertEquals("C1,C2,C3\r\na,b,c\r\nx,y,z\r\n", sw.toString()); ref {sw} [532-532]
[m[m23.08.2022 - 09:08:12.386 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testHeaderCommentExcel has 1 assertions: 
 assertEquals("# Generated by Apache Commons CSV 1.1\r\n# " + now + "\r\nCol1,Col2\r\nA,B\r\nC,D\r\n", sw.toString()); ref {sw, now} [542-543]
[m[m23.08.2022 - 09:08:12.387 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testHeaderCommentTdf has 1 assertions: 
 assertEquals("# Generated by Apache Commons CSV 1.1\r\n# " + now + "\r\nCol1\tCol2\r\nA\tB\r\nC\tD\r\n", sw.toString()); ref {sw, now} [553-554]
[m[m23.08.2022 - 09:08:12.387 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testHeaderNotSet has 1 assertions: 
 assertEquals("a,b,c\r\nx,y,z\r\n", sw.toString()); ref {sw} [564-564]
[m[m23.08.2022 - 09:08:12.387 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testInvalidFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [572-572]
[m[m23.08.2022 - 09:08:12.387 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testJdbcPrinter has 1 assertions: 
 assertEquals("1,r1,\"long text 1\"" + recordSeparator + "2,r2,\"" + longText2 + "\"" + recordSeparator, sw.toString()); ref {sw, longText2, recordSeparator} [586-587]
[m[m23.08.2022 - 09:08:12.387 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testJdbcPrinterWithResultSet has 1 assertions: 
 assertEquals("ID,NAME,TEXT" + recordSeparator + "1,r1,\"long text 1\"" + recordSeparator + "2,r2,\"" + longText2 + "\"" + recordSeparator, sw.toString()); ref {sw, longText2, recordSeparator} [602-603]
[m[m23.08.2022 - 09:08:12.387 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testJdbcPrinterWithResultSetMetaData has 1 assertions: 
 assertEquals("ID,NAME,TEXT" + recordSeparator + "1,r1,\"long text 1\"" + recordSeparator + "2,r2,\"" + longText2 + "\"" + recordSeparator, sw.toString()); ref {sw, longText2, recordSeparator} [616-617]
[m[m23.08.2022 - 09:08:12.387 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testJira135_part1 has 2 assertions: 
 assertEquals(expected, sw.toString()); ref {sw, expected} [633-633],
 assertArrayEquals(expectNulls(list.toArray(), format), record0); ref {format, record0, list} [635-635]
[m[m23.08.2022 - 09:08:12.387 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testJira135_part2 has 2 assertions: 
 assertEquals(expected, sw.toString()); ref {sw, expected} [649-649],
 assertArrayEquals(expectNulls(list.toArray(), format), record0); ref {format, record0, list} [651-651]
[m[m23.08.2022 - 09:08:12.388 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testJira135_part3 has 2 assertions: 
 assertEquals(expected, sw.toString()); ref {sw, expected} [665-665],
 assertArrayEquals(expectNulls(list.toArray(), format), record0); ref {format, record0, list} [667-667]
[m[m23.08.2022 - 09:08:12.388 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testJira135All has 2 assertions: 
 assertEquals(expected, sw.toString()); ref {sw, expected} [683-683],
 assertArrayEquals(expectNulls(list.toArray(), format), record0); ref {format, record0, list} [685-685]
[m[m23.08.2022 - 09:08:12.388 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testMongoDbCsvBasic has 1 assertions: 
 assertEquals("a,b" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [693-693]
[m[m23.08.2022 - 09:08:12.388 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testMongoDbCsvCommaInValue has 1 assertions: 
 assertEquals("\"a,b\",c" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [702-702]
[m[m23.08.2022 - 09:08:12.388 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testMongoDbCsvDoubleQuoteInValue has 1 assertions: 
 assertEquals("\"a \"\"c\"\" b\",d" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [711-711]
[m[m23.08.2022 - 09:08:12.388 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testMongoDbCsvTabInValue has 1 assertions: 
 assertEquals("a\tb,c" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [720-720]
[m[m23.08.2022 - 09:08:12.388 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testMongoDbTsvCommaInValue has 1 assertions: 
 assertEquals("a,b\tc" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [729-729]
[m[m23.08.2022 - 09:08:12.388 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testMongoDbTsvTabInValue has 1 assertions: 
 assertEquals("\"a\tb\"\tc" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [738-738]
[m[m23.08.2022 - 09:08:12.389 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testMongoDbTsvBasic has 1 assertions: 
 assertEquals("a\tb" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [747-747]
[m[m23.08.2022 - 09:08:12.389 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testMultiLineComment has 1 assertions: 
 assertEquals("# This is a comment" + recordSeparator + "# on multiple lines" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [757-758]
[m[m23.08.2022 - 09:08:12.389 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testMySqlNullOutput has 18 assertions: 
 assertEquals(expected, writer.toString()); ref {expected, writer} [771-771],
 assertArrayEquals(new Object[2], record0); ref {record0} [773-773],
 assertEquals(expected, writer.toString()); ref {expected, writer} [782-782],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [784-784],
 assertEquals(expected, writer.toString()); ref {expected, writer} [793-793],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [795-795],
 assertEquals(expected, writer.toString()); ref {expected, writer} [804-804],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [806-806],
 assertEquals(expected, writer.toString()); ref {expected, writer} [815-815],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [817-817],
 assertEquals(expected, writer.toString()); ref {expected, writer} [826-826],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [828-828],
 assertEquals(expected, writer.toString()); ref {expected, writer} [837-837],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [839-839],
 assertEquals(expected, writer.toString()); ref {expected, writer} [848-848],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [850-850],
 assertEquals(expected, writer.toString()); ref {expected, writer} [859-859],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [861-861]
[m[m23.08.2022 - 09:08:12.389 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testMySqlNullStringDefault has 1 assertions: 
 assertEquals("\\N", CSVFormat.MYSQL.getNullString()); ref {CSVFormat.MYSQL, CSVFormat} [866-866]
[m[m23.08.2022 - 09:08:12.389 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testNewCsvPrinterAppendableNullFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [872-872]
[m[m23.08.2022 - 09:08:12.389 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testNewCsvPrinterNullAppendableFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [879-879]
[m[m23.08.2022 - 09:08:12.389 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testParseCustomNullValues has 5 assertions: 
 assertEquals("a,NULL,b" + recordSeparator, csvString); ref {csvString, recordSeparator} [891-891],
 assertEquals("a", record.get(0)); ref {record} [895-895],
 assertEquals(null, record.get(1)); ref {record} [896-896],
 assertEquals("b", record.get(2)); ref {record} [897-897],
 assertFalse(iterator.hasNext()); ref {iterator} [898-898]
[m[m23.08.2022 - 09:08:12.390 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPlainEscaped has 1 assertions: 
 assertEquals("abc,xyz", sw.toString()); ref {sw} [908-908]
[m[m23.08.2022 - 09:08:12.390 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPlainPlain has 1 assertions: 
 assertEquals("abc,xyz", sw.toString()); ref {sw} [918-918]
[m[m23.08.2022 - 09:08:12.390 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPlainQuoted has 1 assertions: 
 assertEquals("abc", sw.toString()); ref {sw} [927-927]
[m[m23.08.2022 - 09:08:12.390 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPostgreSqlCsvNullOutput has 18 assertions: 
 assertEquals(expected, writer.toString()); ref {expected, writer} [941-941],
 assertArrayEquals(new Object[2], record0); ref {record0} [943-943],
 assertEquals(expected, writer.toString()); ref {expected, writer} [952-952],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [954-954],
 assertEquals(expected, writer.toString()); ref {expected, writer} [963-963],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [965-965],
 assertEquals(expected, writer.toString()); ref {expected, writer} [974-974],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [976-976],
 assertEquals(expected, writer.toString()); ref {expected, writer} [985-985],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [987-987],
 assertEquals(expected, writer.toString()); ref {expected, writer} [996-996],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [998-998],
 assertEquals(expected, writer.toString()); ref {expected, writer} [1007-1007],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [1009-1009],
 assertEquals(expected, writer.toString()); ref {expected, writer} [1018-1018],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [1020-1020],
 assertEquals(expected, writer.toString()); ref {expected, writer} [1029-1029],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [1031-1031]
[m[m23.08.2022 - 09:08:12.390 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPostgreSqlCsvTextOutput has 18 assertions: 
 assertEquals(expected, writer.toString()); ref {expected, writer} [1044-1044],
 assertArrayEquals(new Object[2], record0); ref {record0} [1046-1046],
 assertEquals(expected, writer.toString()); ref {expected, writer} [1055-1055],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [1057-1057],
 assertEquals(expected, writer.toString()); ref {expected, writer} [1066-1066],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [1068-1068],
 assertEquals(expected, writer.toString()); ref {expected, writer} [1077-1077],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [1079-1079],
 assertEquals(expected, writer.toString()); ref {expected, writer} [1088-1088],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [1090-1090],
 assertEquals(expected, writer.toString()); ref {expected, writer} [1099-1099],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [1101-1101],
 assertEquals(expected, writer.toString()); ref {expected, writer} [1110-1110],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [1112-1112],
 assertEquals(expected, writer.toString()); ref {expected, writer} [1121-1121],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [1123-1123],
 assertEquals(expected, writer.toString()); ref {expected, writer} [1132-1132],
 assertArrayEquals(expectNulls(s, format), record0); ref {s, format, record0} [1134-1134]
[m[m23.08.2022 - 09:08:12.390 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPostgreSqlNullStringDefaultCsv has 1 assertions: 
 assertEquals("", CSVFormat.POSTGRESQL_CSV.getNullString()); ref {CSVFormat.POSTGRESQL_CSV, CSVFormat} [1139-1139]
[m[m23.08.2022 - 09:08:12.391 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPostgreSqlNullStringDefaultText has 1 assertions: 
 assertEquals("\\N", CSVFormat.POSTGRESQL_TEXT.getNullString()); ref {CSVFormat.POSTGRESQL_TEXT, CSVFormat} [1144-1144]
[m[m23.08.2022 - 09:08:12.391 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrint has 1 assertions: 
 assertEquals("a,b\\c" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1152-1152]
[m[m23.08.2022 - 09:08:12.391 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrintCustomNullValues has 1 assertions: 
 assertEquals("a,NULL,b" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1161-1161]
[m[m23.08.2022 - 09:08:12.391 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrinter1 has 1 assertions: 
 assertEquals("a,b" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1170-1170]
[m[m23.08.2022 - 09:08:12.391 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrinter2 has 1 assertions: 
 assertEquals("\"a,b\",b" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1179-1179]
[m[m23.08.2022 - 09:08:12.391 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrinter3 has 1 assertions: 
 assertEquals("\"a, b\",\"b \"" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1188-1188]
[m[m23.08.2022 - 09:08:12.391 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrinter4 has 1 assertions: 
 assertEquals("a,\"b\"\"c\"" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1197-1197]
[m[m23.08.2022 - 09:08:12.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrinter5 has 1 assertions: 
 assertEquals("a,\"b\nc\"" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1206-1206]
[m[m23.08.2022 - 09:08:12.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrinter6 has 1 assertions: 
 assertEquals("a,\"b\r\nc\"" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1215-1215]
[m[m23.08.2022 - 09:08:12.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrinter7 has 1 assertions: 
 assertEquals("a,b\\c" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1224-1224]
[m[m23.08.2022 - 09:08:12.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrintNullValues has 1 assertions: 
 assertEquals("a,,b" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1233-1233]
[m[m23.08.2022 - 09:08:12.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrintOnePositiveInteger has 1 assertions: 
 assertEquals(String.valueOf(Integer.MAX_VALUE), sw.toString()); ref {Integer, sw, Integer.MAX_VALUE, String} [1242-1242]
[m[m23.08.2022 - 09:08:12.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrintRecordsWithEmptyVector has 1 assertions: 
 assertEquals(expectedCapacity, vector.capacity()); ref {expectedCapacity, vector} [1256-1256]
[m[m23.08.2022 - 09:08:12.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrintRecordsWithObjectArray has 2 assertions: 
 assertEquals(6, charArrayWriter.size()); ref {charArrayWriter} [1272-1272],
 assertEquals("\n\n\n\n\n\n", charArrayWriter.toString()); ref {charArrayWriter} [1273-1273]
[m[m23.08.2022 - 09:08:12.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrintRecordsWithResultSetOneRow has 1 assertions: 
 assertEquals(0, resultSet.getRow()); ref {resultSet} [1282-1282]
[m[m23.08.2022 - 09:08:12.392 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrintToFileWithCharsetUtf16Be has 1 assertions: 
 assertEquals("a,b\\c" + recordSeparator, FileUtils.readFileToString(file, StandardCharsets.UTF_16BE)); ref {file, FileUtils, StandardCharsets.UTF_16BE, StandardCharsets, recordSeparator} [1293-1293]
[m[m23.08.2022 - 09:08:12.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrintToFileWithDefaultCharset has 1 assertions: 
 assertEquals("a,b\\c" + recordSeparator, FileUtils.readFileToString(file, Charset.defaultCharset())); ref {file, FileUtils, Charset, recordSeparator} [1302-1302]
[m[m23.08.2022 - 09:08:12.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testPrintToPathWithDefaultCharset has 1 assertions: 
 assertEquals("a,b\\c" + recordSeparator, FileUtils.readFileToString(file, Charset.defaultCharset())); ref {file, FileUtils, Charset, recordSeparator} [1311-1311]
[m[m23.08.2022 - 09:08:12.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testQuoteAll has 1 assertions: 
 assertEquals("\"a\",\"b\nc\",\"d\"" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1319-1319]
[m[m23.08.2022 - 09:08:12.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testQuoteCommaFirstChar has 1 assertions: 
 assertEquals("\",\"" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1328-1328]
[m[m23.08.2022 - 09:08:12.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testQuoteNonNumeric has 1 assertions: 
 assertEquals("\"a\",\"b\nc\",1" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1337-1337]
[m[m23.08.2022 - 09:08:12.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testRandomDefault has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testRandomExcel has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testRandomMongoDbCsv has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.393 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testRandomMySql has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.394 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testRandomOracle has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.394 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testRandomPostgreSqlCsv has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.394 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testRandomPostgreSqlText has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.394 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testRandomRfc4180 has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.394 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testRandomTdf has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.394 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testSingleLineComment has 1 assertions: 
 assertEquals("# This is a comment" + recordSeparator, sw.toString()); ref {sw, recordSeparator} [1395-1395]
[m[m23.08.2022 - 09:08:12.394 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testSingleQuoteQuoted has 1 assertions: 
 assertEquals("'a''b''c',xyz", sw.toString()); ref {sw} [1405-1405]
[m[m23.08.2022 - 09:08:12.394 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testSkipHeaderRecordFalse has 1 assertions: 
 assertEquals("C1,C2,C3\r\na,b,c\r\nx,y,z\r\n", sw.toString()); ref {sw} [1417-1417]
[m[m23.08.2022 - 09:08:12.394 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testSkipHeaderRecordTrue has 1 assertions: 
 assertEquals("a,b,c\r\nx,y,z\r\n", sw.toString()); ref {sw} [1430-1430]
[m[m23.08.2022 - 09:08:12.395 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testTrailingDelimiterOnTwoColumns has 1 assertions: 
 assertEquals("A,B,\r\n", sw.toString()); ref {sw} [1439-1439]
[m[m23.08.2022 - 09:08:12.395 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testTrimOffOneColumn has 1 assertions: 
 assertEquals("\" A \"", sw.toString()); ref {sw} [1448-1448]
[m[m23.08.2022 - 09:08:12.395 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testTrimOnOneColumn has 1 assertions: 
 assertEquals("A", sw.toString()); ref {sw} [1457-1457]
[m[m23.08.2022 - 09:08:12.395 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVPrinterTest::testTrimOnTwoColumns has 1 assertions: 
 assertEquals("A,B", sw.toString()); ref {sw} [1467-1467]
[m[m23.08.2022 - 09:08:12.397 [INFO ] ParsingStrategy.parseTestSuite() - Found 2 test cases
[m[m23.08.2022 - 09:08:12.397 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.perf.PerformanceTest::testParseBigFileRepeat has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.397 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.perf.PerformanceTest::testReadBigFile has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.397 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m23.08.2022 - 09:08:12.398 [INFO ] ParsingStrategy.parseTestSuite() - Found 2 test cases
[m[m23.08.2022 - 09:08:12.398 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.issues.JiraCsv164Test::testJiraCsv154_withCommentMarker has 1 assertions: 
 assertTrue(s, s.contains(comment)); ref {s, comment} [40-40]
[m[m23.08.2022 - 09:08:12.398 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.issues.JiraCsv164Test::testJiraCsv154_withHeaderComments has 1 assertions: 
 assertTrue(s, s.contains(comment)); ref {s, comment} [54-54]
[m[m23.08.2022 - 09:08:12.399 [INFO ] ParsingStrategy.parseTestSuite() - Found 1 test case
[m[m23.08.2022 - 09:08:12.400 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.issues.JiraCsv167Test::parse has 2 assertions: 
 // Comment lines are concatenated, in this example 4 lines become 2 comments.
Assert.assertEquals(totcomment, comments); ref {Assert, comments, totcomment} [80-80],
 // records includes the header
Assert.assertEquals(totrecs, records); ref {Assert, records, totrecs} [81-81]
[m[m23.08.2022 - 09:08:12.402 [INFO ] ParsingStrategy.parseTestSuite() - Found 18 test cases
[m[m23.08.2022 - 09:08:12.402 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testGetInt has 3 assertions: 
 assertEquals(values[0], record.get(0)); ref {values, record} [64-64],
 assertEquals(values[1], record.get(1)); ref {values, record} [65-65],
 assertEquals(values[2], record.get(2)); ref {values, record} [66-66]
[m[m23.08.2022 - 09:08:12.403 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testGetString has 3 assertions: 
 assertEquals(values[0], recordWithHeader.get("first")); ref {values, recordWithHeader} [71-71],
 assertEquals(values[1], recordWithHeader.get("second")); ref {values, recordWithHeader} [72-72],
 assertEquals(values[2], recordWithHeader.get("third")); ref {values, recordWithHeader} [73-73]
[m[m23.08.2022 - 09:08:12.403 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testGetStringInconsistentRecord has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.403 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testGetStringNoHeader has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.403 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testGetUnmappedEnum has 1 assertions: 
 assertNull(recordWithHeader.get(EnumFixture.UNKNOWN_COLUMN)); ref {EnumFixture.UNKNOWN_COLUMN, EnumFixture, recordWithHeader} [89-89]
[m[m23.08.2022 - 09:08:12.403 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testGetUnmappedName has 1 assertions: 
 assertNull(recordWithHeader.get("fourth")); ref {recordWithHeader} [94-94]
[m[m23.08.2022 - 09:08:12.403 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testGetUnmappedNegativeInt has 1 assertions: 
 assertNull(recordWithHeader.get(Integer.MIN_VALUE)); ref {Integer, recordWithHeader, Integer.MIN_VALUE} [99-99]
[m[m23.08.2022 - 09:08:12.403 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testGetUnmappedPositiveInt has 1 assertions: 
 assertNull(recordWithHeader.get(Integer.MAX_VALUE)); ref {Integer, recordWithHeader, Integer.MAX_VALUE} [104-104]
[m[m23.08.2022 - 09:08:12.403 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testIsConsistent has 3 assertions: 
 assertTrue(record.isConsistent()); ref {record} [109-109],
 assertTrue(recordWithHeader.isConsistent()); ref {recordWithHeader} [110-110],
 // We are working on a copy of the map, so the record should still be OK.
assertTrue(recordWithHeader.isConsistent()); ref {recordWithHeader} [114-114]
[m[m23.08.2022 - 09:08:12.404 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testIsInconsistent has 1 assertions: 
 assertFalse(record1.isConsistent()); ref {record1} [125-125]
[m[m23.08.2022 - 09:08:12.404 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testIsMapped has 3 assertions: 
 assertFalse(record.isMapped("first")); ref {record} [131-131],
 assertTrue(recordWithHeader.isMapped("first")); ref {recordWithHeader} [132-132],
 assertFalse(recordWithHeader.isMapped("fourth")); ref {recordWithHeader} [133-133]
[m[m23.08.2022 - 09:08:12.404 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testIsSet has 3 assertions: 
 assertFalse(record.isSet("first")); ref {record} [138-138],
 assertTrue(recordWithHeader.isSet("first")); ref {recordWithHeader} [139-139],
 assertFalse(recordWithHeader.isSet("fourth")); ref {recordWithHeader} [140-140]
[m[m23.08.2022 - 09:08:12.404 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testIterator has 1 assertions: 
 assertEquals(values[i], value); ref {values, i, value} [147-147]
[m[m23.08.2022 - 09:08:12.404 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testPutInMap has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.404 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testRemoveAndAddColumns has 1 assertions: 
 Assert.assertEquals("A,B,C,NewValue" + CSVFormat.DEFAULT.getRecordSeparator(), printer.getOut().toString()); ref {CSVFormat.DEFAULT, Assert, printer, CSVFormat} [173-173]
[m[m23.08.2022 - 09:08:12.404 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testToMap has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.404 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testToMapWithShortRecord has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.404 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVRecordTest::testToMapWithNoHeader has 2 assertions: 
 assertNotNull("Map is not null.", map); ref {map} [196-196],
 assertTrue("Map is empty.", map.isEmpty()); ref {map} [197-197]
[m[m23.08.2022 - 09:08:12.413 [INFO ] ParsingStrategy.parseTestSuite() - Found 26 test cases
[m[m23.08.2022 - 09:08:12.414 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testSurroundingSpacesAreDeleted has 7 assertions: 
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "noSpaces")); ref {parser, TOKEN} [62-62],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "leadingSpaces")); ref {parser, TOKEN} [63-63],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "trailingSpaces")); ref {parser, TOKEN} [64-64],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "surroundingSpaces")); ref {parser, TOKEN} [65-65],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "")); ref {parser, TOKEN} [66-66],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "")); ref {parser, TOKEN} [67-67],
 assertThat(parser.nextToken(new Token()), matches(EOF, "")); ref {parser, EOF} [68-68]
[m[m23.08.2022 - 09:08:12.414 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testSurroundingTabsAreDeleted has 7 assertions: 
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "noTabs")); ref {parser, TOKEN} [76-76],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "leadingTab")); ref {parser, TOKEN} [77-77],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "trailingTab")); ref {parser, TOKEN} [78-78],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "surroundingTabs")); ref {parser, TOKEN} [79-79],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "")); ref {parser, TOKEN} [80-80],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "")); ref {parser, TOKEN} [81-81],
 assertThat(parser.nextToken(new Token()), matches(EOF, "")); ref {parser, EOF} [82-82]
[m[m23.08.2022 - 09:08:12.414 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testIgnoreEmptyLines has 10 assertions: 
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "first")); ref {parser, TOKEN} [92-92],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "line")); ref {parser, TOKEN} [93-93],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "")); ref {parser, EORECORD} [94-94],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "second")); ref {parser, TOKEN} [95-95],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "line")); ref {parser, EORECORD} [96-96],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "third line ")); ref {parser, EORECORD} [97-97],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "last")); ref {parser, TOKEN} [98-98],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, " line ")); ref {parser, EORECORD} [99-99],
 assertThat(parser.nextToken(new Token()), matches(EOF, "")); ref {parser, EOF} [100-100],
 assertThat(parser.nextToken(new Token()), matches(EOF, "")); ref {parser, EOF} [101-101]
[m[m23.08.2022 - 09:08:12.414 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testComments has 14 assertions: 
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "first")); ref {parser, TOKEN} [111-111],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "line")); ref {parser, TOKEN} [112-112],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "")); ref {parser, EORECORD} [113-113],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "second")); ref {parser, TOKEN} [114-114],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "line")); ref {parser, TOKEN} [115-115],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "tokenWith#no-comment")); ref {parser, EORECORD} [116-116],
 assertThat(parser.nextToken(new Token()), matches(COMMENT, "comment line")); ref {parser, COMMENT} [117-117],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "third")); ref {parser, TOKEN} [118-118],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "line")); ref {parser, TOKEN} [119-119],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "#no-comment")); ref {parser, EORECORD} [120-120],
 assertThat(parser.nextToken(new Token()), matches(COMMENT, "penultimate comment")); ref {parser, COMMENT} [121-121],
 assertThat(parser.nextToken(new Token()), matches(COMMENT, "Final comment")); ref {parser, COMMENT} [122-122],
 assertThat(parser.nextToken(new Token()), matches(EOF, "")); ref {parser, EOF} [123-123],
 assertThat(parser.nextToken(new Token()), matches(EOF, "")); ref {parser, EOF} [124-124]
[m[m23.08.2022 - 09:08:12.415 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testCommentsAndEmptyLines has 24 assertions: 
 assertFalse("Should not ignore empty lines", format.getIgnoreEmptyLines()); ref {format} [145-145],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "1")); ref {parser, TOKEN} [148-148],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "2")); ref {parser, TOKEN} [149-149],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "3")); ref {parser, TOKEN} [150-150],
 // 1
assertThat(parser.nextToken(new Token()), matches(EORECORD, "")); ref {parser, EORECORD} [151-151],
 // 1b
assertThat(parser.nextToken(new Token()), matches(EORECORD, "")); ref {parser, EORECORD} [152-152],
 // 1c
assertThat(parser.nextToken(new Token()), matches(EORECORD, "")); ref {parser, EORECORD} [153-153],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "a")); ref {parser, TOKEN} [154-154],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "b x")); ref {parser, TOKEN} [155-155],
 // 2
assertThat(parser.nextToken(new Token()), matches(EORECORD, "c#no-comment")); ref {parser, EORECORD} [156-156],
 // 3
assertThat(parser.nextToken(new Token()), matches(COMMENT, "foo")); ref {parser, COMMENT} [157-157],
 // 4
assertThat(parser.nextToken(new Token()), matches(EORECORD, "")); ref {parser, EORECORD} [158-158],
 // 4b
assertThat(parser.nextToken(new Token()), matches(EORECORD, "")); ref {parser, EORECORD} [159-159],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "d")); ref {parser, TOKEN} [160-160],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "e")); ref {parser, TOKEN} [161-161],
 // 5
assertThat(parser.nextToken(new Token()), matches(EORECORD, "#no-comment")); ref {parser, EORECORD} [162-162],
 // 5b
assertThat(parser.nextToken(new Token()), matches(EORECORD, "")); ref {parser, EORECORD} [163-163],
 // 5c
assertThat(parser.nextToken(new Token()), matches(EORECORD, "")); ref {parser, EORECORD} [164-164],
 // 6
assertThat(parser.nextToken(new Token()), matches(COMMENT, "penultimate comment")); ref {parser, COMMENT} [165-165],
 // 6b
assertThat(parser.nextToken(new Token()), matches(EORECORD, "")); ref {parser, EORECORD} [166-166],
 // 6c
assertThat(parser.nextToken(new Token()), matches(EORECORD, "")); ref {parser, EORECORD} [167-167],
 // 7
assertThat(parser.nextToken(new Token()), matches(COMMENT, "Final comment")); ref {parser, COMMENT} [168-168],
 assertThat(parser.nextToken(new Token()), matches(EOF, "")); ref {parser, EOF} [169-169],
 assertThat(parser.nextToken(new Token()), matches(EOF, "")); ref {parser, EOF} [170-170]
[m[m23.08.2022 - 09:08:12.415 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testBackslashWithoutEscaping has 8 assertions: 
 assertFalse(format.isEscapeCharacterSet()); ref {format} [182-182],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "a")); ref {parser, TOKEN} [184-184],
 // an unquoted single backslash is not an escape char
assertThat(parser.nextToken(new Token()), matches(TOKEN, "\\")); ref {parser, TOKEN} [186-186],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "")); ref {parser, TOKEN} [187-187],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "b\\")); ref {parser, EORECORD} [188-188],
 // an unquoted single backslash is not an escape char
assertThat(parser.nextToken(new Token()), matches(TOKEN, "\\")); ref {parser, TOKEN} [190-190],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "")); ref {parser, TOKEN} [191-191],
 assertThat(parser.nextToken(new Token()), matches(EOF, "")); ref {parser, EOF} [192-192]
[m[m23.08.2022 - 09:08:12.415 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testBackslashWithEscaping has 8 assertions: 
 assertTrue(format.isEscapeCharacterSet()); ref {format} [204-204],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "a")); ref {parser, TOKEN} [206-206],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, ",")); ref {parser, TOKEN} [207-207],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "b\\")); ref {parser, EORECORD} [208-208],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, ",")); ref {parser, TOKEN} [209-209],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "\nc")); ref {parser, TOKEN} [210-210],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "d\r")); ref {parser, EORECORD} [211-211],
 assertThat(parser.nextToken(new Token()), matches(EOF, "e")); ref {parser, EOF} [212-212]
[m[m23.08.2022 - 09:08:12.415 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testNextToken4 has 12 assertions: 
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "a")); ref {parser, TOKEN} [224-224],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "foo")); ref {parser, TOKEN} [225-225],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "b")); ref {parser, EORECORD} [226-226],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "a")); ref {parser, TOKEN} [227-227],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, " foo")); ref {parser, TOKEN} [228-228],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "b")); ref {parser, EORECORD} [229-229],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "a")); ref {parser, TOKEN} [230-230],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "foo ")); ref {parser, TOKEN} [231-231],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "b")); ref {parser, EORECORD} [232-232],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "a")); ref {parser, TOKEN} [233-233],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, " foo ")); ref {parser, TOKEN} [234-234],
 // assertTokenEquals(EORECORD, "b", parser.nextToken(new Token()));
assertThat(parser.nextToken(new Token()), matches(EOF, "b")); ref {parser, EOF} [236-236]
[m[m23.08.2022 - 09:08:12.415 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testNextToken5 has 5 assertions: 
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "a")); ref {parser, TOKEN} [245-245],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "foo\n")); ref {parser, TOKEN} [246-246],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "b")); ref {parser, EORECORD} [247-247],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "foo\n  baar ,,,")); ref {parser, EORECORD} [248-248],
 assertThat(parser.nextToken(new Token()), matches(EOF, "\n\t \n")); ref {parser, EOF} [249-249]
[m[m23.08.2022 - 09:08:12.415 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testNextToken6 has 2 assertions: 
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "a")); ref {parser, TOKEN} [262-262],
 assertThat(parser.nextToken(new Token()), matches(EORECORD, "b and ' more\n")); ref {parser, EORECORD} [263-263]
[m[m23.08.2022 - 09:08:12.416 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testDelimiterIsWhitespace has 6 assertions: 
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "one")); ref {parser, TOKEN} [272-272],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "two")); ref {parser, TOKEN} [273-273],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "")); ref {parser, TOKEN} [274-274],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "four")); ref {parser, TOKEN} [275-275],
 assertThat(parser.nextToken(new Token()), matches(TOKEN, "five")); ref {parser, TOKEN} [276-276],
 assertThat(parser.nextToken(new Token()), matches(EOF, "six")); ref {parser, EOF} [277-277]
[m[m23.08.2022 - 09:08:12.416 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testEscapedCR has 1 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character" + CR + "Escaped")); ref {lexer, CR} [284-284]
[m[m23.08.2022 - 09:08:12.416 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testCR has 2 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character")); ref {lexer} [291-291],
 assertThat(lexer.nextToken(new Token()), hasContent("NotEscaped")); ref {lexer} [292-292]
[m[m23.08.2022 - 09:08:12.416 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testEscapedLF has 1 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character" + LF + "Escaped")); ref {LF, lexer} [299-299]
[m[m23.08.2022 - 09:08:12.416 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testLF has 2 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character")); ref {lexer} [306-306],
 assertThat(lexer.nextToken(new Token()), hasContent("NotEscaped")); ref {lexer} [307-307]
[m[m23.08.2022 - 09:08:12.416 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testEscapedTab has 1 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character" + TAB + "Escaped")); ref {TAB, lexer} [314-314]
[m[m23.08.2022 - 09:08:12.416 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testTab has 1 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character" + TAB + "NotEscaped")); ref {TAB, lexer} [322-322]
[m[m23.08.2022 - 09:08:12.416 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testEscapedBackspace has 1 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character" + BACKSPACE + "Escaped")); ref {BACKSPACE, lexer} [329-329]
[m[m23.08.2022 - 09:08:12.417 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testBackspace has 1 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character" + BACKSPACE + "NotEscaped")); ref {BACKSPACE, lexer} [336-336]
[m[m23.08.2022 - 09:08:12.417 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testEscapedFF has 1 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character" + FF + "Escaped")); ref {FF, lexer} [343-343]
[m[m23.08.2022 - 09:08:12.417 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testFF has 1 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character" + FF + "NotEscaped")); ref {FF, lexer} [350-350]
[m[m23.08.2022 - 09:08:12.417 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testEscapedMySqlNullValue has 1 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character\\NEscaped")); ref {lexer} [358-358]
[m[m23.08.2022 - 09:08:12.417 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testEscapedCharacter has 1 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character\\aEscaped")); ref {lexer} [365-365]
[m[m23.08.2022 - 09:08:12.417 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testEscapedControlCharacter has 1 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character" + CR + "Escaped")); ref {lexer, CR} [373-373]
[m[m23.08.2022 - 09:08:12.417 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testEscapedControlCharacter2 has 1 assertions: 
 assertThat(lexer.nextToken(new Token()), hasContent("character" + CR + "Escaped")); ref {lexer, CR} [380-380]
[m[m23.08.2022 - 09:08:12.417 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.LexerTest::testEscapingAtEOF has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.454 [INFO ] ParsingStrategy.parseTestSuite() - Found 81 test cases
[m[m23.08.2022 - 09:08:12.455 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testBackslashEscaping has 1 assertions: 
 assertTrue(records.size() > 0); ref {records} [125-125]
[m[m23.08.2022 - 09:08:12.455 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testBackslashEscaping2 has 1 assertions: 
 assertTrue(records.size() > 0); ref {records} [152-152]
[m[m23.08.2022 - 09:08:12.455 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testBackslashEscapingOld has 3 assertions: 
 assertEquals(res.length, records.size()); ref {res, records, res.length} [171-171],
 assertTrue(records.size() > 0); ref {records} [172-172],
 assertArrayEquals(res[i], records.get(i).values()); ref {res, records, i} [174-174]
[m[m23.08.2022 - 09:08:12.455 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testBOM has 1 assertions: 
 Assert.assertNotNull(string); ref {Assert, string} [186-186]
[m[m23.08.2022 - 09:08:12.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testBOMInputStream_ParserWithInputStream has 1 assertions: 
 Assert.assertNotNull(string); ref {Assert, string} [198-198]
[m[m23.08.2022 - 09:08:12.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testBOMInputStream_ParserWithReader has 1 assertions: 
 Assert.assertNotNull(string); ref {Assert, string} [210-210]
[m[m23.08.2022 - 09:08:12.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testBOMInputStream_parseWithReader has 1 assertions: 
 Assert.assertNotNull(string); ref {Assert, string} [222-222]
[m[m23.08.2022 - 09:08:12.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testCarriageReturnEndings has 1 assertions: 
 assertEquals(4, records.size()); ref {records} [233-233]
[m[m23.08.2022 - 09:08:12.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testCarriageReturnLineFeedEndings has 1 assertions: 
 assertEquals(4, records.size()); ref {records} [242-242]
[m[m23.08.2022 - 09:08:12.456 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testClose has 2 assertions: 
 assertTrue(records.hasNext()); ref {records} [252-252],
 assertFalse(records.hasNext()); ref {records} [254-254]
[m[m23.08.2022 - 09:08:12.457 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testCSV57 has 2 assertions: 
 assertNotNull(list); ref {list} [262-262],
 assertEquals(0, list.size()); ref {list} [263-263]
[m[m23.08.2022 - 09:08:12.457 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testDefaultFormat has 2 assertions: 
 assertFalse(format.isCommentMarkerSet()); ref {format} [277-277],
 assertTrue(records.size() > 0); ref {records} [282-282]
[m[m23.08.2022 - 09:08:12.457 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testDuplicateHeadersNotAllowed has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.457 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testDuplicateHeadersAllowedByDefault has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.457 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testEmptyFileHeaderParsing has 2 assertions: 
 assertNull(parser.nextRecord()); ref {parser} [309-309],
 assertTrue(parser.getHeaderNames().isEmpty()); ref {parser} [310-310]
[m[m23.08.2022 - 09:08:12.457 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testEmptyFile has 1 assertions: 
 assertNull(parser.nextRecord()); ref {parser} [317-317]
[m[m23.08.2022 - 09:08:12.458 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviorCSV has 3 assertions: 
 assertEquals(res.length, records.size()); ref {res, records, res.length} [329-329],
 assertTrue(records.size() > 0); ref {records} [330-330],
 assertArrayEquals(res[i], records.get(i).values()); ref {res, records, i} [332-332]
[m[m23.08.2022 - 09:08:12.458 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testEmptyLineBehaviorExcel has 3 assertions: 
 assertEquals(res.length, records.size()); ref {res, records, res.length} [346-346],
 assertTrue(records.size() > 0); ref {records} [347-347],
 assertArrayEquals(res[i], records.get(i).values()); ref {res, records, i} [349-349]
[m[m23.08.2022 - 09:08:12.458 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviorCSV has 3 assertions: 
 assertEquals(res.length, records.size()); ref {res, records, res.length} [365-365],
 assertTrue(records.size() > 0); ref {records} [366-366],
 assertArrayEquals(res[i], records.get(i).values()); ref {res, records, i} [368-368]
[m[m23.08.2022 - 09:08:12.458 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testEndOfFileBehaviorExcel has 3 assertions: 
 assertEquals(res.length, records.size()); ref {res, records, res.length} [385-385],
 assertTrue(records.size() > 0); ref {records} [386-386],
 assertArrayEquals(res[i], records.get(i).values()); ref {res, records, i} [388-388]
[m[m23.08.2022 - 09:08:12.458 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testExcelFormat1 has 3 assertions: 
 assertEquals(res.length, records.size()); ref {res, records, res.length} [402-402],
 assertTrue(records.size() > 0); ref {records} [403-403],
 assertArrayEquals(res[i], records.get(i).values()); ref {res, records, i} [405-405]
[m[m23.08.2022 - 09:08:12.458 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testExcelFormat2 has 3 assertions: 
 assertEquals(res.length, records.size()); ref {res, records, res.length} [416-416],
 assertTrue(records.size() > 0); ref {records} [417-417],
 assertArrayEquals(res[i], records.get(i).values()); ref {res, records, i} [419-419]
[m[m23.08.2022 - 09:08:12.459 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testExcelHeaderCountLessThanData has 3 assertions: 
 Assert.assertEquals("a", record.get("A")); ref {Assert, record} [433-433],
 Assert.assertEquals("b", record.get("B")); ref {Assert, record} [434-434],
 Assert.assertEquals("c", record.get("C")); ref {Assert, record} [435-435]
[m[m23.08.2022 - 09:08:12.459 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testFirstEndOfLineCr has 2 assertions: 
 assertEquals(4, records.size()); ref {records} [445-445],
 assertEquals("\r", parser.getFirstEndOfLine()); ref {parser} [446-446]
[m[m23.08.2022 - 09:08:12.459 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testFirstEndOfLineCrLf has 2 assertions: 
 assertEquals(4, records.size()); ref {records} [455-455],
 assertEquals("\r\n", parser.getFirstEndOfLine()); ref {parser} [456-456]
[m[m23.08.2022 - 09:08:12.459 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testFirstEndOfLineLf has 2 assertions: 
 assertEquals(4, records.size()); ref {records} [465-465],
 assertEquals("\n", parser.getFirstEndOfLine()); ref {parser} [466-466]
[m[m23.08.2022 - 09:08:12.459 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testForEach has 4 assertions: 
 assertEquals(3, records.size()); ref {records} [477-477],
 assertArrayEquals(new String[] { "a", "b", "c" }, records.get(0).values()); ref {records} [478-478],
 assertArrayEquals(new String[] { "1", "2", "3" }, records.get(1).values()); ref {records} [479-479],
 assertArrayEquals(new String[] { "x", "y", "z" }, records.get(2).values()); ref {records} [480-480]
[m[m23.08.2022 - 09:08:12.460 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetHeaderMap has 8 assertions: 
 // Headers are iterated in column order.
Assert.assertEquals("A", columnNames.next()); ref {Assert, columnNames} [491-491],
 Assert.assertEquals("B", columnNames.next()); ref {Assert, columnNames} [492-492],
 Assert.assertEquals("C", columnNames.next()); ref {Assert, columnNames} [493-493],
 assertTrue(records.hasNext()); ref {records} [498-498],
 assertEquals(record.get(0), record.get("A")); ref {record} [500-500],
 assertEquals(record.get(1), record.get("B")); ref {record} [501-501],
 assertEquals(record.get(2), record.get("C")); ref {record} [502-502],
 assertFalse(records.hasNext()); ref {records} [505-505]
[m[m23.08.2022 - 09:08:12.460 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetHeaderNames has 3 assertions: 
 Assert.assertNotNull(headerNames); ref {Assert, headerNames} [515-515],
 Assert.assertEquals(nameIndexMap.size(), headerNames.size()); ref {Assert, nameIndexMap, headerNames} [516-516],
 Assert.assertEquals(i, nameIndexMap.get(name).intValue()); ref {Assert, nameIndexMap, name, i} [519-519]
[m[m23.08.2022 - 09:08:12.460 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetHeaderNamesReadOnly has 1 assertions: 
 Assert.assertNotNull(headerNames); ref {Assert, headerNames} [529-529]
[m[m23.08.2022 - 09:08:12.460 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetLine has 2 assertions: 
 assertArrayEquals(re, parser.nextRecord().values()); ref {re, parser} [543-543],
 assertNull(parser.nextRecord()); ref {parser} [546-546]
[m[m23.08.2022 - 09:08:12.460 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetLineNumberWithCR has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.460 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetLineNumberWithCRLF has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.461 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetLineNumberWithLF has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.461 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetOneLine has 1 assertions: 
 assertArrayEquals(RESULT[0], record.values()); ref {record, RESULT} [569-569]
[m[m23.08.2022 - 09:08:12.461 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetOneLineOneParser has 2 assertions: 
 assertArrayEquals(RESULT[0], record1.values()); ref {record1, RESULT} [586-586],
 assertArrayEquals(RESULT[1], record2.values()); ref {record2, RESULT} [590-590]
[m[m23.08.2022 - 09:08:12.461 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetRecordNumberWithCR has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.461 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetRecordNumberWithCRLF has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.461 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetRecordNumberWithLF has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.461 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetRecordPositionWithCRLF has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.462 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetRecordPositionWithLF has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.462 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetRecords has 3 assertions: 
 assertEquals(RESULT.length, records.size()); ref {RESULT.length, records, RESULT} [623-623],
 assertTrue(records.size() > 0); ref {records} [624-624],
 assertArrayEquals(RESULT[i], records.get(i).values()); ref {records, i, RESULT} [626-626]
[m[m23.08.2022 - 09:08:12.462 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testGetRecordWithMultiLineValues has 17 assertions: 
 assertEquals(0, parser.getRecordNumber()); ref {parser} [637-637],
 assertEquals(0, parser.getCurrentLineNumber()); ref {parser} [638-638],
 assertNotNull(record = parser.nextRecord()); ref {parser, record} [639-639],
 assertEquals(3, parser.getCurrentLineNumber()); ref {parser} [640-640],
 assertEquals(1, record.getRecordNumber()); ref {record} [641-641],
 assertEquals(1, parser.getRecordNumber()); ref {parser} [642-642],
 assertNotNull(record = parser.nextRecord()); ref {parser, record} [643-643],
 assertEquals(6, parser.getCurrentLineNumber()); ref {parser} [644-644],
 assertEquals(2, record.getRecordNumber()); ref {record} [645-645],
 assertEquals(2, parser.getRecordNumber()); ref {parser} [646-646],
 assertNotNull(record = parser.nextRecord()); ref {parser, record} [647-647],
 assertEquals(8, parser.getCurrentLineNumber()); ref {parser} [648-648],
 assertEquals(3, record.getRecordNumber()); ref {record} [649-649],
 assertEquals(3, parser.getRecordNumber()); ref {parser} [650-650],
 assertNull(record = parser.nextRecord()); ref {parser, record} [651-651],
 assertEquals(8, parser.getCurrentLineNumber()); ref {parser} [652-652],
 assertEquals(3, parser.getRecordNumber()); ref {parser} [653-653]
[m[m23.08.2022 - 09:08:12.462 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testHeader has 5 assertions: 
 assertTrue(records.hasNext()); ref {records} [664-664],
 assertEquals(record.get(0), record.get("a")); ref {record} [666-666],
 assertEquals(record.get(1), record.get("b")); ref {record} [667-667],
 assertEquals(record.get(2), record.get("c")); ref {record} [668-668],
 assertFalse(records.hasNext()); ref {records} [671-671]
[m[m23.08.2022 - 09:08:12.462 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testHeaderComment has 5 assertions: 
 assertTrue(records.hasNext()); ref {records} [681-681],
 assertEquals(record.get(0), record.get("a")); ref {record} [683-683],
 assertEquals(record.get(1), record.get("b")); ref {record} [684-684],
 assertEquals(record.get(2), record.get("c")); ref {record} [685-685],
 assertFalse(records.hasNext()); ref {records} [688-688]
[m[m23.08.2022 - 09:08:12.463 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testHeaderMissing has 4 assertions: 
 assertTrue(records.hasNext()); ref {records} [698-698],
 assertEquals(record.get(0), record.get("a")); ref {record} [700-700],
 assertEquals(record.get(2), record.get("c")); ref {record} [701-701],
 assertFalse(records.hasNext()); ref {records} [704-704]
[m[m23.08.2022 - 09:08:12.463 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testHeaderMissingWithNull has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.463 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testHeadersMissing has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.463 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testHeadersMissingException has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.463 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testIgnoreCaseHeaderMapping has 3 assertions: 
 assertEquals("1", record.get("one")); ref {record} [731-731],
 assertEquals("2", record.get("two")); ref {record} [732-732],
 assertEquals("3", record.get("THREE")); ref {record} [733-733]
[m[m23.08.2022 - 09:08:12.463 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testIgnoreEmptyLines has 1 assertions: 
 assertEquals(3, records.size()); ref {records} [743-743]
[m[m23.08.2022 - 09:08:12.464 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testInvalidFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [751-751]
[m[m23.08.2022 - 09:08:12.464 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testIterator has 8 assertions: 
 assertTrue(iterator.hasNext()); ref {iterator} [761-761],
 assertArrayEquals(new String[] { "a", "b", "c" }, iterator.next().values()); ref {iterator} [768-768],
 assertArrayEquals(new String[] { "1", "2", "3" }, iterator.next().values()); ref {iterator} [769-769],
 assertTrue(iterator.hasNext()); ref {iterator} [770-770],
 assertTrue(iterator.hasNext()); ref {iterator} [771-771],
 assertTrue(iterator.hasNext()); ref {iterator} [772-772],
 assertArrayEquals(new String[] { "x", "y", "z" }, iterator.next().values()); ref {iterator} [773-773],
 assertFalse(iterator.hasNext()); ref {iterator} [774-774]
[m[m23.08.2022 - 09:08:12.464 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testIteratorSequenceBreaking has 6 assertions: 
 assertEquals(String.valueOf(recordNumber), record.get(0)); ref {recordNumber, record, String} [796-796],
 assertEquals(String.valueOf(recordNumber), record.get(0)); ref {recordNumber, record, String} [805-805],
 assertEquals(String.valueOf(recordNumber), record.get(0)); ref {recordNumber, record, String} [814-814],
 assertEquals(String.valueOf(recordNumber), record.get(0)); ref {recordNumber, record, String} [821-821],
 assertEquals(String.valueOf(recordNumber), record.get(0)); ref {recordNumber, record, String} [830-830],
 assertEquals(String.valueOf(recordNumber), record.get(0)); ref {recordNumber, record, String} [838-838]
[m[m23.08.2022 - 09:08:12.464 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testLineFeedEndings has 1 assertions: 
 assertEquals(4, records.size()); ref {records} [848-848]
[m[m23.08.2022 - 09:08:12.464 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testMappedButNotSetAsOutlook2007ContactExport has 20 assertions: 
 assertTrue(record.isMapped("A")); ref {record} [861-861],
 assertTrue(record.isMapped("B")); ref {record} [862-862],
 assertTrue(record.isMapped("C")); ref {record} [863-863],
 assertTrue(record.isSet("A")); ref {record} [864-864],
 assertTrue(record.isSet("B")); ref {record} [865-865],
 assertFalse(record.isSet("C")); ref {record} [866-866],
 assertEquals("1", record.get("A")); ref {record} [867-867],
 assertEquals("2", record.get("B")); ref {record} [868-868],
 assertFalse(record.isConsistent()); ref {record} [869-869],
 assertTrue(record.isMapped("A")); ref {record} [873-873],
 assertTrue(record.isMapped("B")); ref {record} [874-874],
 assertTrue(record.isMapped("C")); ref {record} [875-875],
 assertTrue(record.isSet("A")); ref {record} [876-876],
 assertTrue(record.isSet("B")); ref {record} [877-877],
 assertTrue(record.isSet("C")); ref {record} [878-878],
 assertEquals("x", record.get("A")); ref {record} [879-879],
 assertEquals("y", record.get("B")); ref {record} [880-880],
 assertEquals("z", record.get("C")); ref {record} [881-881],
 assertTrue(record.isConsistent()); ref {record} [882-882],
 assertFalse(records.hasNext()); ref {records} [884-884]
[m[m23.08.2022 - 09:08:12.465 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testMongoDbCsv has 6 assertions: 
 assertEquals("a a", first.get(0)); ref {first} [895-895],
 assertEquals("b", first.get(1)); ref {first} [896-896],
 assertEquals("c", first.get(2)); ref {first} [897-897],
 assertEquals("d", second.get(0)); ref {second} [900-900],
 assertEquals("e", second.get(1)); ref {second} [901-901],
 assertEquals("f", second.get(2)); ref {second} [902-902]
[m[m23.08.2022 - 09:08:12.465 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testMultipleIterators has 6 assertions: 
 assertEquals("a", first.get(0)); ref {first} [913-913],
 assertEquals("b", first.get(1)); ref {first} [914-914],
 assertEquals("c", first.get(2)); ref {first} [915-915],
 assertEquals("d", second.get(0)); ref {second} [918-918],
 assertEquals("e", second.get(1)); ref {second} [919-919],
 assertEquals("f", second.get(2)); ref {second} [920-920]
[m[m23.08.2022 - 09:08:12.465 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testNewCSVParserNullReaderFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [927-927]
[m[m23.08.2022 - 09:08:12.465 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testNewCSVParserReaderNullFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [934-934]
[m[m23.08.2022 - 09:08:12.465 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testNoHeaderMap has 1 assertions: 
 Assert.assertNull(parser.getHeaderMap()); ref {Assert, parser} [941-941]
[m[m23.08.2022 - 09:08:12.466 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testParse has 0 assertions: 
 
[m[m23.08.2022 - 09:08:12.466 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testParseFileNullFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [981-981]
[m[m23.08.2022 - 09:08:12.466 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testParseNullFileFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [988-988]
[m[m23.08.2022 - 09:08:12.466 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testParseNullPathFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [995-995]
[m[m23.08.2022 - 09:08:12.466 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testParseNullStringFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [1002-1002]
[m[m23.08.2022 - 09:08:12.466 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testParseNullUrlCharsetFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [1009-1009]
[m[m23.08.2022 - 09:08:12.466 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testParserUrlNullCharsetFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [1016-1016]
[m[m23.08.2022 - 09:08:12.467 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testParseStringNullFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [1023-1023]
[m[m23.08.2022 - 09:08:12.467 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testParseUrlCharsetNullFormat has 1 assertions: 
 Assert.fail("This test should have thrown an exception."); ref {Assert} [1030-1030]
[m[m23.08.2022 - 09:08:12.467 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testProvidedHeader has 9 assertions: 
 assertTrue(records.hasNext()); ref {records} [1041-1041],
 assertTrue(record.isMapped("A")); ref {record} [1043-1043],
 assertTrue(record.isMapped("B")); ref {record} [1044-1044],
 assertTrue(record.isMapped("C")); ref {record} [1045-1045],
 assertFalse(record.isMapped("NOT MAPPED")); ref {record} [1046-1046],
 assertEquals(record.get(0), record.get("A")); ref {record} [1047-1047],
 assertEquals(record.get(1), record.get("B")); ref {record} [1048-1048],
 assertEquals(record.get(2), record.get("C")); ref {record} [1049-1049],
 assertFalse(records.hasNext()); ref {records} [1052-1052]
[m[m23.08.2022 - 09:08:12.467 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testProvidedHeaderAuto has 9 assertions: 
 assertTrue(records.hasNext()); ref {records} [1062-1062],
 assertTrue(record.isMapped("a")); ref {record} [1064-1064],
 assertTrue(record.isMapped("b")); ref {record} [1065-1065],
 assertTrue(record.isMapped("c")); ref {record} [1066-1066],
 assertFalse(record.isMapped("NOT MAPPED")); ref {record} [1067-1067],
 assertEquals(record.get(0), record.get("a")); ref {record} [1068-1068],
 assertEquals(record.get(1), record.get("b")); ref {record} [1069-1069],
 assertEquals(record.get(2), record.get("c")); ref {record} [1070-1070],
 assertFalse(records.hasNext()); ref {records} [1073-1073]
[m[m23.08.2022 - 09:08:12.467 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testRoundtrip has 1 assertions: 
 assertEquals(input, out.toString()); ref {input, out} [1084-1084]
[m[m23.08.2022 - 09:08:12.467 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testSkipAutoHeader has 3 assertions: 
 assertEquals("1", record.get("a")); ref {record} [1093-1093],
 assertEquals("2", record.get("b")); ref {record} [1094-1094],
 assertEquals("3", record.get("c")); ref {record} [1095-1095]
[m[m23.08.2022 - 09:08:12.468 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testSkipHeaderOverrideDuplicateHeaders has 3 assertions: 
 assertEquals("1", record.get("X")); ref {record} [1104-1104],
 assertEquals("2", record.get("Y")); ref {record} [1105-1105],
 assertEquals("3", record.get("Z")); ref {record} [1106-1106]
[m[m23.08.2022 - 09:08:12.468 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testSkipSetAltHeaders has 3 assertions: 
 assertEquals("1", record.get("X")); ref {record} [1115-1115],
 assertEquals("2", record.get("Y")); ref {record} [1116-1116],
 assertEquals("3", record.get("Z")); ref {record} [1117-1117]
[m[m23.08.2022 - 09:08:12.468 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testSkipSetHeader has 3 assertions: 
 assertEquals("1", record.get("a")); ref {record} [1126-1126],
 assertEquals("2", record.get("b")); ref {record} [1127-1127],
 assertEquals("3", record.get("c")); ref {record} [1128-1128]
[m[m23.08.2022 - 09:08:12.468 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testStartWithEmptyLinesThenHeaders has 3 assertions: 
 assertEquals(res.length, records.size()); ref {res, records, res.length} [1141-1141],
 assertTrue(records.size() > 0); ref {records} [1142-1142],
 assertArrayEquals(res[i], records.get(i).values()); ref {res, records, i} [1144-1144]
[m[m23.08.2022 - 09:08:12.468 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testTrailingDelimiter has 4 assertions: 
 assertEquals("1", record.get("X")); ref {record} [1156-1156],
 assertEquals("2", record.get("Y")); ref {record} [1157-1157],
 assertEquals("3", record.get("Z")); ref {record} [1158-1158],
 Assert.assertEquals(3, record.size()); ref {Assert, record} [1159-1159]
[m[m23.08.2022 - 09:08:12.469 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testTrim has 4 assertions: 
 assertEquals("1", record.get("X")); ref {record} [1168-1168],
 assertEquals("2", record.get("Y")); ref {record} [1169-1169],
 assertEquals("3", record.get("Z")); ref {record} [1170-1170],
 Assert.assertEquals(3, record.size()); ref {Assert, record} [1171-1171]
[m[m23.08.2022 - 09:08:12.469 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.CSVParserTest::testRepeatedHeadersAreReturnedInCSVRecordHeaderNames has 1 assertions: 
 assertEquals(Arrays.asList("header1", "header2", "header1"), record.getParser().getHeaderNames()); ref {record, Arrays} [1179-1179]
[m[m23.08.2022 - 09:08:12.470 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m23.08.2022 - 09:08:12.470 [INFO ] ParsingStrategy.parseTestSuite() - Found 0 test cases
[m[m23.08.2022 - 09:08:12.470 [INFO ] ParsingStrategy.parseTestSuite() - Found 2 test cases
[m[m23.08.2022 - 09:08:12.470 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.AssertionsTest::testNotNull has 1 assertions: 
 Assertions.notNull(new Object(), "object"); ref {Assertions} [28-28]
[m[m23.08.2022 - 09:08:12.471 [INFO ] ParsingStrategy.lambda$parseTestSuite$28() - Testcase org.apache.commons.csv.AssertionsTest::testNotNullNull has 1 assertions: 
 Assertions.notNull(null, "object"); ref {Assertions} [33-33]
[m[m23.08.2022 - 09:08:12.473 [INFO ] ParsingStrategy.mergePartialSuites() - ====================================================================
[m[m23.08.2022 - 09:08:12.473 [INFO ] ParsingStrategy.mergePartialSuites() - Finished parsing the test suite.
[m[m23.08.2022 - 09:08:12.475 [INFO ] ParsingStrategy.mergePartialSuites() - It contains 311 test cases and 976 assertions.
[m[m23.08.2022 - 09:08:12.478 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 1/311
[m[m23.08.2022 - 09:08:12.478 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAll
[m[32m23.08.2022 - 09:08:12.497 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAll.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAll
[m[m23.08.2022 - 09:08:12.784 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:12.785 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAll.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAll/report.xml
[m[m23.08.2022 - 09:08:13.003 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAll was generated successfully
[m[m23.08.2022 - 09:08:13.003 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 2/311
[m[m23.08.2022 - 09:08:13.003 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAllNonNull
[m[32m23.08.2022 - 09:08:13.003 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAllNonNull.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAllNonNull
[m[m23.08.2022 - 09:08:13.183 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:13.183 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAllNonNull.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAllNonNull/report.xml
[m[m23.08.2022 - 09:08:13.388 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAllNonNull was generated successfully
[m[m23.08.2022 - 09:08:13.388 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 3/311
[m[m23.08.2022 - 09:08:13.389 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.issues.JiraCsv203Test#testWithoutQuoteMode
[m[32m23.08.2022 - 09:08:13.389 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testWithoutQuoteMode.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.issues.JiraCsv203Test#testWithoutQuoteMode
[m[m23.08.2022 - 09:08:13.548 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:13.548 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testWithoutQuoteMode.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testWithoutQuoteMode/report.xml
[m[m23.08.2022 - 09:08:13.736 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.issues.JiraCsv203Test#testWithoutQuoteMode was generated successfully
[m[m23.08.2022 - 09:08:13.736 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 4/311
[m[m23.08.2022 - 09:08:13.736 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeMinimal
[m[32m23.08.2022 - 09:08:13.737 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeMinimal.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeMinimal
[m[m23.08.2022 - 09:08:13.930 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:13.931 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeMinimal.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeMinimal/report.xml
[m[m23.08.2022 - 09:08:14.125 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeMinimal was generated successfully
[m[m23.08.2022 - 09:08:14.125 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 5/311
[m[m23.08.2022 - 09:08:14.125 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeNonNumeric
[m[32m23.08.2022 - 09:08:14.126 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeNonNumeric.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeNonNumeric
[m[m23.08.2022 - 09:08:14.327 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:14.328 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeNonNumeric.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeNonNumeric/report.xml
[m[m23.08.2022 - 09:08:14.549 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeNonNumeric was generated successfully
[m[m23.08.2022 - 09:08:14.550 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 6/311
[m[m23.08.2022 - 09:08:14.550 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.issues.JiraCsv203Test#testWithoutNullString
[m[32m23.08.2022 - 09:08:14.550 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testWithoutNullString.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.issues.JiraCsv203Test#testWithoutNullString
[m[m23.08.2022 - 09:08:14.714 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:14.733 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testWithoutNullString.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testWithoutNullString/report.xml
[m[m23.08.2022 - 09:08:14.975 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.issues.JiraCsv203Test#testWithoutNullString was generated successfully
[m[m23.08.2022 - 09:08:14.975 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 7/311
[m[m23.08.2022 - 09:08:14.975 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.issues.JiraCsv203Test#testWithEmptyValues
[m[32m23.08.2022 - 09:08:14.975 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testWithEmptyValues.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.issues.JiraCsv203Test#testWithEmptyValues
[m[m23.08.2022 - 09:08:15.139 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:15.140 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testWithEmptyValues.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv203Test#testWithEmptyValues/report.xml
[m[m23.08.2022 - 09:08:15.343 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.issues.JiraCsv203Test#testWithEmptyValues was generated successfully
[m[m23.08.2022 - 09:08:15.343 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 8/311
[m[m23.08.2022 - 09:08:15.343 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatPredefinedTest#testDefault
[m[32m23.08.2022 - 09:08:15.343 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testDefault.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatPredefinedTest#testDefault
[m[m23.08.2022 - 09:08:15.500 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:15.500 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testDefault.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testDefault/report.xml
[m[m23.08.2022 - 09:08:15.705 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatPredefinedTest#testDefault was generated successfully
[m[m23.08.2022 - 09:08:15.705 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 9/311
[m[m23.08.2022 - 09:08:15.705 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatPredefinedTest#testExcel
[m[32m23.08.2022 - 09:08:15.706 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testExcel.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatPredefinedTest#testExcel
[m[m23.08.2022 - 09:08:15.871 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:15.871 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testExcel.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testExcel/report.xml
[m[m23.08.2022 - 09:08:16.071 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatPredefinedTest#testExcel was generated successfully
[m[m23.08.2022 - 09:08:16.071 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 10/311
[m[m23.08.2022 - 09:08:16.071 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatPredefinedTest#testMySQL
[m[32m23.08.2022 - 09:08:16.071 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testMySQL.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatPredefinedTest#testMySQL
[m[m23.08.2022 - 09:08:16.230 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:16.230 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testMySQL.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testMySQL/report.xml
[m[m23.08.2022 - 09:08:16.417 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatPredefinedTest#testMySQL was generated successfully
[m[m23.08.2022 - 09:08:16.417 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 11/311
[m[m23.08.2022 - 09:08:16.417 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatPredefinedTest#testOracle
[m[32m23.08.2022 - 09:08:16.417 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testOracle.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatPredefinedTest#testOracle
[m[m23.08.2022 - 09:08:16.581 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:16.582 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testOracle.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testOracle/report.xml
[m[m23.08.2022 - 09:08:16.762 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatPredefinedTest#testOracle was generated successfully
[m[m23.08.2022 - 09:08:16.762 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 12/311
[m[m23.08.2022 - 09:08:16.762 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlCsv
[m[32m23.08.2022 - 09:08:16.762 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlCsv.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlCsv
[m[m23.08.2022 - 09:08:16.944 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:16.944 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlCsv.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlCsv/report.xml
[m[m23.08.2022 - 09:08:17.134 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlCsv was generated successfully
[m[m23.08.2022 - 09:08:17.134 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 13/311
[m[m23.08.2022 - 09:08:17.134 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbCsv
[m[32m23.08.2022 - 09:08:17.135 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbCsv.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbCsv
[m[m23.08.2022 - 09:08:17.337 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:17.338 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbCsv.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbCsv/report.xml
[m[m23.08.2022 - 09:08:17.584 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbCsv was generated successfully
[m[m23.08.2022 - 09:08:17.584 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 14/311
[m[m23.08.2022 - 09:08:17.585 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbTsv
[m[32m23.08.2022 - 09:08:17.585 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbTsv.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbTsv
[m[m23.08.2022 - 09:08:17.780 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:17.781 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbTsv.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbTsv/report.xml
[m[m23.08.2022 - 09:08:17.969 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbTsv was generated successfully
[m[m23.08.2022 - 09:08:17.969 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 15/311
[m[m23.08.2022 - 09:08:17.969 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlText
[m[32m23.08.2022 - 09:08:17.969 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlText.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlText
[m[m23.08.2022 - 09:08:18.155 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:18.156 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlText.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlText/report.xml
[m[m23.08.2022 - 09:08:18.345 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlText was generated successfully
[m[m23.08.2022 - 09:08:18.345 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 16/311
[m[m23.08.2022 - 09:08:18.346 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatPredefinedTest#testRFC4180
[m[32m23.08.2022 - 09:08:18.346 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testRFC4180.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatPredefinedTest#testRFC4180
[m[m23.08.2022 - 09:08:18.502 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:18.502 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testRFC4180.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testRFC4180/report.xml
[m[m23.08.2022 - 09:08:18.688 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatPredefinedTest#testRFC4180 was generated successfully
[m[m23.08.2022 - 09:08:18.689 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 17/311
[m[m23.08.2022 - 09:08:18.689 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatPredefinedTest#testTDF
[m[32m23.08.2022 - 09:08:18.689 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testTDF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatPredefinedTest#testTDF
[m[m23.08.2022 - 09:08:18.895 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:18.896 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testTDF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatPredefinedTest#testTDF/report.xml
[m[m23.08.2022 - 09:08:19.097 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatPredefinedTest#testTDF was generated successfully
[m[m23.08.2022 - 09:08:19.097 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 18/311
[m[m23.08.2022 - 09:08:19.097 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.ExtendedBufferedReaderTest#testEmptyInput
[m[32m23.08.2022 - 09:08:19.097 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testEmptyInput.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.ExtendedBufferedReaderTest#testEmptyInput
[m[m23.08.2022 - 09:08:19.246 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:19.246 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testEmptyInput.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testEmptyInput/report.xml
[m[m23.08.2022 - 09:08:19.433 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.ExtendedBufferedReaderTest#testEmptyInput was generated successfully
[m[m23.08.2022 - 09:08:19.433 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 19/311
[m[m23.08.2022 - 09:08:19.433 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead1
[m[32m23.08.2022 - 09:08:19.433 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead1.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead1
[m[m23.08.2022 - 09:08:19.582 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:19.583 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead1.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead1/report.xml
[m[m23.08.2022 - 09:08:19.764 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead1 was generated successfully
[m[m23.08.2022 - 09:08:19.764 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 20/311
[m[m23.08.2022 - 09:08:19.764 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead2
[m[32m23.08.2022 - 09:08:19.764 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead2.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead2
[m[m23.08.2022 - 09:08:19.925 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:19.925 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead2.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead2/report.xml
[m[m23.08.2022 - 09:08:20.111 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead2 was generated successfully
[m[m23.08.2022 - 09:08:20.112 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 21/311
[m[m23.08.2022 - 09:08:20.112 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLine
[m[32m23.08.2022 - 09:08:20.112 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLine.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLine
[m[m23.08.2022 - 09:08:20.269 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:20.269 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLine.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLine/report.xml
[m[m23.08.2022 - 09:08:20.450 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLine was generated successfully
[m[m23.08.2022 - 09:08:20.450 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 22/311
[m[m23.08.2022 - 09:08:20.450 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.ExtendedBufferedReaderTest#testReadChar
[m[32m23.08.2022 - 09:08:20.450 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testReadChar.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.ExtendedBufferedReaderTest#testReadChar
[m[m23.08.2022 - 09:08:20.603 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:20.604 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testReadChar.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.ExtendedBufferedReaderTest#testReadChar/report.xml
[m[m23.08.2022 - 09:08:20.795 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.ExtendedBufferedReaderTest#testReadChar was generated successfully
[m[m23.08.2022 - 09:08:20.795 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 23/311
[m[m23.08.2022 - 09:08:20.796 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.issues.JiraCsv198Test#test
[m[32m23.08.2022 - 09:08:20.796 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv198Test#test.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.issues.JiraCsv198Test#test
[m[m23.08.2022 - 09:08:21.013 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:21.014 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv198Test#test.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv198Test#test/report.xml
[m[m23.08.2022 - 09:08:21.201 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.issues.JiraCsv198Test#test was generated successfully
[m[m23.08.2022 - 09:08:21.201 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 24/311
[m[m23.08.2022 - 09:08:21.201 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile0
[m[32m23.08.2022 - 09:08:21.201 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile0.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile0
[m[m23.08.2022 - 09:08:21.396 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:21.396 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile0.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile0/report.xml
[m[m23.08.2022 - 09:08:21.645 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile0 was generated successfully
[m[m23.08.2022 - 09:08:21.645 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 25/311
[m[m23.08.2022 - 09:08:21.645 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl0
[m[32m23.08.2022 - 09:08:21.645 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl0.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl0
[m[m23.08.2022 - 09:08:21.821 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:21.822 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl0.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl0/report.xml
[m[m23.08.2022 - 09:08:22.094 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl0 was generated successfully
[m[m23.08.2022 - 09:08:22.095 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 26/311
[m[m23.08.2022 - 09:08:22.095 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile1
[m[32m23.08.2022 - 09:08:22.095 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile1.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile1
[m[m23.08.2022 - 09:08:22.311 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:22.312 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile1.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile1/report.xml
[m[m23.08.2022 - 09:08:22.498 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile1 was generated successfully
[m[m23.08.2022 - 09:08:22.499 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 27/311
[m[m23.08.2022 - 09:08:22.499 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl1
[m[32m23.08.2022 - 09:08:22.499 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl1.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl1
[m[m23.08.2022 - 09:08:22.697 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:22.697 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl1.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl1/report.xml
[m[m23.08.2022 - 09:08:22.889 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl1 was generated successfully
[m[m23.08.2022 - 09:08:22.889 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 28/311
[m[m23.08.2022 - 09:08:22.890 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile2
[m[32m23.08.2022 - 09:08:22.890 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile2.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile2
[m[m23.08.2022 - 09:08:23.077 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:23.078 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile2.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile2/report.xml
[m[m23.08.2022 - 09:08:23.269 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile2 was generated successfully
[m[m23.08.2022 - 09:08:23.269 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 29/311
[m[m23.08.2022 - 09:08:23.269 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl2
[m[32m23.08.2022 - 09:08:23.269 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl2.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl2
[m[m23.08.2022 - 09:08:23.440 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:23.440 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl2.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl2/report.xml
[m[m23.08.2022 - 09:08:23.653 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl2 was generated successfully
[m[m23.08.2022 - 09:08:23.653 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 30/311
[m[m23.08.2022 - 09:08:23.653 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile3
[m[32m23.08.2022 - 09:08:23.653 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile3.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile3
[m[m23.08.2022 - 09:08:23.848 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:23.849 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile3.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile3/report.xml
[m[m23.08.2022 - 09:08:24.061 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile3 was generated successfully
[m[m23.08.2022 - 09:08:24.061 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 31/311
[m[m23.08.2022 - 09:08:24.061 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl3
[m[32m23.08.2022 - 09:08:24.061 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl3.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl3
[m[m23.08.2022 - 09:08:24.231 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:24.231 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl3.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl3/report.xml
[m[m23.08.2022 - 09:08:24.434 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl3 was generated successfully
[m[m23.08.2022 - 09:08:24.434 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 32/311
[m[m23.08.2022 - 09:08:24.434 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile4
[m[32m23.08.2022 - 09:08:24.434 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile4.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile4
[m[m23.08.2022 - 09:08:24.610 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:24.610 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile4.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile4/report.xml
[m[m23.08.2022 - 09:08:24.840 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile4 was generated successfully
[m[m23.08.2022 - 09:08:24.841 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 33/311
[m[m23.08.2022 - 09:08:24.841 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl4
[m[32m23.08.2022 - 09:08:24.841 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl4.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl4
[m[m23.08.2022 - 09:08:25.031 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:25.031 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl4.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl4/report.xml
[m[m23.08.2022 - 09:08:25.238 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl4 was generated successfully
[m[m23.08.2022 - 09:08:25.238 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 34/311
[m[m23.08.2022 - 09:08:25.239 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile5
[m[32m23.08.2022 - 09:08:25.239 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile5.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile5
[m[m23.08.2022 - 09:08:25.432 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:25.432 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile5.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile5/report.xml
[m[m23.08.2022 - 09:08:25.616 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile5 was generated successfully
[m[m23.08.2022 - 09:08:25.616 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 35/311
[m[m23.08.2022 - 09:08:25.616 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl5
[m[32m23.08.2022 - 09:08:25.616 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl5.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl5
[m[m23.08.2022 - 09:08:25.802 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:25.802 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl5.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl5/report.xml
[m[m23.08.2022 - 09:08:26.012 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl5 was generated successfully
[m[m23.08.2022 - 09:08:26.012 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 36/311
[m[m23.08.2022 - 09:08:26.012 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsCommentStartThrowsException
[m[32m23.08.2022 - 09:08:26.012 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsCommentStartThrowsException.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsCommentStartThrowsException
[m[m23.08.2022 - 09:08:26.197 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:26.197 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsCommentStartThrowsException.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsCommentStartThrowsException/report.xml
[m[m23.08.2022 - 09:08:26.389 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsCommentStartThrowsException was generated successfully
[m[m23.08.2022 - 09:08:26.389 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 37/311
[m[m23.08.2022 - 09:08:26.390 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsEscapeThrowsException
[m[32m23.08.2022 - 09:08:26.390 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsEscapeThrowsException.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsEscapeThrowsException
[m[m23.08.2022 - 09:08:26.569 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:26.569 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsEscapeThrowsException.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsEscapeThrowsException/report.xml
[m[m23.08.2022 - 09:08:26.772 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsEscapeThrowsException was generated successfully
[m[m23.08.2022 - 09:08:26.772 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 38/311
[m[m23.08.2022 - 09:08:26.772 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testDuplicateHeaderElements
[m[32m23.08.2022 - 09:08:26.772 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testDuplicateHeaderElements.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testDuplicateHeaderElements
[m[m23.08.2022 - 09:08:26.935 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:26.935 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testDuplicateHeaderElements.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testDuplicateHeaderElements/report.xml
[m[m23.08.2022 - 09:08:27.135 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testDuplicateHeaderElements was generated successfully
[m[m23.08.2022 - 09:08:27.136 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 39/311
[m[m23.08.2022 - 09:08:27.136 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEquals
[m[32m23.08.2022 - 09:08:27.136 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEquals.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEquals
[m[m23.08.2022 - 09:08:27.298 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:27.298 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEquals.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEquals/report.xml
[m[m23.08.2022 - 09:08:27.481 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEquals was generated successfully
[m[m23.08.2022 - 09:08:27.481 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 40/311
[m[m23.08.2022 - 09:08:27.481 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsCommentStart
[m[32m23.08.2022 - 09:08:27.482 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsCommentStart.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsCommentStart
[m[m23.08.2022 - 09:08:27.644 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:27.644 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsCommentStart.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsCommentStart/report.xml
[m[m23.08.2022 - 09:08:27.845 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsCommentStart was generated successfully
[m[m23.08.2022 - 09:08:27.845 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 41/311
[m[m23.08.2022 - 09:08:27.846 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsDelimiter
[m[32m23.08.2022 - 09:08:27.846 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsDelimiter.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsDelimiter
[m[m23.08.2022 - 09:08:28.022 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:28.022 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsDelimiter.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsDelimiter/report.xml
[m[m23.08.2022 - 09:08:28.235 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsDelimiter was generated successfully
[m[m23.08.2022 - 09:08:28.235 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 42/311
[m[m23.08.2022 - 09:08:28.235 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsEscape
[m[32m23.08.2022 - 09:08:28.236 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsEscape.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsEscape
[m[m23.08.2022 - 09:08:28.414 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:28.414 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsEscape.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsEscape/report.xml
[m[m23.08.2022 - 09:08:28.654 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsEscape was generated successfully
[m[m23.08.2022 - 09:08:28.654 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 43/311
[m[m23.08.2022 - 09:08:28.655 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsHeader
[m[32m23.08.2022 - 09:08:28.655 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsHeader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsHeader
[m[m23.08.2022 - 09:08:28.861 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:28.861 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsHeader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsHeader/report.xml
[m[m23.08.2022 - 09:08:29.057 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsHeader was generated successfully
[m[m23.08.2022 - 09:08:29.058 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 44/311
[m[m23.08.2022 - 09:08:29.058 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreEmptyLines
[m[32m23.08.2022 - 09:08:29.058 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreEmptyLines.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreEmptyLines
[m[m23.08.2022 - 09:08:29.247 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:29.248 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreEmptyLines.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreEmptyLines/report.xml
[m[m23.08.2022 - 09:08:29.426 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreEmptyLines was generated successfully
[m[m23.08.2022 - 09:08:29.426 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 45/311
[m[m23.08.2022 - 09:08:29.427 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreSurroundingSpaces
[m[32m23.08.2022 - 09:08:29.427 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreSurroundingSpaces.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreSurroundingSpaces
[m[m23.08.2022 - 09:08:29.621 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:29.621 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreSurroundingSpaces.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreSurroundingSpaces/report.xml
[m[m23.08.2022 - 09:08:29.811 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreSurroundingSpaces was generated successfully
[m[m23.08.2022 - 09:08:29.812 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 46/311
[m[m23.08.2022 - 09:08:29.812 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsLeftNoQuoteRightQuote
[m[32m23.08.2022 - 09:08:29.812 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsLeftNoQuoteRightQuote.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsLeftNoQuoteRightQuote
[m[m23.08.2022 - 09:08:29.992 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:29.993 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsLeftNoQuoteRightQuote.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsLeftNoQuoteRightQuote/report.xml
[m[m23.08.2022 - 09:08:30.170 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsLeftNoQuoteRightQuote was generated successfully
[m[m23.08.2022 - 09:08:30.170 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 47/311
[m[m23.08.2022 - 09:08:30.170 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsNoQuotes
[m[32m23.08.2022 - 09:08:30.170 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsNoQuotes.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsNoQuotes
[m[m23.08.2022 - 09:08:30.348 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:30.348 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsNoQuotes.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsNoQuotes/report.xml
[m[m23.08.2022 - 09:08:30.558 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsNoQuotes was generated successfully
[m[m23.08.2022 - 09:08:30.558 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 48/311
[m[m23.08.2022 - 09:08:30.558 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsNullString
[m[32m23.08.2022 - 09:08:30.558 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsNullString.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsNullString
[m[m23.08.2022 - 09:08:30.745 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:30.745 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsNullString.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsNullString/report.xml
[m[m23.08.2022 - 09:08:30.937 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsNullString was generated successfully
[m[m23.08.2022 - 09:08:30.937 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 49/311
[m[m23.08.2022 - 09:08:30.937 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsOne
[m[32m23.08.2022 - 09:08:30.938 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsOne.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsOne
[m[m23.08.2022 - 09:08:31.111 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:31.111 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsOne.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsOne/report.xml
[m[m23.08.2022 - 09:08:31.342 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsOne was generated successfully
[m[m23.08.2022 - 09:08:31.342 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 50/311
[m[m23.08.2022 - 09:08:31.342 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsQuoteChar
[m[32m23.08.2022 - 09:08:31.342 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsQuoteChar.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsQuoteChar
[m[m23.08.2022 - 09:08:31.504 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:31.504 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsQuoteChar.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsQuoteChar/report.xml
[m[m23.08.2022 - 09:08:31.681 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsQuoteChar was generated successfully
[m[m23.08.2022 - 09:08:31.681 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 51/311
[m[m23.08.2022 - 09:08:31.681 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsQuotePolicy
[m[32m23.08.2022 - 09:08:31.682 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsQuotePolicy.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsQuotePolicy
[m[m23.08.2022 - 09:08:31.843 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:31.843 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsQuotePolicy.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsQuotePolicy/report.xml
[m[m23.08.2022 - 09:08:32.056 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsQuotePolicy was generated successfully
[m[m23.08.2022 - 09:08:32.056 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 52/311
[m[m23.08.2022 - 09:08:32.056 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsRecordSeparator
[m[32m23.08.2022 - 09:08:32.056 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsRecordSeparator.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsRecordSeparator
[m[m23.08.2022 - 09:08:32.256 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:32.256 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsRecordSeparator.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsRecordSeparator/report.xml
[m[m23.08.2022 - 09:08:32.447 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsRecordSeparator was generated successfully
[m[m23.08.2022 - 09:08:32.447 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 53/311
[m[m23.08.2022 - 09:08:32.448 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsSkipHeaderRecord
[m[32m23.08.2022 - 09:08:32.448 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsSkipHeaderRecord.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsSkipHeaderRecord
[m[m23.08.2022 - 09:08:32.643 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:32.643 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsSkipHeaderRecord.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsSkipHeaderRecord/report.xml
[m[m23.08.2022 - 09:08:32.847 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsSkipHeaderRecord was generated successfully
[m[m23.08.2022 - 09:08:32.847 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 54/311
[m[m23.08.2022 - 09:08:32.848 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEqualsWithNull
[m[32m23.08.2022 - 09:08:32.848 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsWithNull.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEqualsWithNull
[m[m23.08.2022 - 09:08:33.028 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:33.028 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsWithNull.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEqualsWithNull/report.xml
[m[m23.08.2022 - 09:08:33.250 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEqualsWithNull was generated successfully
[m[m23.08.2022 - 09:08:33.250 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 55/311
[m[m23.08.2022 - 09:08:33.250 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsException
[m[32m23.08.2022 - 09:08:33.250 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsException.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsException
[m[m23.08.2022 - 09:08:33.462 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:33.462 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsException.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsException/report.xml
[m[m23.08.2022 - 09:08:33.669 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsException was generated successfully
[m[m23.08.2022 - 09:08:33.669 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 56/311
[m[m23.08.2022 - 09:08:33.669 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsExceptionForWrapperType
[m[32m23.08.2022 - 09:08:33.670 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsExceptionForWrapperType.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsExceptionForWrapperType
[m[m23.08.2022 - 09:08:33.864 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:33.864 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsExceptionForWrapperType.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsExceptionForWrapperType/report.xml
[m[m23.08.2022 - 09:08:34.076 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsExceptionForWrapperType was generated successfully
[m[m23.08.2022 - 09:08:34.076 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 57/311
[m[m23.08.2022 - 09:08:34.076 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testFormat
[m[32m23.08.2022 - 09:08:34.076 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testFormat
[m[m23.08.2022 - 09:08:34.256 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:34.257 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testFormat/report.xml
[m[m23.08.2022 - 09:08:34.453 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testFormat was generated successfully
[m[m23.08.2022 - 09:08:34.454 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 58/311
[m[m23.08.2022 - 09:08:34.454 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testFormatThrowsNullPointerException
[m[32m23.08.2022 - 09:08:34.454 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testFormatThrowsNullPointerException.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testFormatThrowsNullPointerException
[m[m23.08.2022 - 09:08:34.634 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:34.634 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testFormatThrowsNullPointerException.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testFormatThrowsNullPointerException/report.xml
[m[m23.08.2022 - 09:08:34.886 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testFormatThrowsNullPointerException was generated successfully
[m[m23.08.2022 - 09:08:34.886 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 59/311
[m[m23.08.2022 - 09:08:34.886 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testGetHeader
[m[32m23.08.2022 - 09:08:34.886 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testGetHeader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testGetHeader
[m[m23.08.2022 - 09:08:35.071 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:35.071 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testGetHeader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testGetHeader/report.xml
[m[m23.08.2022 - 09:08:35.289 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testGetHeader was generated successfully
[m[m23.08.2022 - 09:08:35.289 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 60/311
[m[m23.08.2022 - 09:08:35.289 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testHashCodeAndWithIgnoreHeaderCase
[m[32m23.08.2022 - 09:08:35.289 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testHashCodeAndWithIgnoreHeaderCase.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testHashCodeAndWithIgnoreHeaderCase
[m[m23.08.2022 - 09:08:35.488 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:35.488 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testHashCodeAndWithIgnoreHeaderCase.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testHashCodeAndWithIgnoreHeaderCase/report.xml
[m[m23.08.2022 - 09:08:35.684 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testHashCodeAndWithIgnoreHeaderCase was generated successfully
[m[m23.08.2022 - 09:08:35.685 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 61/311
[m[m23.08.2022 - 09:08:35.685 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testNewFormat
[m[32m23.08.2022 - 09:08:35.685 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testNewFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testNewFormat
[m[m23.08.2022 - 09:08:35.874 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:35.874 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testNewFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testNewFormat/report.xml
[m[m23.08.2022 - 09:08:36.080 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testNewFormat was generated successfully
[m[m23.08.2022 - 09:08:36.080 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 62/311
[m[m23.08.2022 - 09:08:36.080 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testNullRecordSeparatorCsv106
[m[32m23.08.2022 - 09:08:36.080 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testNullRecordSeparatorCsv106.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testNullRecordSeparatorCsv106
[m[m23.08.2022 - 09:08:36.276 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:36.276 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testNullRecordSeparatorCsv106.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testNullRecordSeparatorCsv106/report.xml
[m[m23.08.2022 - 09:08:36.478 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testNullRecordSeparatorCsv106 was generated successfully
[m[m23.08.2022 - 09:08:36.479 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 63/311
[m[m23.08.2022 - 09:08:36.479 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsException
[m[32m23.08.2022 - 09:08:36.479 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsException.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsException
[m[m23.08.2022 - 09:08:36.672 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:36.673 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsException.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsException/report.xml
[m[m23.08.2022 - 09:08:36.959 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsException was generated successfully
[m[m23.08.2022 - 09:08:36.960 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 64/311
[m[m23.08.2022 - 09:08:36.960 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType
[m[32m23.08.2022 - 09:08:36.960 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType
[m[m23.08.2022 - 09:08:37.175 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:37.175 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType/report.xml
[m[m23.08.2022 - 09:08:37.441 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType was generated successfully
[m[m23.08.2022 - 09:08:37.441 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 65/311
[m[m23.08.2022 - 09:08:37.442 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsDelimiterThrowsException
[m[32m23.08.2022 - 09:08:37.442 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsDelimiterThrowsException.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsDelimiterThrowsException
[m[m23.08.2022 - 09:08:37.665 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:37.666 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsDelimiterThrowsException.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsDelimiterThrowsException/report.xml
[m[m23.08.2022 - 09:08:37.863 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsDelimiterThrowsException was generated successfully
[m[m23.08.2022 - 09:08:37.863 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 66/311
[m[m23.08.2022 - 09:08:37.863 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testQuotePolicyNoneWithoutEscapeThrowsException
[m[32m23.08.2022 - 09:08:37.863 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testQuotePolicyNoneWithoutEscapeThrowsException.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testQuotePolicyNoneWithoutEscapeThrowsException
[m[m23.08.2022 - 09:08:38.032 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:38.033 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testQuotePolicyNoneWithoutEscapeThrowsException.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testQuotePolicyNoneWithoutEscapeThrowsException/report.xml
[m[m23.08.2022 - 09:08:38.229 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testQuotePolicyNoneWithoutEscapeThrowsException was generated successfully
[m[m23.08.2022 - 09:08:38.229 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 67/311
[m[m23.08.2022 - 09:08:38.229 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testRFC4180
[m[32m23.08.2022 - 09:08:38.230 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testRFC4180.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testRFC4180
[m[m23.08.2022 - 09:08:38.415 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:38.415 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testRFC4180.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testRFC4180/report.xml
[m[m23.08.2022 - 09:08:38.602 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testRFC4180 was generated successfully
[m[m23.08.2022 - 09:08:38.602 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 68/311
[m[m23.08.2022 - 09:08:38.602 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testSerialization
[m[32m23.08.2022 - 09:08:38.602 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testSerialization.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testSerialization
[m[m23.08.2022 - 09:08:38.844 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:38.845 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testSerialization.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testSerialization/report.xml
[m[m23.08.2022 - 09:08:39.070 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testSerialization was generated successfully
[m[m23.08.2022 - 09:08:39.070 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 69/311
[m[m23.08.2022 - 09:08:39.071 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testToString
[m[32m23.08.2022 - 09:08:39.071 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testToString.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testToString
[m[m23.08.2022 - 09:08:39.282 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:39.283 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testToString.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testToString/report.xml
[m[m23.08.2022 - 09:08:39.496 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testToString was generated successfully
[m[m23.08.2022 - 09:08:39.496 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 70/311
[m[m23.08.2022 - 09:08:39.496 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testToStringAndWithCommentMarkerTakingCharacter
[m[32m23.08.2022 - 09:08:39.496 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testToStringAndWithCommentMarkerTakingCharacter.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testToStringAndWithCommentMarkerTakingCharacter
[m[m23.08.2022 - 09:08:39.694 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:39.694 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testToStringAndWithCommentMarkerTakingCharacter.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testToStringAndWithCommentMarkerTakingCharacter/report.xml
[m[m23.08.2022 - 09:08:39.927 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testToStringAndWithCommentMarkerTakingCharacter was generated successfully
[m[m23.08.2022 - 09:08:39.927 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 71/311
[m[m23.08.2022 - 09:08:39.927 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithCommentStart
[m[32m23.08.2022 - 09:08:39.927 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithCommentStart.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithCommentStart
[m[m23.08.2022 - 09:08:40.089 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:40.089 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithCommentStart.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithCommentStart/report.xml
[m[m23.08.2022 - 09:08:40.277 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithCommentStart was generated successfully
[m[m23.08.2022 - 09:08:40.277 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 72/311
[m[m23.08.2022 - 09:08:40.278 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithCommentStartCRThrowsException
[m[32m23.08.2022 - 09:08:40.278 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithCommentStartCRThrowsException.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithCommentStartCRThrowsException
[m[m23.08.2022 - 09:08:40.455 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:40.456 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithCommentStartCRThrowsException.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithCommentStartCRThrowsException/report.xml
[m[m23.08.2022 - 09:08:40.707 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithCommentStartCRThrowsException was generated successfully
[m[m23.08.2022 - 09:08:40.707 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 73/311
[m[m23.08.2022 - 09:08:40.707 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithDelimiter
[m[32m23.08.2022 - 09:08:40.707 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithDelimiter.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithDelimiter
[m[m23.08.2022 - 09:08:40.896 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:40.910 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithDelimiter.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithDelimiter/report.xml
[m[m23.08.2022 - 09:08:41.165 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithDelimiter was generated successfully
[m[m23.08.2022 - 09:08:41.165 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 74/311
[m[m23.08.2022 - 09:08:41.165 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithDelimiterLFThrowsException
[m[32m23.08.2022 - 09:08:41.165 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithDelimiterLFThrowsException.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithDelimiterLFThrowsException
[m[m23.08.2022 - 09:08:41.327 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:41.328 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithDelimiterLFThrowsException.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithDelimiterLFThrowsException/report.xml
[m[m23.08.2022 - 09:08:41.542 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithDelimiterLFThrowsException was generated successfully
[m[m23.08.2022 - 09:08:41.542 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 75/311
[m[m23.08.2022 - 09:08:41.542 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithEmptyEnum
[m[32m23.08.2022 - 09:08:41.542 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithEmptyEnum.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithEmptyEnum
[m[m23.08.2022 - 09:08:41.723 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:41.723 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithEmptyEnum.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithEmptyEnum/report.xml
[m[m23.08.2022 - 09:08:41.924 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithEmptyEnum was generated successfully
[m[m23.08.2022 - 09:08:41.924 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 76/311
[m[m23.08.2022 - 09:08:41.924 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithEscape
[m[32m23.08.2022 - 09:08:41.924 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithEscape.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithEscape
[m[m23.08.2022 - 09:08:42.096 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:42.096 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithEscape.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithEscape/report.xml
[m[m23.08.2022 - 09:08:42.273 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithEscape was generated successfully
[m[m23.08.2022 - 09:08:42.274 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 77/311
[m[m23.08.2022 - 09:08:42.274 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithEscapeCRThrowsExceptions
[m[32m23.08.2022 - 09:08:42.274 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithEscapeCRThrowsExceptions.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithEscapeCRThrowsExceptions
[m[m23.08.2022 - 09:08:42.433 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:42.434 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithEscapeCRThrowsExceptions.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithEscapeCRThrowsExceptions/report.xml
[m[m23.08.2022 - 09:08:42.633 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithEscapeCRThrowsExceptions was generated successfully
[m[m23.08.2022 - 09:08:42.633 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 78/311
[m[m23.08.2022 - 09:08:42.633 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithFirstRecordAsHeader
[m[32m23.08.2022 - 09:08:42.633 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithFirstRecordAsHeader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithFirstRecordAsHeader
[m[m23.08.2022 - 09:08:42.836 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:42.836 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithFirstRecordAsHeader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithFirstRecordAsHeader/report.xml
[m[m23.08.2022 - 09:08:43.105 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithFirstRecordAsHeader was generated successfully
[m[m23.08.2022 - 09:08:43.105 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 79/311
[m[m23.08.2022 - 09:08:43.105 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithHeader
[m[32m23.08.2022 - 09:08:43.105 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithHeader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithHeader
[m[m23.08.2022 - 09:08:43.432 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:43.433 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithHeader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithHeader/report.xml
[m[m23.08.2022 - 09:08:43.676 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithHeader was generated successfully
[m[m23.08.2022 - 09:08:43.676 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 80/311
[m[m23.08.2022 - 09:08:43.676 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithHeaderComments
[m[32m23.08.2022 - 09:08:43.676 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithHeaderComments.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithHeaderComments
[m[m23.08.2022 - 09:08:43.881 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:43.881 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithHeaderComments.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithHeaderComments/report.xml
[m[m23.08.2022 - 09:08:44.091 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithHeaderComments was generated successfully
[m[m23.08.2022 - 09:08:44.091 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 81/311
[m[m23.08.2022 - 09:08:44.091 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithHeaderEnum
[m[32m23.08.2022 - 09:08:44.091 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithHeaderEnum.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithHeaderEnum
[m[m23.08.2022 - 09:08:44.254 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:44.254 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithHeaderEnum.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithHeaderEnum/report.xml
[m[m23.08.2022 - 09:08:44.466 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithHeaderEnum was generated successfully
[m[m23.08.2022 - 09:08:44.467 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 82/311
[m[m23.08.2022 - 09:08:44.467 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithIgnoreEmptyLines
[m[32m23.08.2022 - 09:08:44.467 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithIgnoreEmptyLines.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithIgnoreEmptyLines
[m[m23.08.2022 - 09:08:44.676 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:44.677 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithIgnoreEmptyLines.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithIgnoreEmptyLines/report.xml
[m[m23.08.2022 - 09:08:44.853 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithIgnoreEmptyLines was generated successfully
[m[m23.08.2022 - 09:08:44.853 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 83/311
[m[m23.08.2022 - 09:08:44.853 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithIgnoreSurround
[m[32m23.08.2022 - 09:08:44.853 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithIgnoreSurround.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithIgnoreSurround
[m[m23.08.2022 - 09:08:45.025 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:45.025 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithIgnoreSurround.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithIgnoreSurround/report.xml
[m[m23.08.2022 - 09:08:45.214 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithIgnoreSurround was generated successfully
[m[m23.08.2022 - 09:08:45.215 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 84/311
[m[m23.08.2022 - 09:08:45.215 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithNullString
[m[32m23.08.2022 - 09:08:45.215 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithNullString.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithNullString
[m[m23.08.2022 - 09:08:45.373 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:45.374 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithNullString.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithNullString/report.xml
[m[m23.08.2022 - 09:08:45.551 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithNullString was generated successfully
[m[m23.08.2022 - 09:08:45.551 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 85/311
[m[m23.08.2022 - 09:08:45.551 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithQuoteChar
[m[32m23.08.2022 - 09:08:45.551 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithQuoteChar.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithQuoteChar
[m[m23.08.2022 - 09:08:45.733 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:45.733 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithQuoteChar.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithQuoteChar/report.xml
[m[m23.08.2022 - 09:08:45.910 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithQuoteChar was generated successfully
[m[m23.08.2022 - 09:08:45.910 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 86/311
[m[m23.08.2022 - 09:08:45.910 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithQuoteLFThrowsException
[m[32m23.08.2022 - 09:08:45.910 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithQuoteLFThrowsException.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithQuoteLFThrowsException
[m[m23.08.2022 - 09:08:46.100 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:46.101 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithQuoteLFThrowsException.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithQuoteLFThrowsException/report.xml
[m[m23.08.2022 - 09:08:46.305 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithQuoteLFThrowsException was generated successfully
[m[m23.08.2022 - 09:08:46.305 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 87/311
[m[m23.08.2022 - 09:08:46.305 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithQuotePolicy
[m[32m23.08.2022 - 09:08:46.305 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithQuotePolicy.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithQuotePolicy
[m[m23.08.2022 - 09:08:46.479 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:46.479 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithQuotePolicy.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithQuotePolicy/report.xml
[m[m23.08.2022 - 09:08:46.657 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithQuotePolicy was generated successfully
[m[m23.08.2022 - 09:08:46.657 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 88/311
[m[m23.08.2022 - 09:08:46.657 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCR
[m[32m23.08.2022 - 09:08:46.657 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCR.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCR
[m[m23.08.2022 - 09:08:46.829 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:46.829 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCR.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCR/report.xml
[m[m23.08.2022 - 09:08:47.030 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCR was generated successfully
[m[m23.08.2022 - 09:08:47.031 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 89/311
[m[m23.08.2022 - 09:08:47.031 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCRLF
[m[32m23.08.2022 - 09:08:47.031 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCRLF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCRLF
[m[m23.08.2022 - 09:08:47.194 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:47.194 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCRLF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCRLF/report.xml
[m[m23.08.2022 - 09:08:47.377 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCRLF was generated successfully
[m[m23.08.2022 - 09:08:47.377 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 90/311
[m[m23.08.2022 - 09:08:47.377 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorLF
[m[32m23.08.2022 - 09:08:47.377 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorLF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorLF
[m[m23.08.2022 - 09:08:47.539 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:47.539 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorLF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorLF/report.xml
[m[m23.08.2022 - 09:08:47.721 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorLF was generated successfully
[m[m23.08.2022 - 09:08:47.721 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 91/311
[m[m23.08.2022 - 09:08:47.721 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVFormatTest#testWithSystemRecordSeparator
[m[32m23.08.2022 - 09:08:47.721 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithSystemRecordSeparator.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVFormatTest#testWithSystemRecordSeparator
[m[m23.08.2022 - 09:08:47.907 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:47.908 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithSystemRecordSeparator.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVFormatTest#testWithSystemRecordSeparator/report.xml
[m[m23.08.2022 - 09:08:48.098 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVFormatTest#testWithSystemRecordSeparator was generated successfully
[m[m23.08.2022 - 09:08:48.098 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 92/311
[m[m23.08.2022 - 09:08:48.098 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.TokenMatchersTest#testHasType
[m[32m23.08.2022 - 09:08:48.098 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.TokenMatchersTest#testHasType.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.TokenMatchersTest#testHasType
[m[m23.08.2022 - 09:08:48.253 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:48.254 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.TokenMatchersTest#testHasType.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.TokenMatchersTest#testHasType/report.xml
[m[m23.08.2022 - 09:08:48.439 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.TokenMatchersTest#testHasType was generated successfully
[m[m23.08.2022 - 09:08:48.440 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 93/311
[m[m23.08.2022 - 09:08:48.440 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.TokenMatchersTest#testHasContent
[m[32m23.08.2022 - 09:08:48.440 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.TokenMatchersTest#testHasContent.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.TokenMatchersTest#testHasContent
[m[m23.08.2022 - 09:08:48.568 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:48.568 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.TokenMatchersTest#testHasContent.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.TokenMatchersTest#testHasContent/report.xml
[m[m23.08.2022 - 09:08:48.770 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.TokenMatchersTest#testHasContent was generated successfully
[m[m23.08.2022 - 09:08:48.770 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 94/311
[m[m23.08.2022 - 09:08:48.770 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.TokenMatchersTest#testIsReady
[m[32m23.08.2022 - 09:08:48.770 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.TokenMatchersTest#testIsReady.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.TokenMatchersTest#testIsReady
[m[m23.08.2022 - 09:08:48.908 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:48.908 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.TokenMatchersTest#testIsReady.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.TokenMatchersTest#testIsReady/report.xml
[m[m23.08.2022 - 09:08:49.104 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.TokenMatchersTest#testIsReady was generated successfully
[m[m23.08.2022 - 09:08:49.104 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 95/311
[m[m23.08.2022 - 09:08:49.105 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.TokenMatchersTest#testMatches
[m[32m23.08.2022 - 09:08:49.105 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.TokenMatchersTest#testMatches.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.TokenMatchersTest#testMatches
[m[m23.08.2022 - 09:08:49.321 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:49.321 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.TokenMatchersTest#testMatches.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.TokenMatchersTest#testMatches/report.xml
[m[m23.08.2022 - 09:08:49.504 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.TokenMatchersTest#testMatches was generated successfully
[m[m23.08.2022 - 09:08:49.505 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 96/311
[m[m23.08.2022 - 09:08:49.505 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testCloseBackwardCompatibility
[m[32m23.08.2022 - 09:08:49.505 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseBackwardCompatibility.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testCloseBackwardCompatibility
[m[m23.08.2022 - 09:08:49.760 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:49.761 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseBackwardCompatibility.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseBackwardCompatibility/report.xml
[m[m23.08.2022 - 09:08:49.937 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testCloseBackwardCompatibility was generated successfully
[m[m23.08.2022 - 09:08:49.937 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 97/311
[m[m23.08.2022 - 09:08:49.937 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOff
[m[32m23.08.2022 - 09:08:49.937 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOff.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOff
[m[m23.08.2022 - 09:08:50.235 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:50.244 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOff.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOff/report.xml
[m[m23.08.2022 - 09:08:50.475 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOff was generated successfully
[m[m23.08.2022 - 09:08:50.475 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 98/311
[m[m23.08.2022 - 09:08:50.475 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOn
[m[32m23.08.2022 - 09:08:50.475 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOn.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOn
[m[m23.08.2022 - 09:08:50.743 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:50.744 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOn.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOn/report.xml
[m[m23.08.2022 - 09:08:50.921 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOn was generated successfully
[m[m23.08.2022 - 09:08:50.921 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 99/311
[m[m23.08.2022 - 09:08:50.921 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOff
[m[32m23.08.2022 - 09:08:50.921 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOff.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOff
[m[m23.08.2022 - 09:08:51.175 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:51.175 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOff.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOff/report.xml
[m[m23.08.2022 - 09:08:51.355 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOff was generated successfully
[m[m23.08.2022 - 09:08:51.355 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 100/311
[m[m23.08.2022 - 09:08:51.355 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOn
[m[32m23.08.2022 - 09:08:51.355 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOn.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOn
[m[m23.08.2022 - 09:08:51.685 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:51.685 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOn.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOn/report.xml
[m[m23.08.2022 - 09:08:51.885 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOn was generated successfully
[m[m23.08.2022 - 09:08:51.885 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 101/311
[m[m23.08.2022 - 09:08:51.885 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoted
[m[32m23.08.2022 - 09:08:51.885 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoted.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoted
[m[m23.08.2022 - 09:08:52.110 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:52.110 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoted.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoted/report.xml
[m[m23.08.2022 - 09:08:52.291 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoted was generated successfully
[m[m23.08.2022 - 09:08:52.291 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 102/311
[m[m23.08.2022 - 09:08:52.291 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoteNone
[m[32m23.08.2022 - 09:08:52.291 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoteNone.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoteNone
[m[m23.08.2022 - 09:08:52.512 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:52.513 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoteNone.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoteNone/report.xml
[m[m23.08.2022 - 09:08:52.700 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoteNone was generated successfully
[m[m23.08.2022 - 09:08:52.700 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 103/311
[m[m23.08.2022 - 09:08:52.700 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testDelimiterEscaped
[m[32m23.08.2022 - 09:08:52.700 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDelimiterEscaped.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testDelimiterEscaped
[m[m23.08.2022 - 09:08:52.912 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:52.912 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDelimiterEscaped.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDelimiterEscaped/report.xml
[m[m23.08.2022 - 09:08:53.097 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testDelimiterEscaped was generated successfully
[m[m23.08.2022 - 09:08:53.097 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 104/311
[m[m23.08.2022 - 09:08:53.098 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testDelimiterPlain
[m[32m23.08.2022 - 09:08:53.098 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDelimiterPlain.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testDelimiterPlain
[m[m23.08.2022 - 09:08:53.300 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:53.300 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDelimiterPlain.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDelimiterPlain/report.xml
[m[m23.08.2022 - 09:08:53.481 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testDelimiterPlain was generated successfully
[m[m23.08.2022 - 09:08:53.481 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 105/311
[m[m23.08.2022 - 09:08:53.481 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testDisabledComment
[m[32m23.08.2022 - 09:08:53.481 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDisabledComment.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testDisabledComment
[m[m23.08.2022 - 09:08:53.707 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:53.707 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDisabledComment.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDisabledComment/report.xml
[m[m23.08.2022 - 09:08:53.905 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testDisabledComment was generated successfully
[m[m23.08.2022 - 09:08:53.906 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 106/311
[m[m23.08.2022 - 09:08:53.906 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testDontQuoteEuroFirstChar
[m[32m23.08.2022 - 09:08:53.906 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDontQuoteEuroFirstChar.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testDontQuoteEuroFirstChar
[m[m23.08.2022 - 09:08:54.105 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:54.106 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDontQuoteEuroFirstChar.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testDontQuoteEuroFirstChar/report.xml
[m[m23.08.2022 - 09:08:54.285 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testDontQuoteEuroFirstChar was generated successfully
[m[m23.08.2022 - 09:08:54.286 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 107/311
[m[m23.08.2022 - 09:08:54.286 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEolEscaped
[m[32m23.08.2022 - 09:08:54.286 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEolEscaped.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEolEscaped
[m[m23.08.2022 - 09:08:54.518 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:54.519 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEolEscaped.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEolEscaped/report.xml
[m[m23.08.2022 - 09:08:54.723 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEolEscaped was generated successfully
[m[m23.08.2022 - 09:08:54.724 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 108/311
[m[m23.08.2022 - 09:08:54.724 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEolPlain
[m[32m23.08.2022 - 09:08:54.724 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEolPlain.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEolPlain
[m[m23.08.2022 - 09:08:54.950 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:54.951 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEolPlain.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEolPlain/report.xml
[m[m23.08.2022 - 09:08:55.135 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEolPlain was generated successfully
[m[m23.08.2022 - 09:08:55.135 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 109/311
[m[m23.08.2022 - 09:08:55.135 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEolQuoted
[m[32m23.08.2022 - 09:08:55.135 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEolQuoted.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEolQuoted
[m[m23.08.2022 - 09:08:55.359 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:55.359 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEolQuoted.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEolQuoted/report.xml
[m[m23.08.2022 - 09:08:55.566 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEolQuoted was generated successfully
[m[m23.08.2022 - 09:08:55.566 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 110/311
[m[m23.08.2022 - 09:08:55.566 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash1
[m[32m23.08.2022 - 09:08:55.566 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash1.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash1
[m[m23.08.2022 - 09:08:55.759 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:55.759 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash1.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash1/report.xml
[m[m23.08.2022 - 09:08:55.930 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash1 was generated successfully
[m[m23.08.2022 - 09:08:55.931 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 111/311
[m[m23.08.2022 - 09:08:55.931 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash2
[m[32m23.08.2022 - 09:08:55.931 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash2.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash2
[m[m23.08.2022 - 09:08:56.159 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:56.159 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash2.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash2/report.xml
[m[m23.08.2022 - 09:08:56.361 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash2 was generated successfully
[m[m23.08.2022 - 09:08:56.361 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 112/311
[m[m23.08.2022 - 09:08:56.361 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash3
[m[32m23.08.2022 - 09:08:56.361 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash3.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash3
[m[m23.08.2022 - 09:08:56.563 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:56.564 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash3.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash3/report.xml
[m[m23.08.2022 - 09:08:56.754 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash3 was generated successfully
[m[m23.08.2022 - 09:08:56.754 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 113/311
[m[m23.08.2022 - 09:08:56.754 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash4
[m[32m23.08.2022 - 09:08:56.755 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash4.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash4
[m[m23.08.2022 - 09:08:56.973 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:56.974 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash4.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash4/report.xml
[m[m23.08.2022 - 09:08:57.168 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash4 was generated successfully
[m[m23.08.2022 - 09:08:57.168 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 114/311
[m[m23.08.2022 - 09:08:57.168 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash5
[m[32m23.08.2022 - 09:08:57.168 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash5.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash5
[m[m23.08.2022 - 09:08:57.389 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:57.390 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash5.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash5/report.xml
[m[m23.08.2022 - 09:08:57.627 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash5 was generated successfully
[m[m23.08.2022 - 09:08:57.627 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 115/311
[m[m23.08.2022 - 09:08:57.627 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEscapeNull1
[m[32m23.08.2022 - 09:08:57.627 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull1.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEscapeNull1
[m[m23.08.2022 - 09:08:57.832 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:57.832 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull1.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull1/report.xml
[m[m23.08.2022 - 09:08:58.027 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEscapeNull1 was generated successfully
[m[m23.08.2022 - 09:08:58.027 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 116/311
[m[m23.08.2022 - 09:08:58.027 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEscapeNull2
[m[32m23.08.2022 - 09:08:58.027 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull2.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEscapeNull2
[m[m23.08.2022 - 09:08:58.301 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:58.302 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull2.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull2/report.xml
[m[m23.08.2022 - 09:08:58.531 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEscapeNull2 was generated successfully
[m[m23.08.2022 - 09:08:58.531 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 117/311
[m[m23.08.2022 - 09:08:58.531 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEscapeNull3
[m[32m23.08.2022 - 09:08:58.531 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull3.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEscapeNull3
[m[m23.08.2022 - 09:08:58.757 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:58.757 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull3.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull3/report.xml
[m[m23.08.2022 - 09:08:58.946 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEscapeNull3 was generated successfully
[m[m23.08.2022 - 09:08:58.946 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 118/311
[m[m23.08.2022 - 09:08:58.946 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEscapeNull4
[m[32m23.08.2022 - 09:08:58.946 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull4.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEscapeNull4
[m[m23.08.2022 - 09:08:59.165 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:59.180 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull4.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull4/report.xml
[m[m23.08.2022 - 09:08:59.418 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEscapeNull4 was generated successfully
[m[m23.08.2022 - 09:08:59.418 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 119/311
[m[m23.08.2022 - 09:08:59.418 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testEscapeNull5
[m[32m23.08.2022 - 09:08:59.418 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull5.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testEscapeNull5
[m[m23.08.2022 - 09:08:59.641 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:08:59.642 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull5.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testEscapeNull5/report.xml
[m[m23.08.2022 - 09:08:59.845 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testEscapeNull5 was generated successfully
[m[m23.08.2022 - 09:08:59.845 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 120/311
[m[m23.08.2022 - 09:08:59.845 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfArrays
[m[32m23.08.2022 - 09:08:59.846 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfArrays.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfArrays
[m[m23.08.2022 - 09:09:00.067 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:00.068 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfArrays.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfArrays/report.xml
[m[m23.08.2022 - 09:09:00.256 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfArrays was generated successfully
[m[m23.08.2022 - 09:09:00.256 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 121/311
[m[m23.08.2022 - 09:09:00.256 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfLists
[m[32m23.08.2022 - 09:09:00.256 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfLists.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfLists
[m[m23.08.2022 - 09:09:00.456 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:00.457 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfLists.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfLists/report.xml
[m[m23.08.2022 - 09:09:00.634 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfLists was generated successfully
[m[m23.08.2022 - 09:09:00.634 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 122/311
[m[m23.08.2022 - 09:09:00.634 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfArrays
[m[32m23.08.2022 - 09:09:00.634 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfArrays.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfArrays
[m[m23.08.2022 - 09:09:00.865 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:00.866 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfArrays.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfArrays/report.xml
[m[m23.08.2022 - 09:09:01.103 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfArrays was generated successfully
[m[m23.08.2022 - 09:09:01.103 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 123/311
[m[m23.08.2022 - 09:09:01.103 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfLists
[m[32m23.08.2022 - 09:09:01.103 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfLists.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfLists
[m[m23.08.2022 - 09:09:01.330 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:01.330 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfLists.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfLists/report.xml
[m[m23.08.2022 - 09:09:01.516 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfLists was generated successfully
[m[m23.08.2022 - 09:09:01.516 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 124/311
[m[m23.08.2022 - 09:09:01.516 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testExcelPrinter1
[m[32m23.08.2022 - 09:09:01.516 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrinter1.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testExcelPrinter1
[m[m23.08.2022 - 09:09:01.741 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:01.741 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrinter1.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrinter1/report.xml
[m[m23.08.2022 - 09:09:01.921 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testExcelPrinter1 was generated successfully
[m[m23.08.2022 - 09:09:01.921 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 125/311
[m[m23.08.2022 - 09:09:01.921 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testExcelPrinter2
[m[32m23.08.2022 - 09:09:01.921 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrinter2.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testExcelPrinter2
[m[m23.08.2022 - 09:09:02.145 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:02.146 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrinter2.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testExcelPrinter2/report.xml
[m[m23.08.2022 - 09:09:02.328 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testExcelPrinter2 was generated successfully
[m[m23.08.2022 - 09:09:02.329 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 126/311
[m[m23.08.2022 - 09:09:02.329 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testHeader
[m[32m23.08.2022 - 09:09:02.329 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testHeader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testHeader
[m[m23.08.2022 - 09:09:02.534 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:02.534 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testHeader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testHeader/report.xml
[m[m23.08.2022 - 09:09:02.711 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testHeader was generated successfully
[m[m23.08.2022 - 09:09:02.711 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 127/311
[m[m23.08.2022 - 09:09:02.711 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testHeaderCommentExcel
[m[32m23.08.2022 - 09:09:02.711 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testHeaderCommentExcel.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testHeaderCommentExcel
[m[m23.08.2022 - 09:09:02.953 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:02.954 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testHeaderCommentExcel.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testHeaderCommentExcel/report.xml
[m[m23.08.2022 - 09:09:03.132 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testHeaderCommentExcel was generated successfully
[m[m23.08.2022 - 09:09:03.132 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 128/311
[m[m23.08.2022 - 09:09:03.132 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testHeaderCommentTdf
[m[32m23.08.2022 - 09:09:03.132 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testHeaderCommentTdf.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testHeaderCommentTdf
[m[m23.08.2022 - 09:09:03.376 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:03.376 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testHeaderCommentTdf.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testHeaderCommentTdf/report.xml
[m[m23.08.2022 - 09:09:03.596 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testHeaderCommentTdf was generated successfully
[m[m23.08.2022 - 09:09:03.596 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 129/311
[m[m23.08.2022 - 09:09:03.597 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testHeaderNotSet
[m[32m23.08.2022 - 09:09:03.597 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testHeaderNotSet.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testHeaderNotSet
[m[m23.08.2022 - 09:09:03.868 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:03.868 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testHeaderNotSet.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testHeaderNotSet/report.xml
[m[m23.08.2022 - 09:09:04.075 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testHeaderNotSet was generated successfully
[m[m23.08.2022 - 09:09:04.075 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 130/311
[m[m23.08.2022 - 09:09:04.075 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testInvalidFormat
[m[32m23.08.2022 - 09:09:04.075 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testInvalidFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testInvalidFormat
[m[m23.08.2022 - 09:09:04.266 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:04.266 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testInvalidFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testInvalidFormat/report.xml
[m[m23.08.2022 - 09:09:04.464 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testInvalidFormat was generated successfully
[m[m23.08.2022 - 09:09:04.464 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 131/311
[m[m23.08.2022 - 09:09:04.464 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testJdbcPrinter
[m[32m23.08.2022 - 09:09:04.464 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testJdbcPrinter.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testJdbcPrinter
[m[m23.08.2022 - 09:09:04.861 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:04.861 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testJdbcPrinter.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testJdbcPrinter/report.xml
[m[m23.08.2022 - 09:09:05.048 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testJdbcPrinter was generated successfully
[m[m23.08.2022 - 09:09:05.049 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 132/311
[m[m23.08.2022 - 09:09:05.049 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSet
[m[32m23.08.2022 - 09:09:05.049 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSet.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSet
[m[m23.08.2022 - 09:09:05.440 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:05.440 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSet.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSet/report.xml
[m[m23.08.2022 - 09:09:05.644 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSet was generated successfully
[m[m23.08.2022 - 09:09:05.644 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 133/311
[m[m23.08.2022 - 09:09:05.644 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSetMetaData
[m[32m23.08.2022 - 09:09:05.644 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSetMetaData.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSetMetaData
[m[m23.08.2022 - 09:09:06.024 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:06.024 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSetMetaData.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSetMetaData/report.xml
[m[m23.08.2022 - 09:09:06.227 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSetMetaData was generated successfully
[m[m23.08.2022 - 09:09:06.227 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 134/311
[m[m23.08.2022 - 09:09:06.228 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvBasic
[m[32m23.08.2022 - 09:09:06.228 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvBasic.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvBasic
[m[m23.08.2022 - 09:09:06.450 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:06.451 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvBasic.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvBasic/report.xml
[m[m23.08.2022 - 09:09:06.659 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvBasic was generated successfully
[m[m23.08.2022 - 09:09:06.660 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 135/311
[m[m23.08.2022 - 09:09:06.660 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvCommaInValue
[m[32m23.08.2022 - 09:09:06.660 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvCommaInValue.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvCommaInValue
[m[m23.08.2022 - 09:09:06.865 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:06.865 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvCommaInValue.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvCommaInValue/report.xml
[m[m23.08.2022 - 09:09:07.064 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvCommaInValue was generated successfully
[m[m23.08.2022 - 09:09:07.065 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 136/311
[m[m23.08.2022 - 09:09:07.065 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvDoubleQuoteInValue
[m[32m23.08.2022 - 09:09:07.065 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvDoubleQuoteInValue.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvDoubleQuoteInValue
[m[m23.08.2022 - 09:09:07.289 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:07.290 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvDoubleQuoteInValue.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvDoubleQuoteInValue/report.xml
[m[m23.08.2022 - 09:09:07.476 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvDoubleQuoteInValue was generated successfully
[m[m23.08.2022 - 09:09:07.476 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 137/311
[m[m23.08.2022 - 09:09:07.476 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvTabInValue
[m[32m23.08.2022 - 09:09:07.476 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvTabInValue.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvTabInValue
[m[m23.08.2022 - 09:09:07.679 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:07.679 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvTabInValue.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvTabInValue/report.xml
[m[m23.08.2022 - 09:09:07.874 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvTabInValue was generated successfully
[m[m23.08.2022 - 09:09:07.874 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 138/311
[m[m23.08.2022 - 09:09:07.874 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvCommaInValue
[m[32m23.08.2022 - 09:09:07.874 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvCommaInValue.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvCommaInValue
[m[m23.08.2022 - 09:09:08.097 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:08.097 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvCommaInValue.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvCommaInValue/report.xml
[m[m23.08.2022 - 09:09:08.305 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvCommaInValue was generated successfully
[m[m23.08.2022 - 09:09:08.305 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 139/311
[m[m23.08.2022 - 09:09:08.305 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvTabInValue
[m[32m23.08.2022 - 09:09:08.305 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvTabInValue.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvTabInValue
[m[m23.08.2022 - 09:09:08.539 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:08.552 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvTabInValue.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvTabInValue/report.xml
[m[m23.08.2022 - 09:09:08.776 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvTabInValue was generated successfully
[m[m23.08.2022 - 09:09:08.776 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 140/311
[m[m23.08.2022 - 09:09:08.776 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvBasic
[m[32m23.08.2022 - 09:09:08.776 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvBasic.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvBasic
[m[m23.08.2022 - 09:09:09.003 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:09.004 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvBasic.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvBasic/report.xml
[m[m23.08.2022 - 09:09:09.212 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvBasic was generated successfully
[m[m23.08.2022 - 09:09:09.212 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 141/311
[m[m23.08.2022 - 09:09:09.212 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testMultiLineComment
[m[32m23.08.2022 - 09:09:09.212 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMultiLineComment.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testMultiLineComment
[m[m23.08.2022 - 09:09:09.414 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:09.415 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMultiLineComment.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMultiLineComment/report.xml
[m[m23.08.2022 - 09:09:09.626 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testMultiLineComment was generated successfully
[m[m23.08.2022 - 09:09:09.626 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 142/311
[m[m23.08.2022 - 09:09:09.626 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testMySqlNullOutput
[m[32m23.08.2022 - 09:09:09.626 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMySqlNullOutput.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testMySqlNullOutput
[m[m23.08.2022 - 09:09:09.840 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:09.840 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMySqlNullOutput.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMySqlNullOutput/report.xml
[m[m23.08.2022 - 09:09:10.048 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testMySqlNullOutput was generated successfully
[m[m23.08.2022 - 09:09:10.048 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 143/311
[m[m23.08.2022 - 09:09:10.048 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testMySqlNullStringDefault
[m[32m23.08.2022 - 09:09:10.048 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMySqlNullStringDefault.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testMySqlNullStringDefault
[m[m23.08.2022 - 09:09:10.242 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:10.242 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMySqlNullStringDefault.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testMySqlNullStringDefault/report.xml
[m[m23.08.2022 - 09:09:10.451 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testMySqlNullStringDefault was generated successfully
[m[m23.08.2022 - 09:09:10.451 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 144/311
[m[m23.08.2022 - 09:09:10.451 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterAppendableNullFormat
[m[32m23.08.2022 - 09:09:10.452 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterAppendableNullFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterAppendableNullFormat
[m[m23.08.2022 - 09:09:10.690 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:10.690 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterAppendableNullFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterAppendableNullFormat/report.xml
[m[m23.08.2022 - 09:09:10.893 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterAppendableNullFormat was generated successfully
[m[m23.08.2022 - 09:09:10.893 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 145/311
[m[m23.08.2022 - 09:09:10.893 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterNullAppendableFormat
[m[32m23.08.2022 - 09:09:10.893 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterNullAppendableFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterNullAppendableFormat
[m[m23.08.2022 - 09:09:11.103 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:11.103 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterNullAppendableFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterNullAppendableFormat/report.xml
[m[m23.08.2022 - 09:09:11.282 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterNullAppendableFormat was generated successfully
[m[m23.08.2022 - 09:09:11.282 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 146/311
[m[m23.08.2022 - 09:09:11.282 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testParseCustomNullValues
[m[32m23.08.2022 - 09:09:11.282 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testParseCustomNullValues.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testParseCustomNullValues
[m[m23.08.2022 - 09:09:11.496 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:11.496 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testParseCustomNullValues.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testParseCustomNullValues/report.xml
[m[m23.08.2022 - 09:09:11.673 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testParseCustomNullValues was generated successfully
[m[m23.08.2022 - 09:09:11.674 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 147/311
[m[m23.08.2022 - 09:09:11.674 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPlainEscaped
[m[32m23.08.2022 - 09:09:11.674 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPlainEscaped.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPlainEscaped
[m[m23.08.2022 - 09:09:11.877 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:11.877 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPlainEscaped.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPlainEscaped/report.xml
[m[m23.08.2022 - 09:09:12.072 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPlainEscaped was generated successfully
[m[m23.08.2022 - 09:09:12.072 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 148/311
[m[m23.08.2022 - 09:09:12.072 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPlainPlain
[m[32m23.08.2022 - 09:09:12.072 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPlainPlain.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPlainPlain
[m[m23.08.2022 - 09:09:12.274 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:12.275 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPlainPlain.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPlainPlain/report.xml
[m[m23.08.2022 - 09:09:12.452 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPlainPlain was generated successfully
[m[m23.08.2022 - 09:09:12.452 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 149/311
[m[m23.08.2022 - 09:09:12.452 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPlainQuoted
[m[32m23.08.2022 - 09:09:12.452 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPlainQuoted.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPlainQuoted
[m[m23.08.2022 - 09:09:12.653 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:12.654 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPlainQuoted.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPlainQuoted/report.xml
[m[m23.08.2022 - 09:09:12.842 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPlainQuoted was generated successfully
[m[m23.08.2022 - 09:09:12.842 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 150/311
[m[m23.08.2022 - 09:09:12.842 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultCsv
[m[32m23.08.2022 - 09:09:12.842 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultCsv.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultCsv
[m[m23.08.2022 - 09:09:13.045 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:13.045 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultCsv.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultCsv/report.xml
[m[m23.08.2022 - 09:09:13.242 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultCsv was generated successfully
[m[m23.08.2022 - 09:09:13.242 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 151/311
[m[m23.08.2022 - 09:09:13.243 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultText
[m[32m23.08.2022 - 09:09:13.243 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultText.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultText
[m[m23.08.2022 - 09:09:13.442 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:13.442 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultText.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultText/report.xml
[m[m23.08.2022 - 09:09:13.649 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultText was generated successfully
[m[m23.08.2022 - 09:09:13.649 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 152/311
[m[m23.08.2022 - 09:09:13.649 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrint
[m[32m23.08.2022 - 09:09:13.649 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrint.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrint
[m[m23.08.2022 - 09:09:13.853 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:13.853 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrint.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrint/report.xml
[m[m23.08.2022 - 09:09:14.053 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrint was generated successfully
[m[m23.08.2022 - 09:09:14.053 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 153/311
[m[m23.08.2022 - 09:09:14.053 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrintCustomNullValues
[m[32m23.08.2022 - 09:09:14.053 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintCustomNullValues.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrintCustomNullValues
[m[m23.08.2022 - 09:09:14.254 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:14.254 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintCustomNullValues.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintCustomNullValues/report.xml
[m[m23.08.2022 - 09:09:14.452 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrintCustomNullValues was generated successfully
[m[m23.08.2022 - 09:09:14.452 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 154/311
[m[m23.08.2022 - 09:09:14.453 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrinter1
[m[32m23.08.2022 - 09:09:14.453 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter1.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrinter1
[m[m23.08.2022 - 09:09:14.721 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:14.722 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter1.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter1/report.xml
[m[m23.08.2022 - 09:09:14.903 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrinter1 was generated successfully
[m[m23.08.2022 - 09:09:14.903 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 155/311
[m[m23.08.2022 - 09:09:14.903 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrinter2
[m[32m23.08.2022 - 09:09:14.903 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter2.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrinter2
[m[m23.08.2022 - 09:09:15.134 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:15.135 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter2.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter2/report.xml
[m[m23.08.2022 - 09:09:15.323 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrinter2 was generated successfully
[m[m23.08.2022 - 09:09:15.323 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 156/311
[m[m23.08.2022 - 09:09:15.323 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrinter3
[m[32m23.08.2022 - 09:09:15.323 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter3.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrinter3
[m[m23.08.2022 - 09:09:15.532 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:15.532 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter3.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter3/report.xml
[m[m23.08.2022 - 09:09:15.712 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrinter3 was generated successfully
[m[m23.08.2022 - 09:09:15.712 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 157/311
[m[m23.08.2022 - 09:09:15.713 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrinter4
[m[32m23.08.2022 - 09:09:15.713 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter4.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrinter4
[m[m23.08.2022 - 09:09:15.937 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:15.937 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter4.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter4/report.xml
[m[m23.08.2022 - 09:09:16.118 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrinter4 was generated successfully
[m[m23.08.2022 - 09:09:16.118 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 158/311
[m[m23.08.2022 - 09:09:16.118 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrinter5
[m[32m23.08.2022 - 09:09:16.118 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter5.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrinter5
[m[m23.08.2022 - 09:09:16.322 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:16.322 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter5.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter5/report.xml
[m[m23.08.2022 - 09:09:16.528 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrinter5 was generated successfully
[m[m23.08.2022 - 09:09:16.528 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 159/311
[m[m23.08.2022 - 09:09:16.528 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrinter6
[m[32m23.08.2022 - 09:09:16.528 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter6.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrinter6
[m[m23.08.2022 - 09:09:16.745 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:16.745 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter6.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter6/report.xml
[m[m23.08.2022 - 09:09:16.922 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrinter6 was generated successfully
[m[m23.08.2022 - 09:09:16.922 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 160/311
[m[m23.08.2022 - 09:09:16.922 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrinter7
[m[32m23.08.2022 - 09:09:16.922 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter7.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrinter7
[m[m23.08.2022 - 09:09:17.129 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:17.129 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter7.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrinter7/report.xml
[m[m23.08.2022 - 09:09:17.334 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrinter7 was generated successfully
[m[m23.08.2022 - 09:09:17.334 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 161/311
[m[m23.08.2022 - 09:09:17.334 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrintNullValues
[m[32m23.08.2022 - 09:09:17.334 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintNullValues.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrintNullValues
[m[m23.08.2022 - 09:09:17.545 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:17.546 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintNullValues.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintNullValues/report.xml
[m[m23.08.2022 - 09:09:17.768 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrintNullValues was generated successfully
[m[m23.08.2022 - 09:09:17.768 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 162/311
[m[m23.08.2022 - 09:09:17.768 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrintOnePositiveInteger
[m[32m23.08.2022 - 09:09:17.768 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintOnePositiveInteger.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrintOnePositiveInteger
[m[m23.08.2022 - 09:09:17.995 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:17.996 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintOnePositiveInteger.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintOnePositiveInteger/report.xml
[m[m23.08.2022 - 09:09:18.209 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrintOnePositiveInteger was generated successfully
[m[m23.08.2022 - 09:09:18.209 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 163/311
[m[m23.08.2022 - 09:09:18.209 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithEmptyVector
[m[32m23.08.2022 - 09:09:18.210 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithEmptyVector.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithEmptyVector
[m[m23.08.2022 - 09:09:18.429 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:18.429 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithEmptyVector.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithEmptyVector/report.xml
[m[m23.08.2022 - 09:09:18.612 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithEmptyVector was generated successfully
[m[m23.08.2022 - 09:09:18.612 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 164/311
[m[m23.08.2022 - 09:09:18.612 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithObjectArray
[m[32m23.08.2022 - 09:09:18.612 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithObjectArray.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithObjectArray
[m[m23.08.2022 - 09:09:18.839 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:18.840 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithObjectArray.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithObjectArray/report.xml
[m[m23.08.2022 - 09:09:19.018 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithObjectArray was generated successfully
[m[m23.08.2022 - 09:09:19.018 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 165/311
[m[m23.08.2022 - 09:09:19.018 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithCharsetUtf16Be
[m[32m23.08.2022 - 09:09:19.018 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithCharsetUtf16Be.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithCharsetUtf16Be
[m[m23.08.2022 - 09:09:19.250 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:19.251 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithCharsetUtf16Be.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithCharsetUtf16Be/report.xml
[m[m23.08.2022 - 09:09:19.431 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithCharsetUtf16Be was generated successfully
[m[m23.08.2022 - 09:09:19.431 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 166/311
[m[m23.08.2022 - 09:09:19.431 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithDefaultCharset
[m[32m23.08.2022 - 09:09:19.431 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithDefaultCharset.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithDefaultCharset
[m[m23.08.2022 - 09:09:19.663 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:19.663 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithDefaultCharset.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithDefaultCharset/report.xml
[m[m23.08.2022 - 09:09:19.875 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithDefaultCharset was generated successfully
[m[m23.08.2022 - 09:09:19.875 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 167/311
[m[m23.08.2022 - 09:09:19.875 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testPrintToPathWithDefaultCharset
[m[32m23.08.2022 - 09:09:19.875 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintToPathWithDefaultCharset.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testPrintToPathWithDefaultCharset
[m[m23.08.2022 - 09:09:20.127 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:20.127 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintToPathWithDefaultCharset.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testPrintToPathWithDefaultCharset/report.xml
[m[m23.08.2022 - 09:09:20.300 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testPrintToPathWithDefaultCharset was generated successfully
[m[m23.08.2022 - 09:09:20.301 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 168/311
[m[m23.08.2022 - 09:09:20.301 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testQuoteAll
[m[32m23.08.2022 - 09:09:20.301 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testQuoteAll.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testQuoteAll
[m[m23.08.2022 - 09:09:20.515 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:20.515 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testQuoteAll.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testQuoteAll/report.xml
[m[m23.08.2022 - 09:09:20.696 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testQuoteAll was generated successfully
[m[m23.08.2022 - 09:09:20.696 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 169/311
[m[m23.08.2022 - 09:09:20.696 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testQuoteCommaFirstChar
[m[32m23.08.2022 - 09:09:20.696 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testQuoteCommaFirstChar.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testQuoteCommaFirstChar
[m[m23.08.2022 - 09:09:20.909 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:20.909 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testQuoteCommaFirstChar.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testQuoteCommaFirstChar/report.xml
[m[m23.08.2022 - 09:09:21.084 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testQuoteCommaFirstChar was generated successfully
[m[m23.08.2022 - 09:09:21.084 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 170/311
[m[m23.08.2022 - 09:09:21.084 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testQuoteNonNumeric
[m[32m23.08.2022 - 09:09:21.084 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testQuoteNonNumeric.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testQuoteNonNumeric
[m[m23.08.2022 - 09:09:21.286 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:21.286 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testQuoteNonNumeric.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testQuoteNonNumeric/report.xml
[m[m23.08.2022 - 09:09:21.466 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testQuoteNonNumeric was generated successfully
[m[m23.08.2022 - 09:09:21.466 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 171/311
[m[m23.08.2022 - 09:09:21.466 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testRandomDefault
[m[32m23.08.2022 - 09:09:21.466 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomDefault.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testRandomDefault
[m[m23.08.2022 - 09:09:22.305 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:22.305 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomDefault.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomDefault/report.xml
[m[m23.08.2022 - 09:09:22.514 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testRandomDefault was generated successfully
[m[m23.08.2022 - 09:09:22.514 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 172/311
[m[m23.08.2022 - 09:09:22.514 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testRandomExcel
[m[32m23.08.2022 - 09:09:22.514 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomExcel.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testRandomExcel
[m[m23.08.2022 - 09:09:23.355 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:23.355 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomExcel.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomExcel/report.xml
[m[m23.08.2022 - 09:09:23.565 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testRandomExcel was generated successfully
[m[m23.08.2022 - 09:09:23.565 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 173/311
[m[m23.08.2022 - 09:09:23.565 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testRandomMySql
[m[32m23.08.2022 - 09:09:23.565 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomMySql.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testRandomMySql
[m[m23.08.2022 - 09:09:24.392 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:24.393 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomMySql.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomMySql/report.xml
[m[m23.08.2022 - 09:09:24.602 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testRandomMySql was generated successfully
[m[m23.08.2022 - 09:09:24.602 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 174/311
[m[m23.08.2022 - 09:09:24.602 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testRandomRfc4180
[m[32m23.08.2022 - 09:09:24.602 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomRfc4180.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testRandomRfc4180
[m[m23.08.2022 - 09:09:25.538 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:25.538 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomRfc4180.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomRfc4180/report.xml
[m[m23.08.2022 - 09:09:25.757 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testRandomRfc4180 was generated successfully
[m[m23.08.2022 - 09:09:25.758 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 175/311
[m[m23.08.2022 - 09:09:25.758 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testRandomTdf
[m[32m23.08.2022 - 09:09:25.758 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomTdf.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testRandomTdf
[m[m23.08.2022 - 09:09:26.624 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:26.624 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomTdf.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testRandomTdf/report.xml
[m[m23.08.2022 - 09:09:26.832 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testRandomTdf was generated successfully
[m[m23.08.2022 - 09:09:26.832 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 176/311
[m[m23.08.2022 - 09:09:26.832 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testSingleLineComment
[m[32m23.08.2022 - 09:09:26.832 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testSingleLineComment.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testSingleLineComment
[m[m23.08.2022 - 09:09:27.033 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:27.033 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testSingleLineComment.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testSingleLineComment/report.xml
[m[m23.08.2022 - 09:09:27.239 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testSingleLineComment was generated successfully
[m[m23.08.2022 - 09:09:27.239 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 177/311
[m[m23.08.2022 - 09:09:27.240 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testSingleQuoteQuoted
[m[32m23.08.2022 - 09:09:27.240 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testSingleQuoteQuoted.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testSingleQuoteQuoted
[m[m23.08.2022 - 09:09:27.461 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:27.462 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testSingleQuoteQuoted.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testSingleQuoteQuoted/report.xml
[m[m23.08.2022 - 09:09:27.641 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testSingleQuoteQuoted was generated successfully
[m[m23.08.2022 - 09:09:27.641 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 178/311
[m[m23.08.2022 - 09:09:27.641 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordFalse
[m[32m23.08.2022 - 09:09:27.642 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordFalse.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordFalse
[m[m23.08.2022 - 09:09:27.869 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:27.869 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordFalse.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordFalse/report.xml
[m[m23.08.2022 - 09:09:28.075 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordFalse was generated successfully
[m[m23.08.2022 - 09:09:28.075 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 179/311
[m[m23.08.2022 - 09:09:28.075 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordTrue
[m[32m23.08.2022 - 09:09:28.075 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordTrue.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordTrue
[m[m23.08.2022 - 09:09:28.266 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:28.266 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordTrue.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordTrue/report.xml
[m[m23.08.2022 - 09:09:28.453 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordTrue was generated successfully
[m[m23.08.2022 - 09:09:28.453 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 180/311
[m[m23.08.2022 - 09:09:28.453 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testTrailingDelimiterOnTwoColumns
[m[32m23.08.2022 - 09:09:28.454 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testTrailingDelimiterOnTwoColumns.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testTrailingDelimiterOnTwoColumns
[m[m23.08.2022 - 09:09:28.661 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:28.662 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testTrailingDelimiterOnTwoColumns.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testTrailingDelimiterOnTwoColumns/report.xml
[m[m23.08.2022 - 09:09:28.873 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testTrailingDelimiterOnTwoColumns was generated successfully
[m[m23.08.2022 - 09:09:28.873 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 181/311
[m[m23.08.2022 - 09:09:28.873 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testTrimOffOneColumn
[m[32m23.08.2022 - 09:09:28.873 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testTrimOffOneColumn.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testTrimOffOneColumn
[m[m23.08.2022 - 09:09:29.085 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:29.085 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testTrimOffOneColumn.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testTrimOffOneColumn/report.xml
[m[m23.08.2022 - 09:09:29.274 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testTrimOffOneColumn was generated successfully
[m[m23.08.2022 - 09:09:29.274 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 182/311
[m[m23.08.2022 - 09:09:29.274 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testTrimOnOneColumn
[m[32m23.08.2022 - 09:09:29.274 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testTrimOnOneColumn.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testTrimOnOneColumn
[m[m23.08.2022 - 09:09:29.524 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:29.524 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testTrimOnOneColumn.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testTrimOnOneColumn/report.xml
[m[m23.08.2022 - 09:09:29.729 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testTrimOnOneColumn was generated successfully
[m[m23.08.2022 - 09:09:29.729 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 183/311
[m[m23.08.2022 - 09:09:29.729 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVPrinterTest#testTrimOnTwoColumns
[m[32m23.08.2022 - 09:09:29.729 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testTrimOnTwoColumns.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVPrinterTest#testTrimOnTwoColumns
[m[m23.08.2022 - 09:09:29.943 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:29.943 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testTrimOnTwoColumns.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVPrinterTest#testTrimOnTwoColumns/report.xml
[m[m23.08.2022 - 09:09:30.125 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVPrinterTest#testTrimOnTwoColumns was generated successfully
[m[m23.08.2022 - 09:09:30.125 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 184/311
[m[m23.08.2022 - 09:09:30.125 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.perf.PerformanceTest#testParseBigFileRepeat
[m[32m23.08.2022 - 09:09:30.125 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.perf.PerformanceTest#testParseBigFileRepeat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.perf.PerformanceTest#testParseBigFileRepeat
[m[m23.08.2022 - 09:09:56.969 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:09:56.969 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.perf.PerformanceTest#testParseBigFileRepeat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.perf.PerformanceTest#testParseBigFileRepeat/report.xml
[m[m23.08.2022 - 09:09:57.174 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.perf.PerformanceTest#testParseBigFileRepeat was generated successfully
[m[m23.08.2022 - 09:09:57.174 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 185/311
[m[m23.08.2022 - 09:09:57.174 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.perf.PerformanceTest#testReadBigFile
[m[32m23.08.2022 - 09:09:57.174 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.perf.PerformanceTest#testReadBigFile.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.perf.PerformanceTest#testReadBigFile
[m[m23.08.2022 - 09:10:00.971 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:00.971 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.perf.PerformanceTest#testReadBigFile.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.perf.PerformanceTest#testReadBigFile/report.xml
[m[m23.08.2022 - 09:10:01.183 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.perf.PerformanceTest#testReadBigFile was generated successfully
[m[m23.08.2022 - 09:10:01.184 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 186/311
[m[m23.08.2022 - 09:10:01.184 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withCommentMarker
[m[32m23.08.2022 - 09:10:01.184 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withCommentMarker.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withCommentMarker
[m[m23.08.2022 - 09:10:01.362 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:01.363 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withCommentMarker.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withCommentMarker/report.xml
[m[m23.08.2022 - 09:10:01.575 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withCommentMarker was generated successfully
[m[m23.08.2022 - 09:10:01.576 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 187/311
[m[m23.08.2022 - 09:10:01.576 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withHeaderComments
[m[32m23.08.2022 - 09:10:01.576 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withHeaderComments.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withHeaderComments
[m[m23.08.2022 - 09:10:01.755 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:01.755 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withHeaderComments.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withHeaderComments/report.xml
[m[m23.08.2022 - 09:10:01.942 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withHeaderComments was generated successfully
[m[m23.08.2022 - 09:10:01.942 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 188/311
[m[m23.08.2022 - 09:10:01.942 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.issues.JiraCsv167Test#parse
[m[32m23.08.2022 - 09:10:01.942 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv167Test#parse.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.issues.JiraCsv167Test#parse
[m[m23.08.2022 - 09:10:02.103 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:02.103 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv167Test#parse.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.issues.JiraCsv167Test#parse/report.xml
[m[m23.08.2022 - 09:10:02.340 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.issues.JiraCsv167Test#parse was generated successfully
[m[m23.08.2022 - 09:10:02.341 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 189/311
[m[m23.08.2022 - 09:10:02.341 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testGetInt
[m[32m23.08.2022 - 09:10:02.341 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetInt.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testGetInt
[m[m23.08.2022 - 09:10:02.562 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:02.562 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetInt.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetInt/report.xml
[m[m23.08.2022 - 09:10:02.749 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testGetInt was generated successfully
[m[m23.08.2022 - 09:10:02.749 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 190/311
[m[m23.08.2022 - 09:10:02.749 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testGetString
[m[32m23.08.2022 - 09:10:02.749 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetString.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testGetString
[m[m23.08.2022 - 09:10:02.957 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:02.958 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetString.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetString/report.xml
[m[m23.08.2022 - 09:10:03.211 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testGetString was generated successfully
[m[m23.08.2022 - 09:10:03.211 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 191/311
[m[m23.08.2022 - 09:10:03.211 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testGetStringInconsistentRecord
[m[32m23.08.2022 - 09:10:03.211 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetStringInconsistentRecord.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testGetStringInconsistentRecord
[m[m23.08.2022 - 09:10:03.436 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:03.437 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetStringInconsistentRecord.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetStringInconsistentRecord/report.xml
[m[m23.08.2022 - 09:10:03.647 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testGetStringInconsistentRecord was generated successfully
[m[m23.08.2022 - 09:10:03.647 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 192/311
[m[m23.08.2022 - 09:10:03.647 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testGetStringNoHeader
[m[32m23.08.2022 - 09:10:03.647 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetStringNoHeader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testGetStringNoHeader
[m[m23.08.2022 - 09:10:03.877 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:03.878 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetStringNoHeader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetStringNoHeader/report.xml
[m[m23.08.2022 - 09:10:04.138 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testGetStringNoHeader was generated successfully
[m[m23.08.2022 - 09:10:04.138 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 193/311
[m[m23.08.2022 - 09:10:04.138 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testGetUnmappedEnum
[m[32m23.08.2022 - 09:10:04.138 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetUnmappedEnum.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testGetUnmappedEnum
[m[m23.08.2022 - 09:10:04.355 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:04.355 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetUnmappedEnum.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetUnmappedEnum/report.xml
[m[m23.08.2022 - 09:10:04.561 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testGetUnmappedEnum was generated successfully
[m[m23.08.2022 - 09:10:04.561 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 194/311
[m[m23.08.2022 - 09:10:04.561 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testGetUnmappedName
[m[32m23.08.2022 - 09:10:04.561 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetUnmappedName.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testGetUnmappedName
[m[m23.08.2022 - 09:10:04.785 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:04.785 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetUnmappedName.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetUnmappedName/report.xml
[m[m23.08.2022 - 09:10:04.990 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testGetUnmappedName was generated successfully
[m[m23.08.2022 - 09:10:04.990 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 195/311
[m[m23.08.2022 - 09:10:04.990 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testGetUnmappedNegativeInt
[m[32m23.08.2022 - 09:10:04.990 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetUnmappedNegativeInt.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testGetUnmappedNegativeInt
[m[m23.08.2022 - 09:10:05.191 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:05.191 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetUnmappedNegativeInt.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetUnmappedNegativeInt/report.xml
[m[m23.08.2022 - 09:10:05.401 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testGetUnmappedNegativeInt was generated successfully
[m[m23.08.2022 - 09:10:05.401 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 196/311
[m[m23.08.2022 - 09:10:05.402 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testGetUnmappedPositiveInt
[m[32m23.08.2022 - 09:10:05.402 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetUnmappedPositiveInt.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testGetUnmappedPositiveInt
[m[m23.08.2022 - 09:10:05.603 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:05.603 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetUnmappedPositiveInt.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testGetUnmappedPositiveInt/report.xml
[m[m23.08.2022 - 09:10:05.810 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testGetUnmappedPositiveInt was generated successfully
[m[m23.08.2022 - 09:10:05.810 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 197/311
[m[m23.08.2022 - 09:10:05.810 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testIsConsistent
[m[32m23.08.2022 - 09:10:05.810 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIsConsistent.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testIsConsistent
[m[m23.08.2022 - 09:10:06.010 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:06.010 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIsConsistent.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIsConsistent/report.xml
[m[m23.08.2022 - 09:10:06.211 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testIsConsistent was generated successfully
[m[m23.08.2022 - 09:10:06.211 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 198/311
[m[m23.08.2022 - 09:10:06.211 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testIsInconsistent
[m[32m23.08.2022 - 09:10:06.211 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIsInconsistent.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testIsInconsistent
[m[m23.08.2022 - 09:10:06.431 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:06.431 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIsInconsistent.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIsInconsistent/report.xml
[m[m23.08.2022 - 09:10:06.619 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testIsInconsistent was generated successfully
[m[m23.08.2022 - 09:10:06.619 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 199/311
[m[m23.08.2022 - 09:10:06.619 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testIsMapped
[m[32m23.08.2022 - 09:10:06.619 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIsMapped.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testIsMapped
[m[m23.08.2022 - 09:10:06.818 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:06.818 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIsMapped.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIsMapped/report.xml
[m[m23.08.2022 - 09:10:07.036 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testIsMapped was generated successfully
[m[m23.08.2022 - 09:10:07.036 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 200/311
[m[m23.08.2022 - 09:10:07.036 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testIsSet
[m[32m23.08.2022 - 09:10:07.036 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIsSet.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testIsSet
[m[m23.08.2022 - 09:10:07.236 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:07.237 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIsSet.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIsSet/report.xml
[m[m23.08.2022 - 09:10:07.436 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testIsSet was generated successfully
[m[m23.08.2022 - 09:10:07.436 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 201/311
[m[m23.08.2022 - 09:10:07.436 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testIterator
[m[32m23.08.2022 - 09:10:07.436 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIterator.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testIterator
[m[m23.08.2022 - 09:10:07.635 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:07.635 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIterator.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testIterator/report.xml
[m[m23.08.2022 - 09:10:07.842 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testIterator was generated successfully
[m[m23.08.2022 - 09:10:07.842 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 202/311
[m[m23.08.2022 - 09:10:07.842 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testPutInMap
[m[32m23.08.2022 - 09:10:07.842 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testPutInMap.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testPutInMap
[m[m23.08.2022 - 09:10:08.042 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:08.042 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testPutInMap.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testPutInMap/report.xml
[m[m23.08.2022 - 09:10:08.226 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testPutInMap was generated successfully
[m[m23.08.2022 - 09:10:08.226 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 203/311
[m[m23.08.2022 - 09:10:08.226 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testRemoveAndAddColumns
[m[32m23.08.2022 - 09:10:08.226 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testRemoveAndAddColumns.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testRemoveAndAddColumns
[m[m23.08.2022 - 09:10:08.483 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:08.484 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testRemoveAndAddColumns.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testRemoveAndAddColumns/report.xml
[m[m23.08.2022 - 09:10:08.683 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testRemoveAndAddColumns was generated successfully
[m[m23.08.2022 - 09:10:08.683 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 204/311
[m[m23.08.2022 - 09:10:08.683 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testToMap
[m[32m23.08.2022 - 09:10:08.683 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testToMap.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testToMap
[m[m23.08.2022 - 09:10:08.909 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:08.910 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testToMap.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testToMap/report.xml
[m[m23.08.2022 - 09:10:09.115 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testToMap was generated successfully
[m[m23.08.2022 - 09:10:09.116 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 205/311
[m[m23.08.2022 - 09:10:09.116 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testToMapWithShortRecord
[m[32m23.08.2022 - 09:10:09.116 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testToMapWithShortRecord.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testToMapWithShortRecord
[m[m23.08.2022 - 09:10:09.315 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:09.315 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testToMapWithShortRecord.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testToMapWithShortRecord/report.xml
[m[m23.08.2022 - 09:10:09.496 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testToMapWithShortRecord was generated successfully
[m[m23.08.2022 - 09:10:09.497 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 206/311
[m[m23.08.2022 - 09:10:09.497 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVRecordTest#testToMapWithNoHeader
[m[32m23.08.2022 - 09:10:09.497 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testToMapWithNoHeader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVRecordTest#testToMapWithNoHeader
[m[m23.08.2022 - 09:10:09.732 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:09.732 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testToMapWithNoHeader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVRecordTest#testToMapWithNoHeader/report.xml
[m[m23.08.2022 - 09:10:09.947 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVRecordTest#testToMapWithNoHeader was generated successfully
[m[m23.08.2022 - 09:10:09.947 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 207/311
[m[m23.08.2022 - 09:10:09.947 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testSurroundingSpacesAreDeleted
[m[32m23.08.2022 - 09:10:09.947 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testSurroundingSpacesAreDeleted.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testSurroundingSpacesAreDeleted
[m[m23.08.2022 - 09:10:10.125 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:10.125 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testSurroundingSpacesAreDeleted.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testSurroundingSpacesAreDeleted/report.xml
[m[m23.08.2022 - 09:10:10.311 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testSurroundingSpacesAreDeleted was generated successfully
[m[m23.08.2022 - 09:10:10.312 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 208/311
[m[m23.08.2022 - 09:10:10.312 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testSurroundingTabsAreDeleted
[m[32m23.08.2022 - 09:10:10.312 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testSurroundingTabsAreDeleted.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testSurroundingTabsAreDeleted
[m[m23.08.2022 - 09:10:10.516 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:10.516 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testSurroundingTabsAreDeleted.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testSurroundingTabsAreDeleted/report.xml
[m[m23.08.2022 - 09:10:10.717 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testSurroundingTabsAreDeleted was generated successfully
[m[m23.08.2022 - 09:10:10.718 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 209/311
[m[m23.08.2022 - 09:10:10.718 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testIgnoreEmptyLines
[m[32m23.08.2022 - 09:10:10.718 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testIgnoreEmptyLines.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testIgnoreEmptyLines
[m[m23.08.2022 - 09:10:10.899 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:10.899 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testIgnoreEmptyLines.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testIgnoreEmptyLines/report.xml
[m[m23.08.2022 - 09:10:11.157 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testIgnoreEmptyLines was generated successfully
[m[m23.08.2022 - 09:10:11.158 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 210/311
[m[m23.08.2022 - 09:10:11.158 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testComments
[m[32m23.08.2022 - 09:10:11.158 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testComments.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testComments
[m[m23.08.2022 - 09:10:11.359 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:11.359 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testComments.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testComments/report.xml
[m[m23.08.2022 - 09:10:11.558 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testComments was generated successfully
[m[m23.08.2022 - 09:10:11.559 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 211/311
[m[m23.08.2022 - 09:10:11.559 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testCommentsAndEmptyLines
[m[32m23.08.2022 - 09:10:11.559 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testCommentsAndEmptyLines.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testCommentsAndEmptyLines
[m[m23.08.2022 - 09:10:11.756 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:11.757 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testCommentsAndEmptyLines.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testCommentsAndEmptyLines/report.xml
[m[m23.08.2022 - 09:10:11.956 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testCommentsAndEmptyLines was generated successfully
[m[m23.08.2022 - 09:10:11.957 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 212/311
[m[m23.08.2022 - 09:10:11.957 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testBackslashWithoutEscaping
[m[32m23.08.2022 - 09:10:11.957 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testBackslashWithoutEscaping.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testBackslashWithoutEscaping
[m[m23.08.2022 - 09:10:12.134 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:12.134 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testBackslashWithoutEscaping.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testBackslashWithoutEscaping/report.xml
[m[m23.08.2022 - 09:10:12.342 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testBackslashWithoutEscaping was generated successfully
[m[m23.08.2022 - 09:10:12.342 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 213/311
[m[m23.08.2022 - 09:10:12.342 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testBackslashWithEscaping
[m[32m23.08.2022 - 09:10:12.342 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testBackslashWithEscaping.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testBackslashWithEscaping
[m[m23.08.2022 - 09:10:12.519 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:12.519 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testBackslashWithEscaping.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testBackslashWithEscaping/report.xml
[m[m23.08.2022 - 09:10:12.701 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testBackslashWithEscaping was generated successfully
[m[m23.08.2022 - 09:10:12.701 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 214/311
[m[m23.08.2022 - 09:10:12.701 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testNextToken4
[m[32m23.08.2022 - 09:10:12.702 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testNextToken4.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testNextToken4
[m[m23.08.2022 - 09:10:12.903 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:12.903 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testNextToken4.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testNextToken4/report.xml
[m[m23.08.2022 - 09:10:13.111 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testNextToken4 was generated successfully
[m[m23.08.2022 - 09:10:13.111 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 215/311
[m[m23.08.2022 - 09:10:13.111 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testNextToken5
[m[32m23.08.2022 - 09:10:13.111 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testNextToken5.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testNextToken5
[m[m23.08.2022 - 09:10:13.289 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:13.289 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testNextToken5.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testNextToken5/report.xml
[m[m23.08.2022 - 09:10:13.498 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testNextToken5 was generated successfully
[m[m23.08.2022 - 09:10:13.498 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 216/311
[m[m23.08.2022 - 09:10:13.498 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testNextToken6
[m[32m23.08.2022 - 09:10:13.498 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testNextToken6.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testNextToken6
[m[m23.08.2022 - 09:10:13.717 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:13.717 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testNextToken6.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testNextToken6/report.xml
[m[m23.08.2022 - 09:10:13.904 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testNextToken6 was generated successfully
[m[m23.08.2022 - 09:10:13.904 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 217/311
[m[m23.08.2022 - 09:10:13.904 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testDelimiterIsWhitespace
[m[32m23.08.2022 - 09:10:13.904 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testDelimiterIsWhitespace.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testDelimiterIsWhitespace
[m[m23.08.2022 - 09:10:14.082 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:14.082 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testDelimiterIsWhitespace.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testDelimiterIsWhitespace/report.xml
[m[m23.08.2022 - 09:10:14.284 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testDelimiterIsWhitespace was generated successfully
[m[m23.08.2022 - 09:10:14.284 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 218/311
[m[m23.08.2022 - 09:10:14.284 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testEscapedCR
[m[32m23.08.2022 - 09:10:14.284 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedCR.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testEscapedCR
[m[m23.08.2022 - 09:10:14.459 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:14.460 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedCR.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedCR/report.xml
[m[m23.08.2022 - 09:10:14.647 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testEscapedCR was generated successfully
[m[m23.08.2022 - 09:10:14.647 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 219/311
[m[m23.08.2022 - 09:10:14.647 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testCR
[m[32m23.08.2022 - 09:10:14.647 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testCR.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testCR
[m[m23.08.2022 - 09:10:14.833 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:14.833 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testCR.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testCR/report.xml
[m[m23.08.2022 - 09:10:15.025 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testCR was generated successfully
[m[m23.08.2022 - 09:10:15.025 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 220/311
[m[m23.08.2022 - 09:10:15.025 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testEscapedLF
[m[32m23.08.2022 - 09:10:15.025 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedLF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testEscapedLF
[m[m23.08.2022 - 09:10:15.200 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:15.200 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedLF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedLF/report.xml
[m[m23.08.2022 - 09:10:15.379 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testEscapedLF was generated successfully
[m[m23.08.2022 - 09:10:15.379 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 221/311
[m[m23.08.2022 - 09:10:15.379 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testLF
[m[32m23.08.2022 - 09:10:15.379 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testLF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testLF
[m[m23.08.2022 - 09:10:15.582 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:15.582 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testLF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testLF/report.xml
[m[m23.08.2022 - 09:10:15.764 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testLF was generated successfully
[m[m23.08.2022 - 09:10:15.765 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 222/311
[m[m23.08.2022 - 09:10:15.765 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testEscapedTab
[m[32m23.08.2022 - 09:10:15.765 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedTab.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testEscapedTab
[m[m23.08.2022 - 09:10:15.940 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:15.940 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedTab.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedTab/report.xml
[m[m23.08.2022 - 09:10:16.138 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testEscapedTab was generated successfully
[m[m23.08.2022 - 09:10:16.139 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 223/311
[m[m23.08.2022 - 09:10:16.139 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testTab
[m[32m23.08.2022 - 09:10:16.139 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testTab.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testTab
[m[m23.08.2022 - 09:10:16.338 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:16.338 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testTab.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testTab/report.xml
[m[m23.08.2022 - 09:10:16.525 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testTab was generated successfully
[m[m23.08.2022 - 09:10:16.525 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 224/311
[m[m23.08.2022 - 09:10:16.525 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testEscapedBackspace
[m[32m23.08.2022 - 09:10:16.526 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedBackspace.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testEscapedBackspace
[m[m23.08.2022 - 09:10:16.756 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:16.756 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedBackspace.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedBackspace/report.xml
[m[m23.08.2022 - 09:10:16.967 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testEscapedBackspace was generated successfully
[m[m23.08.2022 - 09:10:16.967 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 225/311
[m[m23.08.2022 - 09:10:16.967 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testBackspace
[m[32m23.08.2022 - 09:10:16.967 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testBackspace.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testBackspace
[m[m23.08.2022 - 09:10:17.148 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:17.149 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testBackspace.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testBackspace/report.xml
[m[m23.08.2022 - 09:10:17.368 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testBackspace was generated successfully
[m[m23.08.2022 - 09:10:17.368 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 226/311
[m[m23.08.2022 - 09:10:17.368 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testEscapedFF
[m[32m23.08.2022 - 09:10:17.368 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedFF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testEscapedFF
[m[m23.08.2022 - 09:10:17.562 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:17.562 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedFF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedFF/report.xml
[m[m23.08.2022 - 09:10:17.754 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testEscapedFF was generated successfully
[m[m23.08.2022 - 09:10:17.754 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 227/311
[m[m23.08.2022 - 09:10:17.754 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testFF
[m[32m23.08.2022 - 09:10:17.755 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testFF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testFF
[m[m23.08.2022 - 09:10:17.932 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:17.932 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testFF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testFF/report.xml
[m[m23.08.2022 - 09:10:18.133 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testFF was generated successfully
[m[m23.08.2022 - 09:10:18.133 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 228/311
[m[m23.08.2022 - 09:10:18.133 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testEscapedMySqlNullValue
[m[32m23.08.2022 - 09:10:18.133 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedMySqlNullValue.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testEscapedMySqlNullValue
[m[m23.08.2022 - 09:10:18.335 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:18.335 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedMySqlNullValue.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedMySqlNullValue/report.xml
[m[m23.08.2022 - 09:10:18.538 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testEscapedMySqlNullValue was generated successfully
[m[m23.08.2022 - 09:10:18.538 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 229/311
[m[m23.08.2022 - 09:10:18.538 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testEscapedCharacter
[m[32m23.08.2022 - 09:10:18.538 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedCharacter.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testEscapedCharacter
[m[m23.08.2022 - 09:10:18.714 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:18.714 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedCharacter.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedCharacter/report.xml
[m[m23.08.2022 - 09:10:18.909 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testEscapedCharacter was generated successfully
[m[m23.08.2022 - 09:10:18.909 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 230/311
[m[m23.08.2022 - 09:10:18.909 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testEscapedControlCharacter
[m[32m23.08.2022 - 09:10:18.909 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedControlCharacter.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testEscapedControlCharacter
[m[m23.08.2022 - 09:10:19.085 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:19.086 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedControlCharacter.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedControlCharacter/report.xml
[m[m23.08.2022 - 09:10:19.276 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testEscapedControlCharacter was generated successfully
[m[m23.08.2022 - 09:10:19.277 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 231/311
[m[m23.08.2022 - 09:10:19.277 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testEscapedControlCharacter2
[m[32m23.08.2022 - 09:10:19.277 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedControlCharacter2.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testEscapedControlCharacter2
[m[m23.08.2022 - 09:10:19.452 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:19.452 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedControlCharacter2.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapedControlCharacter2/report.xml
[m[m23.08.2022 - 09:10:19.637 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testEscapedControlCharacter2 was generated successfully
[m[m23.08.2022 - 09:10:19.637 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 232/311
[m[m23.08.2022 - 09:10:19.637 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.LexerTest#testEscapingAtEOF
[m[32m23.08.2022 - 09:10:19.638 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapingAtEOF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.LexerTest#testEscapingAtEOF
[m[m23.08.2022 - 09:10:19.811 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:19.811 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapingAtEOF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.LexerTest#testEscapingAtEOF/report.xml
[m[m23.08.2022 - 09:10:20.016 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.LexerTest#testEscapingAtEOF was generated successfully
[m[m23.08.2022 - 09:10:20.017 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 233/311
[m[m23.08.2022 - 09:10:20.017 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testBackslashEscaping
[m[32m23.08.2022 - 09:10:20.017 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBackslashEscaping.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testBackslashEscaping
[m[m23.08.2022 - 09:10:20.246 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:20.247 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBackslashEscaping.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBackslashEscaping/report.xml
[m[m23.08.2022 - 09:10:20.428 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testBackslashEscaping was generated successfully
[m[m23.08.2022 - 09:10:20.428 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 234/311
[m[m23.08.2022 - 09:10:20.428 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testBackslashEscaping2
[m[32m23.08.2022 - 09:10:20.428 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBackslashEscaping2.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testBackslashEscaping2
[m[m23.08.2022 - 09:10:20.635 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:20.635 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBackslashEscaping2.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBackslashEscaping2/report.xml
[m[m23.08.2022 - 09:10:20.825 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testBackslashEscaping2 was generated successfully
[m[m23.08.2022 - 09:10:20.825 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 235/311
[m[m23.08.2022 - 09:10:20.826 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithInputStream
[m[32m23.08.2022 - 09:10:20.826 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithInputStream.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithInputStream
[m[m23.08.2022 - 09:10:21.034 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:21.034 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithInputStream.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithInputStream/report.xml
[m[m23.08.2022 - 09:10:21.221 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithInputStream was generated successfully
[m[m23.08.2022 - 09:10:21.221 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 236/311
[m[m23.08.2022 - 09:10:21.221 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithReader
[m[32m23.08.2022 - 09:10:21.221 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithReader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithReader
[m[m23.08.2022 - 09:10:21.419 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:21.419 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithReader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithReader/report.xml
[m[m23.08.2022 - 09:10:21.623 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithReader was generated successfully
[m[m23.08.2022 - 09:10:21.623 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 237/311
[m[m23.08.2022 - 09:10:21.623 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testBOMInputStream_parseWithReader
[m[32m23.08.2022 - 09:10:21.624 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBOMInputStream_parseWithReader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testBOMInputStream_parseWithReader
[m[m23.08.2022 - 09:10:21.823 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:21.823 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBOMInputStream_parseWithReader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testBOMInputStream_parseWithReader/report.xml
[m[m23.08.2022 - 09:10:22.007 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testBOMInputStream_parseWithReader was generated successfully
[m[m23.08.2022 - 09:10:22.007 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 238/311
[m[m23.08.2022 - 09:10:22.007 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testCarriageReturnEndings
[m[32m23.08.2022 - 09:10:22.007 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testCarriageReturnEndings.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testCarriageReturnEndings
[m[m23.08.2022 - 09:10:22.213 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:22.214 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testCarriageReturnEndings.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testCarriageReturnEndings/report.xml
[m[m23.08.2022 - 09:10:22.396 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testCarriageReturnEndings was generated successfully
[m[m23.08.2022 - 09:10:22.396 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 239/311
[m[m23.08.2022 - 09:10:22.396 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testCarriageReturnLineFeedEndings
[m[32m23.08.2022 - 09:10:22.396 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testCarriageReturnLineFeedEndings.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testCarriageReturnLineFeedEndings
[m[m23.08.2022 - 09:10:22.601 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:22.601 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testCarriageReturnLineFeedEndings.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testCarriageReturnLineFeedEndings/report.xml
[m[m23.08.2022 - 09:10:22.780 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testCarriageReturnLineFeedEndings was generated successfully
[m[m23.08.2022 - 09:10:22.780 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 240/311
[m[m23.08.2022 - 09:10:22.780 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testClose
[m[32m23.08.2022 - 09:10:22.780 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testClose.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testClose
[m[m23.08.2022 - 09:10:23.011 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:23.011 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testClose.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testClose/report.xml
[m[m23.08.2022 - 09:10:23.217 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testClose was generated successfully
[m[m23.08.2022 - 09:10:23.218 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 241/311
[m[m23.08.2022 - 09:10:23.218 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testCSV57
[m[32m23.08.2022 - 09:10:23.218 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testCSV57.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testCSV57
[m[m23.08.2022 - 09:10:23.456 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:23.456 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testCSV57.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testCSV57/report.xml
[m[m23.08.2022 - 09:10:23.657 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testCSV57 was generated successfully
[m[m23.08.2022 - 09:10:23.657 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 242/311
[m[m23.08.2022 - 09:10:23.657 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testDefaultFormat
[m[32m23.08.2022 - 09:10:23.657 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testDefaultFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testDefaultFormat
[m[m23.08.2022 - 09:10:23.896 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:23.897 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testDefaultFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testDefaultFormat/report.xml
[m[m23.08.2022 - 09:10:24.166 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testDefaultFormat was generated successfully
[m[m23.08.2022 - 09:10:24.166 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 243/311
[m[m23.08.2022 - 09:10:24.166 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testDuplicateHeadersNotAllowed
[m[32m23.08.2022 - 09:10:24.166 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testDuplicateHeadersNotAllowed.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testDuplicateHeadersNotAllowed
[m[m23.08.2022 - 09:10:24.380 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:24.381 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testDuplicateHeadersNotAllowed.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testDuplicateHeadersNotAllowed/report.xml
[m[m23.08.2022 - 09:10:24.586 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testDuplicateHeadersNotAllowed was generated successfully
[m[m23.08.2022 - 09:10:24.586 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 244/311
[m[m23.08.2022 - 09:10:24.586 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testDuplicateHeadersAllowedByDefault
[m[32m23.08.2022 - 09:10:24.586 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testDuplicateHeadersAllowedByDefault.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testDuplicateHeadersAllowedByDefault
[m[m23.08.2022 - 09:10:24.809 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:24.809 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testDuplicateHeadersAllowedByDefault.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testDuplicateHeadersAllowedByDefault/report.xml
[m[m23.08.2022 - 09:10:25.015 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testDuplicateHeadersAllowedByDefault was generated successfully
[m[m23.08.2022 - 09:10:25.015 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 245/311
[m[m23.08.2022 - 09:10:25.015 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testEmptyFileHeaderParsing
[m[32m23.08.2022 - 09:10:25.015 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEmptyFileHeaderParsing.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testEmptyFileHeaderParsing
[m[m23.08.2022 - 09:10:25.242 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:25.242 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEmptyFileHeaderParsing.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEmptyFileHeaderParsing/report.xml
[m[m23.08.2022 - 09:10:25.429 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testEmptyFileHeaderParsing was generated successfully
[m[m23.08.2022 - 09:10:25.429 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 246/311
[m[m23.08.2022 - 09:10:25.429 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testEmptyFile
[m[32m23.08.2022 - 09:10:25.429 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEmptyFile.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testEmptyFile
[m[m23.08.2022 - 09:10:25.633 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:25.633 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEmptyFile.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEmptyFile/report.xml
[m[m23.08.2022 - 09:10:25.821 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testEmptyFile was generated successfully
[m[m23.08.2022 - 09:10:25.821 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 247/311
[m[m23.08.2022 - 09:10:25.821 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorCSV
[m[32m23.08.2022 - 09:10:25.821 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorCSV.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorCSV
[m[m23.08.2022 - 09:10:26.057 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:26.057 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorCSV.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorCSV/report.xml
[m[m23.08.2022 - 09:10:26.270 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorCSV was generated successfully
[m[m23.08.2022 - 09:10:26.270 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 248/311
[m[m23.08.2022 - 09:10:26.270 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorExcel
[m[32m23.08.2022 - 09:10:26.270 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorExcel.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorExcel
[m[m23.08.2022 - 09:10:26.476 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:26.477 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorExcel.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorExcel/report.xml
[m[m23.08.2022 - 09:10:26.658 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorExcel was generated successfully
[m[m23.08.2022 - 09:10:26.658 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 249/311
[m[m23.08.2022 - 09:10:26.658 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorCSV
[m[32m23.08.2022 - 09:10:26.658 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorCSV.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorCSV
[m[m23.08.2022 - 09:10:26.910 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:26.910 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorCSV.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorCSV/report.xml
[m[m23.08.2022 - 09:10:27.098 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorCSV was generated successfully
[m[m23.08.2022 - 09:10:27.098 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 250/311
[m[m23.08.2022 - 09:10:27.098 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorExcel
[m[32m23.08.2022 - 09:10:27.098 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorExcel.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorExcel
[m[m23.08.2022 - 09:10:27.309 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:27.309 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorExcel.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorExcel/report.xml
[m[m23.08.2022 - 09:10:27.517 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorExcel was generated successfully
[m[m23.08.2022 - 09:10:27.518 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 251/311
[m[m23.08.2022 - 09:10:27.518 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testExcelFormat1
[m[32m23.08.2022 - 09:10:27.518 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testExcelFormat1.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testExcelFormat1
[m[m23.08.2022 - 09:10:27.752 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:27.752 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testExcelFormat1.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testExcelFormat1/report.xml
[m[m23.08.2022 - 09:10:27.945 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testExcelFormat1 was generated successfully
[m[m23.08.2022 - 09:10:27.945 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 252/311
[m[m23.08.2022 - 09:10:27.945 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testExcelFormat2
[m[32m23.08.2022 - 09:10:27.945 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testExcelFormat2.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testExcelFormat2
[m[m23.08.2022 - 09:10:28.169 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:28.169 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testExcelFormat2.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testExcelFormat2/report.xml
[m[m23.08.2022 - 09:10:28.356 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testExcelFormat2 was generated successfully
[m[m23.08.2022 - 09:10:28.356 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 253/311
[m[m23.08.2022 - 09:10:28.356 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testExcelHeaderCountLessThanData
[m[32m23.08.2022 - 09:10:28.356 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testExcelHeaderCountLessThanData.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testExcelHeaderCountLessThanData
[m[m23.08.2022 - 09:10:28.562 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:28.562 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testExcelHeaderCountLessThanData.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testExcelHeaderCountLessThanData/report.xml
[m[m23.08.2022 - 09:10:28.761 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testExcelHeaderCountLessThanData was generated successfully
[m[m23.08.2022 - 09:10:28.761 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 254/311
[m[m23.08.2022 - 09:10:28.761 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCr
[m[32m23.08.2022 - 09:10:28.761 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCr.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCr
[m[m23.08.2022 - 09:10:28.989 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:28.989 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCr.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCr/report.xml
[m[m23.08.2022 - 09:10:29.198 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCr was generated successfully
[m[m23.08.2022 - 09:10:29.198 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 255/311
[m[m23.08.2022 - 09:10:29.198 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCrLf
[m[32m23.08.2022 - 09:10:29.198 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCrLf.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCrLf
[m[m23.08.2022 - 09:10:29.403 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:29.404 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCrLf.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCrLf/report.xml
[m[m23.08.2022 - 09:10:29.605 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCrLf was generated successfully
[m[m23.08.2022 - 09:10:29.606 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 256/311
[m[m23.08.2022 - 09:10:29.606 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testFirstEndOfLineLf
[m[32m23.08.2022 - 09:10:29.606 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testFirstEndOfLineLf.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testFirstEndOfLineLf
[m[m23.08.2022 - 09:10:29.829 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:29.829 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testFirstEndOfLineLf.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testFirstEndOfLineLf/report.xml
[m[m23.08.2022 - 09:10:30.037 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testFirstEndOfLineLf was generated successfully
[m[m23.08.2022 - 09:10:30.037 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 257/311
[m[m23.08.2022 - 09:10:30.037 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testForEach
[m[32m23.08.2022 - 09:10:30.037 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testForEach.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testForEach
[m[m23.08.2022 - 09:10:30.244 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:30.244 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testForEach.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testForEach/report.xml
[m[m23.08.2022 - 09:10:30.431 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testForEach was generated successfully
[m[m23.08.2022 - 09:10:30.431 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 258/311
[m[m23.08.2022 - 09:10:30.432 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetHeaderMap
[m[32m23.08.2022 - 09:10:30.432 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetHeaderMap.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetHeaderMap
[m[m23.08.2022 - 09:10:30.682 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:30.682 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetHeaderMap.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetHeaderMap/report.xml
[m[m23.08.2022 - 09:10:30.887 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetHeaderMap was generated successfully
[m[m23.08.2022 - 09:10:30.887 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 259/311
[m[m23.08.2022 - 09:10:30.887 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetHeaderNames
[m[32m23.08.2022 - 09:10:30.888 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetHeaderNames.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetHeaderNames
[m[m23.08.2022 - 09:10:31.133 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:31.133 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetHeaderNames.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetHeaderNames/report.xml
[m[m23.08.2022 - 09:10:31.333 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetHeaderNames was generated successfully
[m[m23.08.2022 - 09:10:31.333 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 260/311
[m[m23.08.2022 - 09:10:31.333 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetHeaderNamesReadOnly
[m[32m23.08.2022 - 09:10:31.333 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetHeaderNamesReadOnly.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetHeaderNamesReadOnly
[m[m23.08.2022 - 09:10:31.555 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:31.555 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetHeaderNamesReadOnly.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetHeaderNamesReadOnly/report.xml
[m[m23.08.2022 - 09:10:31.740 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetHeaderNamesReadOnly was generated successfully
[m[m23.08.2022 - 09:10:31.740 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 261/311
[m[m23.08.2022 - 09:10:31.740 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetLine
[m[32m23.08.2022 - 09:10:31.740 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetLine.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetLine
[m[m23.08.2022 - 09:10:31.980 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:31.980 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetLine.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetLine/report.xml
[m[m23.08.2022 - 09:10:32.180 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetLine was generated successfully
[m[m23.08.2022 - 09:10:32.180 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 262/311
[m[m23.08.2022 - 09:10:32.181 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCR
[m[32m23.08.2022 - 09:10:32.181 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCR.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCR
[m[m23.08.2022 - 09:10:32.404 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:32.404 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCR.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCR/report.xml
[m[m23.08.2022 - 09:10:32.619 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCR was generated successfully
[m[m23.08.2022 - 09:10:32.619 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 263/311
[m[m23.08.2022 - 09:10:32.619 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCRLF
[m[32m23.08.2022 - 09:10:32.620 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCRLF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCRLF
[m[m23.08.2022 - 09:10:32.879 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:32.879 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCRLF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCRLF/report.xml
[m[m23.08.2022 - 09:10:33.137 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCRLF was generated successfully
[m[m23.08.2022 - 09:10:33.137 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 264/311
[m[m23.08.2022 - 09:10:33.137 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetLineNumberWithLF
[m[32m23.08.2022 - 09:10:33.137 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetLineNumberWithLF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetLineNumberWithLF
[m[m23.08.2022 - 09:10:33.365 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:33.365 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetLineNumberWithLF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetLineNumberWithLF/report.xml
[m[m23.08.2022 - 09:10:33.553 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetLineNumberWithLF was generated successfully
[m[m23.08.2022 - 09:10:33.553 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 265/311
[m[m23.08.2022 - 09:10:33.553 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetOneLine
[m[32m23.08.2022 - 09:10:33.553 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetOneLine.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetOneLine
[m[m23.08.2022 - 09:10:33.776 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:33.776 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetOneLine.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetOneLine/report.xml
[m[m23.08.2022 - 09:10:33.961 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetOneLine was generated successfully
[m[m23.08.2022 - 09:10:33.961 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 266/311
[m[m23.08.2022 - 09:10:33.961 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetOneLineOneParser
[m[32m23.08.2022 - 09:10:33.961 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetOneLineOneParser.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetOneLineOneParser
[m[m23.08.2022 - 09:10:34.166 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:34.166 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetOneLineOneParser.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetOneLineOneParser/report.xml
[m[m23.08.2022 - 09:10:34.367 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetOneLineOneParser was generated successfully
[m[m23.08.2022 - 09:10:34.367 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 267/311
[m[m23.08.2022 - 09:10:34.367 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCR
[m[32m23.08.2022 - 09:10:34.367 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCR.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCR
[m[m23.08.2022 - 09:10:34.579 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:34.579 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCR.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCR/report.xml
[m[m23.08.2022 - 09:10:34.818 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCR was generated successfully
[m[m23.08.2022 - 09:10:34.819 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 268/311
[m[m23.08.2022 - 09:10:34.819 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCRLF
[m[32m23.08.2022 - 09:10:34.819 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCRLF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCRLF
[m[m23.08.2022 - 09:10:35.032 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:35.033 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCRLF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCRLF/report.xml
[m[m23.08.2022 - 09:10:35.264 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCRLF was generated successfully
[m[m23.08.2022 - 09:10:35.264 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 269/311
[m[m23.08.2022 - 09:10:35.264 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithLF
[m[32m23.08.2022 - 09:10:35.265 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithLF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithLF
[m[m23.08.2022 - 09:10:35.516 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:35.517 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithLF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithLF/report.xml
[m[m23.08.2022 - 09:10:35.722 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithLF was generated successfully
[m[m23.08.2022 - 09:10:35.722 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 270/311
[m[m23.08.2022 - 09:10:35.722 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithCRLF
[m[32m23.08.2022 - 09:10:35.722 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithCRLF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithCRLF
[m[m23.08.2022 - 09:10:35.928 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:35.928 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithCRLF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithCRLF/report.xml
[m[m23.08.2022 - 09:10:36.113 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithCRLF was generated successfully
[m[m23.08.2022 - 09:10:36.113 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 271/311
[m[m23.08.2022 - 09:10:36.113 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithLF
[m[32m23.08.2022 - 09:10:36.113 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithLF.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithLF
[m[m23.08.2022 - 09:10:36.324 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:36.324 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithLF.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithLF/report.xml
[m[m23.08.2022 - 09:10:36.563 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithLF was generated successfully
[m[m23.08.2022 - 09:10:36.563 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 272/311
[m[m23.08.2022 - 09:10:36.563 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetRecords
[m[32m23.08.2022 - 09:10:36.563 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecords.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetRecords
[m[m23.08.2022 - 09:10:36.770 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:36.770 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecords.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecords/report.xml
[m[m23.08.2022 - 09:10:36.954 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetRecords was generated successfully
[m[m23.08.2022 - 09:10:36.954 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 273/311
[m[m23.08.2022 - 09:10:36.954 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testGetRecordWithMultiLineValues
[m[32m23.08.2022 - 09:10:36.954 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordWithMultiLineValues.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testGetRecordWithMultiLineValues
[m[m23.08.2022 - 09:10:37.182 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:37.182 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordWithMultiLineValues.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testGetRecordWithMultiLineValues/report.xml
[m[m23.08.2022 - 09:10:37.390 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testGetRecordWithMultiLineValues was generated successfully
[m[m23.08.2022 - 09:10:37.390 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 274/311
[m[m23.08.2022 - 09:10:37.390 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testHeader
[m[32m23.08.2022 - 09:10:37.390 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testHeader
[m[m23.08.2022 - 09:10:37.614 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:37.615 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeader/report.xml
[m[m23.08.2022 - 09:10:37.796 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testHeader was generated successfully
[m[m23.08.2022 - 09:10:37.796 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 275/311
[m[m23.08.2022 - 09:10:37.796 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testHeaderComment
[m[32m23.08.2022 - 09:10:37.796 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeaderComment.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testHeaderComment
[m[m23.08.2022 - 09:10:38.002 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:38.002 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeaderComment.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeaderComment/report.xml
[m[m23.08.2022 - 09:10:38.192 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testHeaderComment was generated successfully
[m[m23.08.2022 - 09:10:38.192 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 276/311
[m[m23.08.2022 - 09:10:38.192 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testHeaderMissing
[m[32m23.08.2022 - 09:10:38.192 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeaderMissing.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testHeaderMissing
[m[m23.08.2022 - 09:10:38.419 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:38.420 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeaderMissing.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeaderMissing/report.xml
[m[m23.08.2022 - 09:10:38.605 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testHeaderMissing was generated successfully
[m[m23.08.2022 - 09:10:38.606 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 277/311
[m[m23.08.2022 - 09:10:38.606 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testHeaderMissingWithNull
[m[32m23.08.2022 - 09:10:38.606 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeaderMissingWithNull.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testHeaderMissingWithNull
[m[m23.08.2022 - 09:10:38.811 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:38.811 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeaderMissingWithNull.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeaderMissingWithNull/report.xml
[m[m23.08.2022 - 09:10:38.997 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testHeaderMissingWithNull was generated successfully
[m[m23.08.2022 - 09:10:38.998 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 278/311
[m[m23.08.2022 - 09:10:38.998 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testHeadersMissing
[m[32m23.08.2022 - 09:10:38.998 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeadersMissing.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testHeadersMissing
[m[m23.08.2022 - 09:10:39.204 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:39.204 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeadersMissing.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeadersMissing/report.xml
[m[m23.08.2022 - 09:10:39.410 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testHeadersMissing was generated successfully
[m[m23.08.2022 - 09:10:39.410 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 279/311
[m[m23.08.2022 - 09:10:39.410 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testHeadersMissingException
[m[32m23.08.2022 - 09:10:39.410 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeadersMissingException.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testHeadersMissingException
[m[m23.08.2022 - 09:10:39.632 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:39.632 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeadersMissingException.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testHeadersMissingException/report.xml
[m[m23.08.2022 - 09:10:39.871 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testHeadersMissingException was generated successfully
[m[m23.08.2022 - 09:10:39.871 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 280/311
[m[m23.08.2022 - 09:10:39.871 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testIgnoreCaseHeaderMapping
[m[32m23.08.2022 - 09:10:39.871 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testIgnoreCaseHeaderMapping.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testIgnoreCaseHeaderMapping
[m[m23.08.2022 - 09:10:40.084 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:40.085 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testIgnoreCaseHeaderMapping.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testIgnoreCaseHeaderMapping/report.xml
[m[m23.08.2022 - 09:10:40.332 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testIgnoreCaseHeaderMapping was generated successfully
[m[m23.08.2022 - 09:10:40.332 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 281/311
[m[m23.08.2022 - 09:10:40.332 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testIgnoreEmptyLines
[m[32m23.08.2022 - 09:10:40.332 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testIgnoreEmptyLines.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testIgnoreEmptyLines
[m[m23.08.2022 - 09:10:40.539 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:40.539 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testIgnoreEmptyLines.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testIgnoreEmptyLines/report.xml
[m[m23.08.2022 - 09:10:40.754 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testIgnoreEmptyLines was generated successfully
[m[m23.08.2022 - 09:10:40.754 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 282/311
[m[m23.08.2022 - 09:10:40.754 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testInvalidFormat
[m[32m23.08.2022 - 09:10:40.754 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testInvalidFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testInvalidFormat
[m[m23.08.2022 - 09:10:40.952 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:40.952 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testInvalidFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testInvalidFormat/report.xml
[m[m23.08.2022 - 09:10:41.157 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testInvalidFormat was generated successfully
[m[m23.08.2022 - 09:10:41.158 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 283/311
[m[m23.08.2022 - 09:10:41.158 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testIterator
[m[32m23.08.2022 - 09:10:41.158 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testIterator.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testIterator
[m[m23.08.2022 - 09:10:41.384 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:41.385 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testIterator.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testIterator/report.xml
[m[m23.08.2022 - 09:10:41.593 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testIterator was generated successfully
[m[m23.08.2022 - 09:10:41.593 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 284/311
[m[m23.08.2022 - 09:10:41.593 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testIteratorSequenceBreaking
[m[32m23.08.2022 - 09:10:41.593 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testIteratorSequenceBreaking.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testIteratorSequenceBreaking
[m[m23.08.2022 - 09:10:41.798 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:41.798 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testIteratorSequenceBreaking.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testIteratorSequenceBreaking/report.xml
[m[m23.08.2022 - 09:10:41.982 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testIteratorSequenceBreaking was generated successfully
[m[m23.08.2022 - 09:10:41.982 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 285/311
[m[m23.08.2022 - 09:10:41.982 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testLineFeedEndings
[m[32m23.08.2022 - 09:10:41.982 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testLineFeedEndings.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testLineFeedEndings
[m[m23.08.2022 - 09:10:42.227 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:42.227 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testLineFeedEndings.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testLineFeedEndings/report.xml
[m[m23.08.2022 - 09:10:42.433 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testLineFeedEndings was generated successfully
[m[m23.08.2022 - 09:10:42.433 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 286/311
[m[m23.08.2022 - 09:10:42.433 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testMappedButNotSetAsOutlook2007ContactExport
[m[32m23.08.2022 - 09:10:42.433 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testMappedButNotSetAsOutlook2007ContactExport.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testMappedButNotSetAsOutlook2007ContactExport
[m[m23.08.2022 - 09:10:42.638 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:42.638 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testMappedButNotSetAsOutlook2007ContactExport.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testMappedButNotSetAsOutlook2007ContactExport/report.xml
[m[m23.08.2022 - 09:10:42.845 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testMappedButNotSetAsOutlook2007ContactExport was generated successfully
[m[m23.08.2022 - 09:10:42.845 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 287/311
[m[m23.08.2022 - 09:10:42.845 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testMultipleIterators
[m[32m23.08.2022 - 09:10:42.845 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testMultipleIterators.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testMultipleIterators
[m[m23.08.2022 - 09:10:43.077 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:43.077 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testMultipleIterators.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testMultipleIterators/report.xml
[m[m23.08.2022 - 09:10:43.289 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testMultipleIterators was generated successfully
[m[m23.08.2022 - 09:10:43.289 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 288/311
[m[m23.08.2022 - 09:10:43.289 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testNewCSVParserNullReaderFormat
[m[32m23.08.2022 - 09:10:43.289 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testNewCSVParserNullReaderFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testNewCSVParserNullReaderFormat
[m[m23.08.2022 - 09:10:43.511 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:43.512 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testNewCSVParserNullReaderFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testNewCSVParserNullReaderFormat/report.xml
[m[m23.08.2022 - 09:10:43.765 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testNewCSVParserNullReaderFormat was generated successfully
[m[m23.08.2022 - 09:10:43.765 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 289/311
[m[m23.08.2022 - 09:10:43.765 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testNewCSVParserReaderNullFormat
[m[32m23.08.2022 - 09:10:43.765 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testNewCSVParserReaderNullFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testNewCSVParserReaderNullFormat
[m[m23.08.2022 - 09:10:43.966 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:43.966 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testNewCSVParserReaderNullFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testNewCSVParserReaderNullFormat/report.xml
[m[m23.08.2022 - 09:10:44.153 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testNewCSVParserReaderNullFormat was generated successfully
[m[m23.08.2022 - 09:10:44.153 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 290/311
[m[m23.08.2022 - 09:10:44.153 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testNoHeaderMap
[m[32m23.08.2022 - 09:10:44.153 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testNoHeaderMap.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testNoHeaderMap
[m[m23.08.2022 - 09:10:44.374 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:44.374 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testNoHeaderMap.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testNoHeaderMap/report.xml
[m[m23.08.2022 - 09:10:44.561 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testNoHeaderMap was generated successfully
[m[m23.08.2022 - 09:10:44.561 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 291/311
[m[m23.08.2022 - 09:10:44.561 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testParse
[m[32m23.08.2022 - 09:10:44.561 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParse.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testParse
[m[m23.08.2022 - 09:10:44.781 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:44.781 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParse.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParse/report.xml
[m[m23.08.2022 - 09:10:45.002 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testParse was generated successfully
[m[m23.08.2022 - 09:10:45.002 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 292/311
[m[m23.08.2022 - 09:10:45.002 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testParseFileNullFormat
[m[32m23.08.2022 - 09:10:45.002 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseFileNullFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testParseFileNullFormat
[m[m23.08.2022 - 09:10:45.229 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:45.229 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseFileNullFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseFileNullFormat/report.xml
[m[m23.08.2022 - 09:10:45.434 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testParseFileNullFormat was generated successfully
[m[m23.08.2022 - 09:10:45.434 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 293/311
[m[m23.08.2022 - 09:10:45.434 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testParseNullFileFormat
[m[32m23.08.2022 - 09:10:45.435 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseNullFileFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testParseNullFileFormat
[m[m23.08.2022 - 09:10:45.653 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:45.653 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseNullFileFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseNullFileFormat/report.xml
[m[m23.08.2022 - 09:10:45.847 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testParseNullFileFormat was generated successfully
[m[m23.08.2022 - 09:10:45.847 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 294/311
[m[m23.08.2022 - 09:10:45.847 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testParseNullPathFormat
[m[32m23.08.2022 - 09:10:45.847 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseNullPathFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testParseNullPathFormat
[m[m23.08.2022 - 09:10:46.086 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:46.086 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseNullPathFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseNullPathFormat/report.xml
[m[m23.08.2022 - 09:10:46.324 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testParseNullPathFormat was generated successfully
[m[m23.08.2022 - 09:10:46.324 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 295/311
[m[m23.08.2022 - 09:10:46.324 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testParseNullStringFormat
[m[32m23.08.2022 - 09:10:46.324 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseNullStringFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testParseNullStringFormat
[m[m23.08.2022 - 09:10:46.531 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:46.531 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseNullStringFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseNullStringFormat/report.xml
[m[m23.08.2022 - 09:10:46.735 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testParseNullStringFormat was generated successfully
[m[m23.08.2022 - 09:10:46.735 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 296/311
[m[m23.08.2022 - 09:10:46.735 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testParseNullUrlCharsetFormat
[m[32m23.08.2022 - 09:10:46.735 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseNullUrlCharsetFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testParseNullUrlCharsetFormat
[m[m23.08.2022 - 09:10:46.933 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:46.933 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseNullUrlCharsetFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseNullUrlCharsetFormat/report.xml
[m[m23.08.2022 - 09:10:47.137 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testParseNullUrlCharsetFormat was generated successfully
[m[m23.08.2022 - 09:10:47.137 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 297/311
[m[m23.08.2022 - 09:10:47.137 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testParserUrlNullCharsetFormat
[m[32m23.08.2022 - 09:10:47.137 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParserUrlNullCharsetFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testParserUrlNullCharsetFormat
[m[m23.08.2022 - 09:10:47.338 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:47.339 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParserUrlNullCharsetFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParserUrlNullCharsetFormat/report.xml
[m[m23.08.2022 - 09:10:47.546 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testParserUrlNullCharsetFormat was generated successfully
[m[m23.08.2022 - 09:10:47.546 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 298/311
[m[m23.08.2022 - 09:10:47.546 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testParseStringNullFormat
[m[32m23.08.2022 - 09:10:47.546 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseStringNullFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testParseStringNullFormat
[m[m23.08.2022 - 09:10:47.726 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:47.726 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseStringNullFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseStringNullFormat/report.xml
[m[m23.08.2022 - 09:10:47.929 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testParseStringNullFormat was generated successfully
[m[m23.08.2022 - 09:10:47.930 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 299/311
[m[m23.08.2022 - 09:10:47.930 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testParseUrlCharsetNullFormat
[m[32m23.08.2022 - 09:10:47.930 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseUrlCharsetNullFormat.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testParseUrlCharsetNullFormat
[m[m23.08.2022 - 09:10:48.129 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:48.129 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseUrlCharsetNullFormat.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testParseUrlCharsetNullFormat/report.xml
[m[m23.08.2022 - 09:10:48.313 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testParseUrlCharsetNullFormat was generated successfully
[m[m23.08.2022 - 09:10:48.313 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 300/311
[m[m23.08.2022 - 09:10:48.313 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testProvidedHeader
[m[32m23.08.2022 - 09:10:48.314 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testProvidedHeader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testProvidedHeader
[m[m23.08.2022 - 09:10:48.522 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:48.522 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testProvidedHeader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testProvidedHeader/report.xml
[m[m23.08.2022 - 09:10:48.700 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testProvidedHeader was generated successfully
[m[m23.08.2022 - 09:10:48.700 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 301/311
[m[m23.08.2022 - 09:10:48.700 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testProvidedHeaderAuto
[m[32m23.08.2022 - 09:10:48.701 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testProvidedHeaderAuto.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testProvidedHeaderAuto
[m[m23.08.2022 - 09:10:48.906 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:48.906 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testProvidedHeaderAuto.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testProvidedHeaderAuto/report.xml
[m[m23.08.2022 - 09:10:49.106 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testProvidedHeaderAuto was generated successfully
[m[m23.08.2022 - 09:10:49.106 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 302/311
[m[m23.08.2022 - 09:10:49.106 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testRoundtrip
[m[32m23.08.2022 - 09:10:49.107 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testRoundtrip.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testRoundtrip
[m[m23.08.2022 - 09:10:49.315 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:49.315 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testRoundtrip.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testRoundtrip/report.xml
[m[m23.08.2022 - 09:10:49.524 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testRoundtrip was generated successfully
[m[m23.08.2022 - 09:10:49.524 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 303/311
[m[m23.08.2022 - 09:10:49.524 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testSkipAutoHeader
[m[32m23.08.2022 - 09:10:49.524 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testSkipAutoHeader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testSkipAutoHeader
[m[m23.08.2022 - 09:10:49.757 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:49.757 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testSkipAutoHeader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testSkipAutoHeader/report.xml
[m[m23.08.2022 - 09:10:49.991 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testSkipAutoHeader was generated successfully
[m[m23.08.2022 - 09:10:49.991 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 304/311
[m[m23.08.2022 - 09:10:49.991 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testSkipHeaderOverrideDuplicateHeaders
[m[32m23.08.2022 - 09:10:49.991 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testSkipHeaderOverrideDuplicateHeaders.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testSkipHeaderOverrideDuplicateHeaders
[m[m23.08.2022 - 09:10:50.223 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:50.223 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testSkipHeaderOverrideDuplicateHeaders.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testSkipHeaderOverrideDuplicateHeaders/report.xml
[m[m23.08.2022 - 09:10:50.426 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testSkipHeaderOverrideDuplicateHeaders was generated successfully
[m[m23.08.2022 - 09:10:50.426 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 305/311
[m[m23.08.2022 - 09:10:50.426 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testSkipSetAltHeaders
[m[32m23.08.2022 - 09:10:50.426 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testSkipSetAltHeaders.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testSkipSetAltHeaders
[m[m23.08.2022 - 09:10:50.633 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:50.633 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testSkipSetAltHeaders.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testSkipSetAltHeaders/report.xml
[m[m23.08.2022 - 09:10:50.843 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testSkipSetAltHeaders was generated successfully
[m[m23.08.2022 - 09:10:50.843 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 306/311
[m[m23.08.2022 - 09:10:50.843 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testSkipSetHeader
[m[32m23.08.2022 - 09:10:50.843 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testSkipSetHeader.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testSkipSetHeader
[m[m23.08.2022 - 09:10:51.049 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:51.050 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testSkipSetHeader.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testSkipSetHeader/report.xml
[m[m23.08.2022 - 09:10:51.238 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testSkipSetHeader was generated successfully
[m[m23.08.2022 - 09:10:51.238 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 307/311
[m[m23.08.2022 - 09:10:51.238 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testTrailingDelimiter
[m[32m23.08.2022 - 09:10:51.238 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testTrailingDelimiter.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testTrailingDelimiter
[m[m23.08.2022 - 09:10:51.493 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:51.493 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testTrailingDelimiter.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testTrailingDelimiter/report.xml
[m[m23.08.2022 - 09:10:51.682 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testTrailingDelimiter was generated successfully
[m[m23.08.2022 - 09:10:51.682 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 308/311
[m[m23.08.2022 - 09:10:51.682 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testTrim
[m[32m23.08.2022 - 09:10:51.682 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testTrim.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testTrim
[m[m23.08.2022 - 09:10:51.909 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:51.910 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testTrim.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testTrim/report.xml
[m[m23.08.2022 - 09:10:52.097 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testTrim was generated successfully
[m[m23.08.2022 - 09:10:52.097 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 309/311
[m[m23.08.2022 - 09:10:52.097 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.CSVParserTest#testRepeatedHeadersAreReturnedInCSVRecordHeaderNames
[m[32m23.08.2022 - 09:10:52.097 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testRepeatedHeadersAreReturnedInCSVRecordHeaderNames.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.CSVParserTest#testRepeatedHeadersAreReturnedInCSVRecordHeaderNames
[m[m23.08.2022 - 09:10:52.302 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:52.302 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testRepeatedHeadersAreReturnedInCSVRecordHeaderNames.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.CSVParserTest#testRepeatedHeadersAreReturnedInCSVRecordHeaderNames/report.xml
[m[m23.08.2022 - 09:10:52.511 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.CSVParserTest#testRepeatedHeadersAreReturnedInCSVRecordHeaderNames was generated successfully
[m[m23.08.2022 - 09:10:52.511 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 310/311
[m[m23.08.2022 - 09:10:52.511 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.AssertionsTest#testNotNull
[m[32m23.08.2022 - 09:10:52.511 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.AssertionsTest#testNotNull.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.AssertionsTest#testNotNull
[m[m23.08.2022 - 09:10:52.661 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:52.661 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.AssertionsTest#testNotNull.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.AssertionsTest#testNotNull/report.xml
[m[m23.08.2022 - 09:10:52.847 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.AssertionsTest#testNotNull was generated successfully
[m[m23.08.2022 - 09:10:52.847 [INFO ] LineCoverageStrategy.lambda$calculateOverallCoverage$0() - Executing test case 311/311
[m[m23.08.2022 - 09:10:52.847 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Executing testcase org.apache.commons.csv.AssertionsTest#testNotNullNull
[m[32m23.08.2022 - 09:10:52.847 [DEBUG] LineCoverageStrategy.instrumentAndExecuteTestCase() - Instrumentation and execution command: java -javaagent:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacocoagent.jar=destfile=/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.AssertionsTest#testNotNullNull.exec,includes=org.apache.commons.* -cp /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/SingleJUnitTestRunner.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/scripts/junit-4.8.2.jar:/home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/commons-csv-1.7-fat-tests.jar SingleJUnitTestRunner org.apache.commons.csv.AssertionsTest#testNotNullNull
[m[m23.08.2022 - 09:10:52.970 [INFO ] LineCoverageStrategy.instrumentAndExecuteTestCase() - Test case was instrumented and executed successfully.
[m[32m23.08.2022 - 09:10:52.970 [DEBUG] LineCoverageStrategy.createReport() - Report generation command: java -jar /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/JSR/slicer/Slicer4J/../../jacoco/jacococli.jar report /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.AssertionsTest#testNotNullNull.exec --classfiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/target/classes --sourcefiles /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/projects/commons-csv_old/src/main/java --xml /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/org.apache.commons.csv.AssertionsTest#testNotNullNull/report.xml
[m[m23.08.2022 - 09:10:53.173 [INFO ] LineCoverageStrategy.createReport() - Report for org.apache.commons.csv.AssertionsTest#testNotNullNull was generated successfully
[m[m23.08.2022 - 09:10:53.174 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAll
[m[m23.08.2022 - 09:10:53.229 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeAllNonNull
[m[m23.08.2022 - 09:10:53.244 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.issues.JiraCsv203Test#testWithoutQuoteMode
[m[m23.08.2022 - 09:10:53.257 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeMinimal
[m[m23.08.2022 - 09:10:53.270 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.issues.JiraCsv203Test#testQuoteModeNonNumeric
[m[m23.08.2022 - 09:10:53.282 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.issues.JiraCsv203Test#testWithoutNullString
[m[m23.08.2022 - 09:10:53.297 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.issues.JiraCsv203Test#testWithEmptyValues
[m[m23.08.2022 - 09:10:53.311 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatPredefinedTest#testDefault
[m[m23.08.2022 - 09:10:53.324 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatPredefinedTest#testExcel
[m[m23.08.2022 - 09:10:53.335 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatPredefinedTest#testMySQL
[m[m23.08.2022 - 09:10:53.347 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatPredefinedTest#testOracle
[m[m23.08.2022 - 09:10:53.358 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlCsv
[m[m23.08.2022 - 09:10:53.369 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbCsv
[m[m23.08.2022 - 09:10:53.379 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatPredefinedTest#testMongoDbTsv
[m[m23.08.2022 - 09:10:53.386 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatPredefinedTest#testPostgreSqlText
[m[m23.08.2022 - 09:10:53.392 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatPredefinedTest#testRFC4180
[m[m23.08.2022 - 09:10:53.398 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatPredefinedTest#testTDF
[m[m23.08.2022 - 09:10:53.404 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.ExtendedBufferedReaderTest#testEmptyInput
[m[m23.08.2022 - 09:10:53.411 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead1
[m[m23.08.2022 - 09:10:53.417 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLookahead2
[m[m23.08.2022 - 09:10:53.423 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.ExtendedBufferedReaderTest#testReadLine
[m[m23.08.2022 - 09:10:53.429 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.ExtendedBufferedReaderTest#testReadChar
[m[m23.08.2022 - 09:10:53.435 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.issues.JiraCsv198Test#test
[m[m23.08.2022 - 09:10:53.440 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile0
[m[m23.08.2022 - 09:10:53.446 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl0
[m[m23.08.2022 - 09:10:53.451 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile1
[m[m23.08.2022 - 09:10:53.457 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl1
[m[m23.08.2022 - 09:10:53.462 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile2
[m[m23.08.2022 - 09:10:53.467 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl2
[m[m23.08.2022 - 09:10:53.473 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile3
[m[m23.08.2022 - 09:10:53.478 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl3
[m[m23.08.2022 - 09:10:53.483 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile4
[m[m23.08.2022 - 09:10:53.490 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl4
[m[m23.08.2022 - 09:10:53.495 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVFile5
[m[m23.08.2022 - 09:10:53.500 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFileParserTestUnParameterized#testCSVUrl5
[m[m23.08.2022 - 09:10:53.505 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsCommentStartThrowsException
[m[m23.08.2022 - 09:10:53.510 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testDelimiterSameAsEscapeThrowsException
[m[m23.08.2022 - 09:10:53.515 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testDuplicateHeaderElements
[m[m23.08.2022 - 09:10:53.519 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEquals
[m[m23.08.2022 - 09:10:53.524 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsCommentStart
[m[m23.08.2022 - 09:10:53.528 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsDelimiter
[m[m23.08.2022 - 09:10:53.533 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsEscape
[m[m23.08.2022 - 09:10:53.538 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsHeader
[m[m23.08.2022 - 09:10:53.543 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreEmptyLines
[m[m23.08.2022 - 09:10:53.547 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsIgnoreSurroundingSpaces
[m[m23.08.2022 - 09:10:53.552 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsLeftNoQuoteRightQuote
[m[m23.08.2022 - 09:10:53.557 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsNoQuotes
[m[m23.08.2022 - 09:10:53.561 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsNullString
[m[m23.08.2022 - 09:10:53.566 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsOne
[m[m23.08.2022 - 09:10:53.571 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsQuoteChar
[m[m23.08.2022 - 09:10:53.576 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsQuotePolicy
[m[m23.08.2022 - 09:10:53.580 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsRecordSeparator
[m[m23.08.2022 - 09:10:53.585 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsSkipHeaderRecord
[m[m23.08.2022 - 09:10:53.590 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEqualsWithNull
[m[m23.08.2022 - 09:10:53.594 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsException
[m[m23.08.2022 - 09:10:53.599 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testEscapeSameAsCommentStartThrowsExceptionForWrapperType
[m[m23.08.2022 - 09:10:53.604 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testFormat
[m[m23.08.2022 - 09:10:53.608 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testFormatThrowsNullPointerException
[m[m23.08.2022 - 09:10:53.613 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testGetHeader
[m[m23.08.2022 - 09:10:53.618 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testHashCodeAndWithIgnoreHeaderCase
[m[m23.08.2022 - 09:10:53.623 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testNewFormat
[m[m23.08.2022 - 09:10:53.628 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testNullRecordSeparatorCsv106
[m[m23.08.2022 - 09:10:53.633 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsException
[m[m23.08.2022 - 09:10:53.639 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType
[m[m23.08.2022 - 09:10:53.644 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testQuoteCharSameAsDelimiterThrowsException
[m[m23.08.2022 - 09:10:53.649 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testQuotePolicyNoneWithoutEscapeThrowsException
[m[m23.08.2022 - 09:10:53.654 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testRFC4180
[m[m23.08.2022 - 09:10:53.659 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testSerialization
[m[m23.08.2022 - 09:10:53.663 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testToString
[m[m23.08.2022 - 09:10:53.668 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testToStringAndWithCommentMarkerTakingCharacter
[m[m23.08.2022 - 09:10:53.673 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithCommentStart
[m[m23.08.2022 - 09:10:53.678 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithCommentStartCRThrowsException
[m[m23.08.2022 - 09:10:53.683 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithDelimiter
[m[m23.08.2022 - 09:10:53.687 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithDelimiterLFThrowsException
[m[m23.08.2022 - 09:10:53.692 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithEmptyEnum
[m[m23.08.2022 - 09:10:53.696 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithEscape
[m[m23.08.2022 - 09:10:53.701 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithEscapeCRThrowsExceptions
[m[m23.08.2022 - 09:10:53.705 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithFirstRecordAsHeader
[m[m23.08.2022 - 09:10:53.710 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithHeader
[m[m23.08.2022 - 09:10:53.715 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithHeaderComments
[m[m23.08.2022 - 09:10:53.719 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithHeaderEnum
[m[m23.08.2022 - 09:10:53.724 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithIgnoreEmptyLines
[m[m23.08.2022 - 09:10:53.729 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithIgnoreSurround
[m[m23.08.2022 - 09:10:53.733 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithNullString
[m[m23.08.2022 - 09:10:53.738 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithQuoteChar
[m[m23.08.2022 - 09:10:53.743 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithQuoteLFThrowsException
[m[m23.08.2022 - 09:10:53.747 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithQuotePolicy
[m[m23.08.2022 - 09:10:53.752 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCR
[m[m23.08.2022 - 09:10:53.756 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorCRLF
[m[m23.08.2022 - 09:10:53.761 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithRecordSeparatorLF
[m[m23.08.2022 - 09:10:53.765 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVFormatTest#testWithSystemRecordSeparator
[m[m23.08.2022 - 09:10:53.770 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.TokenMatchersTest#testHasType
[m[m23.08.2022 - 09:10:53.774 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.TokenMatchersTest#testHasContent
[m[m23.08.2022 - 09:10:53.778 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.TokenMatchersTest#testIsReady
[m[m23.08.2022 - 09:10:53.782 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.TokenMatchersTest#testMatches
[m[m23.08.2022 - 09:10:53.786 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testCloseBackwardCompatibility
[m[m23.08.2022 - 09:10:53.790 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOff
[m[m23.08.2022 - 09:10:53.795 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testCloseWithCsvFormatAutoFlushOn
[m[m23.08.2022 - 09:10:53.801 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOff
[m[m23.08.2022 - 09:10:53.805 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testCloseWithFlushOn
[m[m23.08.2022 - 09:10:53.809 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoted
[m[m23.08.2022 - 09:10:53.813 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testDelimeterQuoteNone
[m[m23.08.2022 - 09:10:53.818 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testDelimiterEscaped
[m[m23.08.2022 - 09:10:53.822 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testDelimiterPlain
[m[m23.08.2022 - 09:10:53.826 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testDisabledComment
[m[m23.08.2022 - 09:10:53.830 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testDontQuoteEuroFirstChar
[m[m23.08.2022 - 09:10:53.834 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEolEscaped
[m[m23.08.2022 - 09:10:53.839 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEolPlain
[m[m23.08.2022 - 09:10:53.843 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEolQuoted
[m[m23.08.2022 - 09:10:53.847 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash1
[m[m23.08.2022 - 09:10:53.851 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash2
[m[m23.08.2022 - 09:10:53.856 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash3
[m[m23.08.2022 - 09:10:53.860 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash4
[m[m23.08.2022 - 09:10:53.864 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEscapeBackslash5
[m[m23.08.2022 - 09:10:53.868 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEscapeNull1
[m[m23.08.2022 - 09:10:53.873 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEscapeNull2
[m[m23.08.2022 - 09:10:53.877 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEscapeNull3
[m[m23.08.2022 - 09:10:53.881 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEscapeNull4
[m[m23.08.2022 - 09:10:53.885 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testEscapeNull5
[m[m23.08.2022 - 09:10:53.889 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfArrays
[m[m23.08.2022 - 09:10:53.894 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllArrayOfLists
[m[m23.08.2022 - 09:10:53.898 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfArrays
[m[m23.08.2022 - 09:10:53.902 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testExcelPrintAllIterableOfLists
[m[m23.08.2022 - 09:10:53.906 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testExcelPrinter1
[m[m23.08.2022 - 09:10:53.911 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testExcelPrinter2
[m[m23.08.2022 - 09:10:53.915 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testHeader
[m[m23.08.2022 - 09:10:53.919 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testHeaderCommentExcel
[m[m23.08.2022 - 09:10:53.923 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testHeaderCommentTdf
[m[m23.08.2022 - 09:10:53.928 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testHeaderNotSet
[m[m23.08.2022 - 09:10:53.932 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testInvalidFormat
[m[m23.08.2022 - 09:10:53.936 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testJdbcPrinter
[m[m23.08.2022 - 09:10:53.940 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSet
[m[m23.08.2022 - 09:10:53.945 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testJdbcPrinterWithResultSetMetaData
[m[m23.08.2022 - 09:10:53.949 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvBasic
[m[m23.08.2022 - 09:10:53.953 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvCommaInValue
[m[m23.08.2022 - 09:10:53.960 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvDoubleQuoteInValue
[m[m23.08.2022 - 09:10:53.965 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testMongoDbCsvTabInValue
[m[m23.08.2022 - 09:10:53.969 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvCommaInValue
[m[m23.08.2022 - 09:10:53.974 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvTabInValue
[m[m23.08.2022 - 09:10:53.978 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testMongoDbTsvBasic
[m[m23.08.2022 - 09:10:53.983 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testMultiLineComment
[m[m23.08.2022 - 09:10:53.987 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testMySqlNullOutput
[m[m23.08.2022 - 09:10:53.992 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testMySqlNullStringDefault
[m[m23.08.2022 - 09:10:53.996 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterAppendableNullFormat
[m[m23.08.2022 - 09:10:54.000 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testNewCsvPrinterNullAppendableFormat
[m[m23.08.2022 - 09:10:54.005 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testParseCustomNullValues
[m[m23.08.2022 - 09:10:54.009 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPlainEscaped
[m[m23.08.2022 - 09:10:54.013 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPlainPlain
[m[m23.08.2022 - 09:10:54.018 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPlainQuoted
[m[m23.08.2022 - 09:10:54.022 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultCsv
[m[m23.08.2022 - 09:10:54.026 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPostgreSqlNullStringDefaultText
[m[m23.08.2022 - 09:10:54.031 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrint
[m[m23.08.2022 - 09:10:54.035 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrintCustomNullValues
[m[m23.08.2022 - 09:10:54.039 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrinter1
[m[m23.08.2022 - 09:10:54.043 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrinter2
[m[m23.08.2022 - 09:10:54.047 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrinter3
[m[m23.08.2022 - 09:10:54.051 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrinter4
[m[m23.08.2022 - 09:10:54.055 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrinter5
[m[m23.08.2022 - 09:10:54.060 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrinter6
[m[m23.08.2022 - 09:10:54.064 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrinter7
[m[m23.08.2022 - 09:10:54.068 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrintNullValues
[m[m23.08.2022 - 09:10:54.072 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrintOnePositiveInteger
[m[m23.08.2022 - 09:10:54.077 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithEmptyVector
[m[m23.08.2022 - 09:10:54.081 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrintRecordsWithObjectArray
[m[m23.08.2022 - 09:10:54.085 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithCharsetUtf16Be
[m[m23.08.2022 - 09:10:54.090 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrintToFileWithDefaultCharset
[m[m23.08.2022 - 09:10:54.094 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testPrintToPathWithDefaultCharset
[m[m23.08.2022 - 09:10:54.098 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testQuoteAll
[m[m23.08.2022 - 09:10:54.103 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testQuoteCommaFirstChar
[m[m23.08.2022 - 09:10:54.107 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testQuoteNonNumeric
[m[m23.08.2022 - 09:10:54.112 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testRandomDefault
[m[m23.08.2022 - 09:10:54.116 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testRandomExcel
[m[m23.08.2022 - 09:10:54.120 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testRandomMySql
[m[m23.08.2022 - 09:10:54.127 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testRandomRfc4180
[m[m23.08.2022 - 09:10:54.131 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testRandomTdf
[m[m23.08.2022 - 09:10:54.135 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testSingleLineComment
[m[m23.08.2022 - 09:10:54.140 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testSingleQuoteQuoted
[m[m23.08.2022 - 09:10:54.144 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordFalse
[m[m23.08.2022 - 09:10:54.148 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testSkipHeaderRecordTrue
[m[m23.08.2022 - 09:10:54.152 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testTrailingDelimiterOnTwoColumns
[m[m23.08.2022 - 09:10:54.157 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testTrimOffOneColumn
[m[m23.08.2022 - 09:10:54.161 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testTrimOnOneColumn
[m[m23.08.2022 - 09:10:54.165 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVPrinterTest#testTrimOnTwoColumns
[m[m23.08.2022 - 09:10:54.169 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.perf.PerformanceTest#testParseBigFileRepeat
[m[m23.08.2022 - 09:10:54.174 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.perf.PerformanceTest#testReadBigFile
[m[m23.08.2022 - 09:10:54.178 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withCommentMarker
[m[m23.08.2022 - 09:10:54.182 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.issues.JiraCsv164Test#testJiraCsv154_withHeaderComments
[m[m23.08.2022 - 09:10:54.186 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.issues.JiraCsv167Test#parse
[m[m23.08.2022 - 09:10:54.190 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testGetInt
[m[m23.08.2022 - 09:10:54.194 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testGetString
[m[m23.08.2022 - 09:10:54.199 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testGetStringInconsistentRecord
[m[m23.08.2022 - 09:10:54.203 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testGetStringNoHeader
[m[m23.08.2022 - 09:10:54.207 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testGetUnmappedEnum
[m[m23.08.2022 - 09:10:54.212 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testGetUnmappedName
[m[m23.08.2022 - 09:10:54.216 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testGetUnmappedNegativeInt
[m[m23.08.2022 - 09:10:54.220 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testGetUnmappedPositiveInt
[m[m23.08.2022 - 09:10:54.224 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testIsConsistent
[m[m23.08.2022 - 09:10:54.229 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testIsInconsistent
[m[m23.08.2022 - 09:10:54.233 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testIsMapped
[m[m23.08.2022 - 09:10:54.237 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testIsSet
[m[m23.08.2022 - 09:10:54.241 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testIterator
[m[m23.08.2022 - 09:10:54.245 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testPutInMap
[m[m23.08.2022 - 09:10:54.250 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testRemoveAndAddColumns
[m[m23.08.2022 - 09:10:54.254 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testToMap
[m[m23.08.2022 - 09:10:54.258 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testToMapWithShortRecord
[m[m23.08.2022 - 09:10:54.263 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVRecordTest#testToMapWithNoHeader
[m[m23.08.2022 - 09:10:54.267 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testSurroundingSpacesAreDeleted
[m[m23.08.2022 - 09:10:54.271 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testSurroundingTabsAreDeleted
[m[m23.08.2022 - 09:10:54.275 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testIgnoreEmptyLines
[m[m23.08.2022 - 09:10:54.280 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testComments
[m[m23.08.2022 - 09:10:54.284 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testCommentsAndEmptyLines
[m[m23.08.2022 - 09:10:54.288 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testBackslashWithoutEscaping
[m[m23.08.2022 - 09:10:54.292 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testBackslashWithEscaping
[m[m23.08.2022 - 09:10:54.299 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testNextToken4
[m[m23.08.2022 - 09:10:54.303 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testNextToken5
[m[m23.08.2022 - 09:10:54.307 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testNextToken6
[m[m23.08.2022 - 09:10:54.311 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testDelimiterIsWhitespace
[m[m23.08.2022 - 09:10:54.315 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testEscapedCR
[m[m23.08.2022 - 09:10:54.320 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testCR
[m[m23.08.2022 - 09:10:54.324 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testEscapedLF
[m[m23.08.2022 - 09:10:54.328 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testLF
[m[m23.08.2022 - 09:10:54.332 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testEscapedTab
[m[m23.08.2022 - 09:10:54.336 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testTab
[m[m23.08.2022 - 09:10:54.341 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testEscapedBackspace
[m[m23.08.2022 - 09:10:54.345 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testBackspace
[m[m23.08.2022 - 09:10:54.349 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testEscapedFF
[m[m23.08.2022 - 09:10:54.353 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testFF
[m[m23.08.2022 - 09:10:54.357 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testEscapedMySqlNullValue
[m[m23.08.2022 - 09:10:54.361 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testEscapedCharacter
[m[m23.08.2022 - 09:10:54.366 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testEscapedControlCharacter
[m[m23.08.2022 - 09:10:54.370 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testEscapedControlCharacter2
[m[m23.08.2022 - 09:10:54.374 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.LexerTest#testEscapingAtEOF
[m[m23.08.2022 - 09:10:54.378 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testBackslashEscaping
[m[m23.08.2022 - 09:10:54.382 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testBackslashEscaping2
[m[m23.08.2022 - 09:10:54.387 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithInputStream
[m[m23.08.2022 - 09:10:54.391 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testBOMInputStream_ParserWithReader
[m[m23.08.2022 - 09:10:54.395 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testBOMInputStream_parseWithReader
[m[m23.08.2022 - 09:10:54.399 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testCarriageReturnEndings
[m[m23.08.2022 - 09:10:54.403 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testCarriageReturnLineFeedEndings
[m[m23.08.2022 - 09:10:54.407 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testClose
[m[m23.08.2022 - 09:10:54.411 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testCSV57
[m[m23.08.2022 - 09:10:54.416 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testDefaultFormat
[m[m23.08.2022 - 09:10:54.420 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testDuplicateHeadersNotAllowed
[m[m23.08.2022 - 09:10:54.424 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testDuplicateHeadersAllowedByDefault
[m[m23.08.2022 - 09:10:54.428 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testEmptyFileHeaderParsing
[m[m23.08.2022 - 09:10:54.433 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testEmptyFile
[m[m23.08.2022 - 09:10:54.437 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorCSV
[m[m23.08.2022 - 09:10:54.441 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testEmptyLineBehaviorExcel
[m[m23.08.2022 - 09:10:54.445 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorCSV
[m[m23.08.2022 - 09:10:54.449 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testEndOfFileBehaviorExcel
[m[m23.08.2022 - 09:10:54.454 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testExcelFormat1
[m[m23.08.2022 - 09:10:54.458 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testExcelFormat2
[m[m23.08.2022 - 09:10:54.462 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testExcelHeaderCountLessThanData
[m[m23.08.2022 - 09:10:54.467 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCr
[m[m23.08.2022 - 09:10:54.474 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testFirstEndOfLineCrLf
[m[m23.08.2022 - 09:10:54.478 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testFirstEndOfLineLf
[m[m23.08.2022 - 09:10:54.483 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testForEach
[m[m23.08.2022 - 09:10:54.487 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetHeaderMap
[m[m23.08.2022 - 09:10:54.492 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetHeaderNames
[m[m23.08.2022 - 09:10:54.496 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetHeaderNamesReadOnly
[m[m23.08.2022 - 09:10:54.500 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetLine
[m[m23.08.2022 - 09:10:54.504 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCR
[m[m23.08.2022 - 09:10:54.508 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetLineNumberWithCRLF
[m[m23.08.2022 - 09:10:54.512 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetLineNumberWithLF
[m[m23.08.2022 - 09:10:54.516 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetOneLine
[m[m23.08.2022 - 09:10:54.521 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetOneLineOneParser
[m[m23.08.2022 - 09:10:54.525 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCR
[m[m23.08.2022 - 09:10:54.529 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithCRLF
[m[m23.08.2022 - 09:10:54.533 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetRecordNumberWithLF
[m[m23.08.2022 - 09:10:54.537 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithCRLF
[m[m23.08.2022 - 09:10:54.541 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetRecordPositionWithLF
[m[m23.08.2022 - 09:10:54.546 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetRecords
[m[m23.08.2022 - 09:10:54.550 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testGetRecordWithMultiLineValues
[m[m23.08.2022 - 09:10:54.554 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testHeader
[m[m23.08.2022 - 09:10:54.558 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testHeaderComment
[m[m23.08.2022 - 09:10:54.563 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testHeaderMissing
[m[m23.08.2022 - 09:10:54.567 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testHeaderMissingWithNull
[m[m23.08.2022 - 09:10:54.571 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testHeadersMissing
[m[m23.08.2022 - 09:10:54.575 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testHeadersMissingException
[m[m23.08.2022 - 09:10:54.579 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testIgnoreCaseHeaderMapping
[m[m23.08.2022 - 09:10:54.583 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testIgnoreEmptyLines
[m[m23.08.2022 - 09:10:54.588 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testInvalidFormat
[m[m23.08.2022 - 09:10:54.592 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testIterator
[m[m23.08.2022 - 09:10:54.596 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testIteratorSequenceBreaking
[m[m23.08.2022 - 09:10:54.600 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testLineFeedEndings
[m[m23.08.2022 - 09:10:54.604 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testMappedButNotSetAsOutlook2007ContactExport
[m[m23.08.2022 - 09:10:54.608 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testMultipleIterators
[m[m23.08.2022 - 09:10:54.613 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testNewCSVParserNullReaderFormat
[m[m23.08.2022 - 09:10:54.617 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testNewCSVParserReaderNullFormat
[m[m23.08.2022 - 09:10:54.621 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testNoHeaderMap
[m[m23.08.2022 - 09:10:54.625 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testParse
[m[m23.08.2022 - 09:10:54.629 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testParseFileNullFormat
[m[m23.08.2022 - 09:10:54.633 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testParseNullFileFormat
[m[m23.08.2022 - 09:10:54.637 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testParseNullPathFormat
[m[m23.08.2022 - 09:10:54.641 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testParseNullStringFormat
[m[m23.08.2022 - 09:10:54.649 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testParseNullUrlCharsetFormat
[m[m23.08.2022 - 09:10:54.653 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testParserUrlNullCharsetFormat
[m[m23.08.2022 - 09:10:54.657 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testParseStringNullFormat
[m[m23.08.2022 - 09:10:54.661 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testParseUrlCharsetNullFormat
[m[m23.08.2022 - 09:10:54.665 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testProvidedHeader
[m[m23.08.2022 - 09:10:54.670 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testProvidedHeaderAuto
[m[m23.08.2022 - 09:10:54.674 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testRoundtrip
[m[m23.08.2022 - 09:10:54.678 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testSkipAutoHeader
[m[m23.08.2022 - 09:10:54.682 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testSkipHeaderOverrideDuplicateHeaders
[m[m23.08.2022 - 09:10:54.686 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testSkipSetAltHeaders
[m[m23.08.2022 - 09:10:54.690 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testSkipSetHeader
[m[m23.08.2022 - 09:10:54.695 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testTrailingDelimiter
[m[m23.08.2022 - 09:10:54.699 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testTrim
[m[m23.08.2022 - 09:10:54.703 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.CSVParserTest#testRepeatedHeadersAreReturnedInCSVRecordHeaderNames
[m[m23.08.2022 - 09:10:54.707 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.AssertionsTest#testNotNull
[m[m23.08.2022 - 09:10:54.711 [INFO ] LineCoverageStrategy.parseXmlReport() - Reading report of org.apache.commons.csv.AssertionsTest#testNotNullNull
[m[m23.08.2022 - 09:10:54.716 [INFO ] LineCoverageStrategy.assembleReport() - Successfully created coverage report: 881 of 981 lines covered. Coverage score: 0.8980632008154944
[m[32m23.08.2022 - 09:10:54.757 [DEBUG] LineCoverageStrategy.cleanup() - Cleanup successful!
[m[m23.08.2022 - 09:10:55.196 [INFO ] CoverageReportExporter.exportToFile() - Wrote coverage report to file /home/thomas/Desktop/bachelor_thesis/bachelor_thesis/Tool/Benchmarks/results/commons-csv/lc/coverage/LineCoverageReport.cvg
[m* Coverage Calculation took 163.737 seconds
