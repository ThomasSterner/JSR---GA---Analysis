<?xml version="1.0" encoding="UTF-8"?>
<report>
  <meta>
    <nrOriginalTestCases>266</nrOriginalTestCases>
    <nrRetainedTestCases>248</nrRetainedTestCases>
    <nrRemovedTestCases>18</nrRemovedTestCases>
  </meta>
  <retainedTestCases>
    <testCase>
      <name>testGroupByAge</name>
      <className>ch.lambdaj.collection.LambdaGroupTest</className>
    </testCase>
    <testCase>
      <name>testGroupByAgeAsPersonsWithName</name>
      <className>ch.lambdaj.collection.LambdaGroupTest</className>
    </testCase>
    <testCase>
      <name>testGroupByAgeAndName</name>
      <className>ch.lambdaj.collection.LambdaGroupTest</className>
    </testCase>
    <testCase>
      <name>testGroupAndSubgroup</name>
      <className>ch.lambdaj.collection.LambdaGroupTest</className>
    </testCase>
    <testCase>
      <name>testWithTransaction</name>
      <className>ch.lambdaj.DelayedClosureTest</className>
    </testCase>
    <testCase>
      <name>testMyGrep</name>
      <className>ch.lambdaj.DelayedClosureTest</className>
    </testCase>
    <testCase>
      <name>testStressParameterlessFilter</name>
      <className>ch.lambdaj.PrimitiveReferenceTest</className>
    </testCase>
    <testCase>
      <name>testStressPrimitiveParameterFilter</name>
      <className>ch.lambdaj.PrimitiveReferenceTest</className>
    </testCase>
    <testCase>
      <name>testStressParameterFilter</name>
      <className>ch.lambdaj.PrimitiveReferenceTest</className>
    </testCase>
    <testCase>
      <name>testAggregateGrossPremium</name>
      <className>ch.lambdaj.function.aggregate.AggregateTest</className>
    </testCase>
    <testCase>
      <name>callsFromConstructorAreForwarded</name>
      <className>ch.lambdaj.ConstructorBugTest</className>
    </testCase>
    <testCase>
      <name>testExecSwitch</name>
      <className>ch.lambdaj.SwitcherTest</className>
    </testCase>
    <testCase>
      <name>testExecAllSwitch</name>
      <className>ch.lambdaj.SwitcherTest</className>
    </testCase>
    <testCase>
      <name>testSwitchOnPersons</name>
      <className>ch.lambdaj.SwitcherTest</className>
    </testCase>
    <testCase>
      <name>testSwitchAsFactory</name>
      <className>ch.lambdaj.SwitcherTest</className>
    </testCase>
    <testCase>
      <name>testForEach</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testSelectPersonWith4LettersName</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testSortOnAge</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testFindOldest</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testRetainWithHaving</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testSelectDistinctAge</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testSelectDistinct</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testRemoveNull</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testReplace</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testProjectDto</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testTypedSumMinMax</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testTypedSum2</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testExtractAges</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testSelectFirst</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testExists</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testAll</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testSelectUnique</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testSelectStringsThatEndsWithD</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testJoin</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testJoinFrom</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testExtract</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testConvert</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testConvertMap</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testIndex</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testPrintFile</name>
      <className>ch.lambdaj.function.closure.FileParserImplicitClosureTest</className>
    </testCase>
    <testCase>
      <name>testReadFile</name>
      <className>ch.lambdaj.function.closure.FileParserImplicitClosureTest</className>
    </testCase>
    <testCase>
      <name>testCreateArgumentPlaceholder</name>
      <className>ch.lambdaj.function.argument.ArgumentsFactoryTest</className>
    </testCase>
    <testCase>
      <name>testCreateArgumentPlaceholderForUnknownClass</name>
      <className>ch.lambdaj.function.argument.ArgumentsFactoryTest</className>
    </testCase>
    <testCase>
      <name>testArgumentsFactoryForFinalClasses</name>
      <className>ch.lambdaj.function.argument.ArgumentsFactoryTest</className>
    </testCase>
    <testCase>
      <name>testProject</name>
      <className>ch.lambdaj.function.argument.InvocationSequenceTest</className>
    </testCase>
    <testCase>
      <name>testArgument</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testForEach</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testForEachThrowingException</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testForEachOnIterator</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testForEachOnArray</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testFailingForEach</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testIllegalForEach</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectOnNull</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectPersonWith4LettersName</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testFilterPersonWith4LettersName</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSortOnAgeWithNull</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSortOnAgeArgument</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSortIgnoreCase</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testFindOldest</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testFindOldestOnArray</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSortOnNameLenght</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectWithHaving</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectIteratorWithHaving</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectOnForEach</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectWithHavingInOr</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectDistinctAge</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectDistinctOnAge</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testArgumentIdentity</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectOnBooleanWithHaving</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectOnFailingMethod</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectOnDateWithHaving</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectOnEnumMustFailWithHaving</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testProject</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testInvalidProjectDto</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testFilter</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testFilterArray</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testFilterOnCustomMatcher</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testFilterWithHaving</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testRepeatedSum</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testIllegalSumFrom</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSumOnEmptyList</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSumMinMaxFrom</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSumInteger</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSumBigDecimal</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testAvg</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testEmptySumMinMaxFrom</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testPlainSumMinMaxFrom</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testTypedSumMinMax</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testTypedSum2</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testTypedMixedSums</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testFlatten1</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testFlatten2</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testCollectAges</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testInvalidCollect</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectUnique</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectFirst</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectStringsThatEndsWithD</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectDistinct</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testJoin</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testJoinFrom</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testEmptyJoinFrom</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSelectFranceExposures</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testConcatUsingMockedString</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testJoinStrings</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testJoinEmptyStringWithSeparatorAlwaysProduceEmptyString</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testExtract</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testExtractIterator</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testNullSafeExtract</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testExtractString</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testExtractProperty</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testConvert</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testConvertMap</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testCount</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testStringPropertyExtractor</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testNestedStringPropertyExtractor</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testIndex</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSumBigDecimalOnEmptyList</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testExists</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testFloatArgument</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>when_selecting_first_element_for_relation_smell_query_should_not_throw</name>
      <className>ch.lambdaj.proxy.nodefconstructor.problem.RelationSmellQuery</className>
    </testCase>
    <testCase>
      <name>testReadFile</name>
      <className>ch.lambdaj.function.closure.FileParserClosureTest</className>
    </testCase>
    <testCase>
      <name>testCountFile</name>
      <className>ch.lambdaj.function.closure.FileParserClosureTest</className>
    </testCase>
    <testCase>
      <name>testByCriteria</name>
      <className>ch.lambdaj.group.GroupsTest</className>
    </testCase>
    <testCase>
      <name>testGroupByCountry</name>
      <className>ch.lambdaj.group.GroupsTest</className>
    </testCase>
    <testCase>
      <name>testGroupByInsuredName</name>
      <className>ch.lambdaj.group.GroupsTest</className>
    </testCase>
    <testCase>
      <name>testGroupByCountryAndInsuredName</name>
      <className>ch.lambdaj.group.GroupsTest</className>
    </testCase>
    <testCase>
      <name>testGroupTypedByCountryAndInsuredName</name>
      <className>ch.lambdaj.group.GroupsTest</className>
    </testCase>
    <testCase>
      <name>testGroupByAge</name>
      <className>ch.lambdaj.group.TypedGroupByTest</className>
    </testCase>
    <testCase>
      <name>testGroupByAgeAsPersons</name>
      <className>ch.lambdaj.group.TypedGroupByTest</className>
    </testCase>
    <testCase>
      <name>testGroupByAgeAsPersonsWithFirstName</name>
      <className>ch.lambdaj.group.TypedGroupByTest</className>
    </testCase>
    <testCase>
      <name>testGroupByAgeAsPersonsWithName</name>
      <className>ch.lambdaj.group.TypedGroupByTest</className>
    </testCase>
    <testCase>
      <name>testGroupByAgeAndName</name>
      <className>ch.lambdaj.group.TypedGroupByTest</className>
    </testCase>
    <testCase>
      <name>testGroupAndSubgroup</name>
      <className>ch.lambdaj.group.TypedGroupByTest</className>
    </testCase>
    <testCase>
      <name>test1</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testSet</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testIterable</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>test2</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testPredicate</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>test4</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testConcatNull1</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testConcatNull2</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testConcatNull3</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testMap</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testMap1</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testList</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testNonCloneableMap</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testIterateAfterModifyCollection</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testSumNumberAndInteger</name>
      <className>ch.lambdaj.function.aggregate.SumTest</className>
    </testCase>
    <testCase>
      <name>testSumNumberAndLong</name>
      <className>ch.lambdaj.function.aggregate.SumTest</className>
    </testCase>
    <testCase>
      <name>testSumNumberAndDouble</name>
      <className>ch.lambdaj.function.aggregate.SumTest</className>
    </testCase>
    <testCase>
      <name>testWithEmptyListAndUnboundVar</name>
      <className>ch.lambdaj.ClosureSpecialCasesTest</className>
    </testCase>
    <testCase>
      <name>testWithEmptyListOnly</name>
      <className>ch.lambdaj.ClosureSpecialCasesTest</className>
    </testCase>
    <testCase>
      <name>testWithNonEmptyListOnly</name>
      <className>ch.lambdaj.ClosureSpecialCasesTest</className>
    </testCase>
    <testCase>
      <name>testWithFixedClassArgument</name>
      <className>ch.lambdaj.ClosureSpecialCasesTest</className>
    </testCase>
    <testCase>
      <name>testWithFreeClassArgument</name>
      <className>ch.lambdaj.ClosureSpecialCasesTest</className>
    </testCase>
    <testCase>
      <name>test1</name>
      <className>ch.lambdaj.collection.LambdaIteratorTest</className>
    </testCase>
    <testCase>
      <name>testConcatNull1</name>
      <className>ch.lambdaj.collection.LambdaIteratorTest</className>
    </testCase>
    <testCase>
      <name>testConcatNull2</name>
      <className>ch.lambdaj.collection.LambdaIteratorTest</className>
    </testCase>
    <testCase>
      <name>testConcatNull3</name>
      <className>ch.lambdaj.collection.LambdaIteratorTest</className>
    </testCase>
    <testCase>
      <name>testMap</name>
      <className>ch.lambdaj.collection.LambdaIteratorTest</className>
    </testCase>
    <testCase>
      <name>testMap1</name>
      <className>ch.lambdaj.collection.LambdaIteratorTest</className>
    </testCase>
    <testCase>
      <name>testMap2</name>
      <className>ch.lambdaj.collection.LambdaIteratorTest</className>
    </testCase>
    <testCase>
      <name>testIterator</name>
      <className>ch.lambdaj.collection.LambdaIteratorTest</className>
    </testCase>
    <testCase>
      <name>testIteratorExtract</name>
      <className>ch.lambdaj.collection.LambdaIteratorTest</className>
    </testCase>
    <testCase>
      <name>testRetainKeys</name>
      <className>ch.lambdaj.collection.LambdaMapTest</className>
    </testCase>
    <testCase>
      <name>testRemoveKeys</name>
      <className>ch.lambdaj.collection.LambdaMapTest</className>
    </testCase>
    <testCase>
      <name>testRetainValues</name>
      <className>ch.lambdaj.collection.LambdaMapTest</className>
    </testCase>
    <testCase>
      <name>testRemoveValues</name>
      <className>ch.lambdaj.collection.LambdaMapTest</className>
    </testCase>
    <testCase>
      <name>testChangeMapValues</name>
      <className>ch.lambdaj.collection.LambdaMapTest</className>
    </testCase>
    <testCase>
      <name>testMap</name>
      <className>ch.lambdaj.collection.LambdaMapTest</className>
    </testCase>
    <testCase>
      <name>testNonCloneableMap</name>
      <className>ch.lambdaj.collection.LambdaMapTest</className>
    </testCase>
    <testCase>
      <name>testHasNestedProperty</name>
      <className>ch.lambdaj.function.matcher.HasNestedPropertyWithValueTest</className>
    </testCase>
    <testCase>
      <name>testGroupByInsuredName</name>
      <className>ch.lambdaj.group.GroupByTest</className>
    </testCase>
    <testCase>
      <name>testGroupByInsuredNameAndCountryName</name>
      <className>ch.lambdaj.group.GroupByTest</className>
    </testCase>
    <testCase>
      <name>testGroupByInsuredNameAsExposures</name>
      <className>ch.lambdaj.group.GroupByTest</className>
    </testCase>
    <testCase>
      <name>testGroupByCountryName</name>
      <className>ch.lambdaj.group.GroupByTest</className>
    </testCase>
    <testCase>
      <name>testGroupByCountryNameAsCode</name>
      <className>ch.lambdaj.group.GroupByTest</className>
    </testCase>
    <testCase>
      <name>testGroupByCountryNameAndInsuredName</name>
      <className>ch.lambdaj.group.GroupByTest</className>
    </testCase>
    <testCase>
      <name>testGroupByCountryNameAsExposures</name>
      <className>ch.lambdaj.group.GroupByTest</className>
    </testCase>
    <testCase>
      <name>testPrintAllBrands</name>
      <className>ch.lambdaj.demo.LambdaDemoTest</className>
    </testCase>
    <testCase>
      <name>testFindAllSalesOfAFerrari</name>
      <className>ch.lambdaj.demo.LambdaDemoTest</className>
    </testCase>
    <testCase>
      <name>testFindAllBuysOfYoungestPerson</name>
      <className>ch.lambdaj.demo.LambdaDemoTest</className>
    </testCase>
    <testCase>
      <name>testFindMostCostlySaleValue</name>
      <className>ch.lambdaj.demo.LambdaDemoTest</className>
    </testCase>
    <testCase>
      <name>testSumSalesCostWhereBothActorsAreAMale</name>
      <className>ch.lambdaj.demo.LambdaDemoTest</className>
    </testCase>
    <testCase>
      <name>testFindYoungestAgeOfWhoBoughtACarForMoreThan50000</name>
      <className>ch.lambdaj.demo.LambdaDemoTest</className>
    </testCase>
    <testCase>
      <name>testSortSalesByCost</name>
      <className>ch.lambdaj.demo.LambdaDemoTest</className>
    </testCase>
    <testCase>
      <name>testExtractCarsOriginalCost</name>
      <className>ch.lambdaj.demo.LambdaDemoTest</className>
    </testCase>
    <testCase>
      <name>testIndexCarsByBrand</name>
      <className>ch.lambdaj.demo.LambdaDemoTest</className>
    </testCase>
    <testCase>
      <name>testGroupSalesByBuyersAndSellers</name>
      <className>ch.lambdaj.demo.LambdaDemoTest</className>
    </testCase>
    <testCase>
      <name>testGroupSalesByBuyersSortedByAge</name>
      <className>ch.lambdaj.demo.LambdaDemoTest</className>
    </testCase>
    <testCase>
      <name>testFindMostBoughtCar</name>
      <className>ch.lambdaj.demo.LambdaDemoTest</className>
    </testCase>
    <testCase>
      <name>testSystemOut</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testOnList</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testOnArray</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testTypedOnList</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testTypedOnArray</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testAddOnInteger</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testDo4OnInt</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testUntypedDo4OnInt</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testDo2OnInt</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testCurry</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testCast</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testWrongCurry</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testWrongCast</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testClosureOnNonFinalArgument</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testClosureOnClass</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testNoThreadLocalClosureOnClass</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testReturningClosureOnClass</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testWrongClosureOnClass</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>tesStaticClosure</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>tesFinalClosure</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>tesFinalClosureWithParams</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testNotExistingMethod</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testToStringAsClosure</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testInvocationOnVar</name>
      <className>ch.lambdaj.ClosureTest</className>
    </testCase>
    <testCase>
      <name>testInvalidIterator</name>
      <className>ch.lambdaj.util.iterator.IteratorFactoryTest</className>
    </testCase>
    <testCase>
      <name>testResettableIteratorOnIterator</name>
      <className>ch.lambdaj.util.iterator.IteratorFactoryTest</className>
    </testCase>
    <testCase>
      <name>testPrintAllBrands</name>
      <className>ch.lambdaj.demo.LambdaListDemoTest</className>
    </testCase>
    <testCase>
      <name>testFindAllSalesOfAFerrari</name>
      <className>ch.lambdaj.demo.LambdaListDemoTest</className>
    </testCase>
    <testCase>
      <name>testFindAllBuysOfYoungestPerson</name>
      <className>ch.lambdaj.demo.LambdaListDemoTest</className>
    </testCase>
    <testCase>
      <name>testFindMostCostlySaleValue</name>
      <className>ch.lambdaj.demo.LambdaListDemoTest</className>
    </testCase>
    <testCase>
      <name>testSumSalesCostWhereBothActorsAreAMale</name>
      <className>ch.lambdaj.demo.LambdaListDemoTest</className>
    </testCase>
    <testCase>
      <name>testFindYoungestAgeOfWhoBoughtACarForMoreThan50000</name>
      <className>ch.lambdaj.demo.LambdaListDemoTest</className>
    </testCase>
    <testCase>
      <name>testSortSalesByCost</name>
      <className>ch.lambdaj.demo.LambdaListDemoTest</className>
    </testCase>
    <testCase>
      <name>testExtractCarsOriginalCost</name>
      <className>ch.lambdaj.demo.LambdaListDemoTest</className>
    </testCase>
    <testCase>
      <name>testIndexCarsByBrand</name>
      <className>ch.lambdaj.demo.LambdaListDemoTest</className>
    </testCase>
    <testCase>
      <name>testGroupSalesByBuyersAndSellers</name>
      <className>ch.lambdaj.demo.LambdaListDemoTest</className>
    </testCase>
    <testCase>
      <name>testGroupSalesByBuyersSortedByAge</name>
      <className>ch.lambdaj.demo.LambdaListDemoTest</className>
    </testCase>
    <testCase>
      <name>testFindMostBoughtCar</name>
      <className>ch.lambdaj.demo.LambdaListDemoTest</className>
    </testCase>
    <testCase>
      <name>testLesserFirst</name>
      <className>ch.lambdaj.function.aggregate.MaxTest</className>
    </testCase>
    <testCase>
      <name>testGreaterFirst</name>
      <className>ch.lambdaj.function.aggregate.MaxTest</className>
    </testCase>
    <testCase>
      <name>testCreatingArgumentFromArray</name>
      <className>ch.lambdaj.function.argument.CreatingArgumentFromArrayTest</className>
    </testCase>
    <testCase>
      <name>testConcatStrings</name>
      <className>ch.lambdaj.function.aggregate.ConcatTest</className>
    </testCase>
    <testCase>
      <name>testConcatStringAndNumber</name>
      <className>ch.lambdaj.function.aggregate.ConcatTest</className>
    </testCase>
    <testCase>
      <name>testConcatStringAndNull</name>
      <className>ch.lambdaj.function.aggregate.ConcatTest</className>
    </testCase>
    <testCase>
      <name>testConcatNull</name>
      <className>ch.lambdaj.function.aggregate.ConcatTest</className>
    </testCase>
    <testCase>
      <name>testHaving</name>
      <className>ch.lambdaj.function.matcher.HasArgumentWithValueTest</className>
    </testCase>
    <testCase>
      <name>testLesserFirst</name>
      <className>ch.lambdaj.function.aggregate.MinTest</className>
    </testCase>
    <testCase>
      <name>testGreaterFirst</name>
      <className>ch.lambdaj.function.aggregate.MinTest</className>
    </testCase>
    <testCase>
      <name>test1</name>
      <className>ch.lambdaj.collection.LambdaCollectionTest</className>
    </testCase>
    <testCase>
      <name>test2</name>
      <className>ch.lambdaj.collection.LambdaCollectionTest</className>
    </testCase>
    <testCase>
      <name>test3</name>
      <className>ch.lambdaj.collection.LambdaCollectionTest</className>
    </testCase>
    <testCase>
      <name>testConcatNull1</name>
      <className>ch.lambdaj.collection.LambdaCollectionTest</className>
    </testCase>
    <testCase>
      <name>testMap</name>
      <className>ch.lambdaj.collection.LambdaCollectionTest</className>
    </testCase>
    <testCase>
      <name>testMap1</name>
      <className>ch.lambdaj.collection.LambdaCollectionTest</className>
    </testCase>
    <testCase>
      <name>testMap2</name>
      <className>ch.lambdaj.collection.LambdaCollectionTest</className>
    </testCase>
    <testCase>
      <name>testCollection</name>
      <className>ch.lambdaj.collection.LambdaCollectionTest</className>
    </testCase>
    <testCase>
      <name>testSimpleGet</name>
      <className>ch.lambdaj.ArgumentCornerCaseTest</className>
    </testCase>
  </retainedTestCases>
  <removedTestCases>
    <testCase>
      <name>testForEachForProxy</name>
      <className>ch.lambdaj.collection.LambdaCollectionsTest</className>
    </testCase>
    <testCase>
      <name>testProxyNoDefaultConstructor</name>
      <className>ch.lambdaj.proxy.nodefconstructor.ProxyNoDefaultConstructorTest</className>
    </testCase>
    <testCase>
      <name>testCountFile</name>
      <className>ch.lambdaj.function.closure.FileParserImplicitClosureTest</className>
    </testCase>
    <testCase>
      <name>testSpeculation</name>
      <className>ch.lambdaj.function.closure.FaillingClosureTest</className>
    </testCase>
    <testCase>
      <name>verifyEquals</name>
      <className>ch.lambdaj.function.argument.InvocationSequenceTest</className>
    </testCase>
    <testCase>
      <name>testForEachForProxy</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testForEachWithNoEmptyConstructor</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testSortOnAge</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testProjectDto</name>
      <className>ch.lambdaj.LambdaTest</className>
    </testCase>
    <testCase>
      <name>testPrintFile</name>
      <className>ch.lambdaj.function.closure.FileParserClosureTest</className>
    </testCase>
    <testCase>
      <name>test3</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testMap2</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testForEachAfterModifyCollection</name>
      <className>ch.lambdaj.collection.LambdaListTest</className>
    </testCase>
    <testCase>
      <name>testSumNull</name>
      <className>ch.lambdaj.function.aggregate.SumTest</className>
    </testCase>
    <testCase>
      <name>testSumNumberAndFloat</name>
      <className>ch.lambdaj.function.aggregate.SumTest</className>
    </testCase>
    <testCase>
      <name>testWithNonEmptyListAndUnboundVar</name>
      <className>ch.lambdaj.ClosureSpecialCasesTest</className>
    </testCase>
    <testCase>
      <name>testGroupByCountryNameAsCountries</name>
      <className>ch.lambdaj.group.GroupByTest</className>
    </testCase>
    <testCase>
      <name>testShallReplayChainedMethodCalls</name>
      <className>ch.lambdaj.ClosureVoidMethodInvocationTest</className>
    </testCase>
  </removedTestCases>
</report>
